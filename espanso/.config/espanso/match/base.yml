# espanso match file

# For a complete introduction, visit the official docs at: https://espanso.org/docs/

# You can use this file to define the base matches (aka snippets)
# that will be available in every application when using espanso.

# Matches are substitution rules: when you type the "trigger" string
# qqquantumself@gmail.com
# it gets replaced by the "replace" string.
#
imports:
  - "./private/sunnyside.yml"

matches:
  - trigger: ":agm"
    replace: "aquawolf369@gmail.com"

  - trigger: ":wstream"
    replace: "Wholeness & balanced Vibrations! Welcome to stream ðŸ™Œ"

  # Dotfiles
  - trigger: ":dotfiles"
    replace: "https://github.com/0xAquaWolf/AquaFiles"

  - trigger: ":akit"
    replace: "https://github.com/0xAquaWolf/AquaKit"

  - trigger: ":agh"
    replace: "https://github.com/0xAquaWolf/"

  # youtube link
  - trigger: ":ayt"
    replace: "https://www.youtube.com/@0xAquaWolf"

  # twitter
  - trigger: ":ax"
    replace: "https://www.x.com/@0xAquaWolf"

  # discord
  - trigger: ":discord"
    replace: "https://discord.gg/Y5gvYaw2k5"

  # convex
  - trigger: ":convex"
    replace: "https://convex.dev/referral/0XAQUA9256"

  # fire
  - trigger: ":fire"
    replace: "ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥"

  # --- Main: :dt (dash title via fish) -----------------------------------------
  - trigger: ":dt"
    replace: "{{slug}}"
    vars:
      - name: clip
        type: clipboard
      - name: slug
        type: shell
        params:
          # Use absolute path to fish. On Apple Silicon it's usually /opt/homebrew/bin/fish.
          # On Intel it's usually /usr/local/bin/fish.
          cmd: /opt/homebrew/bin/fish
          env:
            CLIP: "{{clip}}"
          args:
            - -c
            - 'source ~/.config/fish/functions/slugtitle.fish; slugtitle -- "$CLIP"'

  # --- Debug: :dtcheck (shows length + slug) ---------------------------------
  - trigger: ":dtcheck"
    replace: "clip={{len}} chars | slug={{slug}}"
    vars:
      - name: clip
        type: clipboard
      - name: len
        type: shell
        params:
          cmd: bash
          env:
            CLIP: "{{clip}}"
          args:
            - -lc
            - |
              printf "%s" "$CLIP" | wc -c | tr -d " "
      - name: slug
        type: shell
        params:
          cmd: bash
          env:
            CLIP: "{{clip}}"
          args:
            - -lc
            - $HOME/.config/espanso/scripts/slugify_clipboard.sh

  # --- Inline fallback (no external script): :dt_inline ----------------------
  - trigger: ":dt_inline"
    replace: "{{slug_inline}}"
    vars:
      - name: clip
        type: clipboard
      - name: slug_inline
        type: shell
        params:
          cmd: bash
          env:
            CLIP: "{{clip}}"
          args:
            - -lc
            - |
              printf "%s" "$CLIP" \
                | tr '[:upper:]' '[:lower:]' \
                | sed -E 's/[^a-z0-9]+/-/g; s/^-+|-+$//g'

  # send i'm live alert on discord
  - trigger: ":live"
    replace: "@everyone ðŸš¨ I am live ðŸš¨: {{clipboard}}"
    vars:
      - name: clipboard
        type: clipboard

  # clear psql terminal
  - trigger: ":psqlc"
    replace: "\\! clear"

  - trigger: :trackvid
    replace: |
      - [ ] Recording Now
      Finished Recording
      Compressed
  - trigger: ":lesson"
    replace: |
      # Lesson
      # Materials
      # Lecture
      # Resources
  # But matches can also be dynamic:
  # Print the current date
  - trigger: ":date"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%m-%d-%Y"

  # Print the current date
  - trigger: ":time"
    replace: "{{mytime}}"
    vars:
      - name: mytime
        type: date
        params:
          format: "%H:%M"

  # Print the output of a shell command
  - trigger: ":shell"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "echo 'Hello from your shell'"
