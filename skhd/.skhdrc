# === blacklist apps ===
.blacklist [
    "qutebrowser"
    "google chrome"
    "arc"
    "Brave Browser"
    "Obsidian"
    "Final Cut Pro"
]

# === App launch commands ===
cmd - return : open -n -a "wezterm.app"
cmd + shift - return : open -n ~

# TODO: figure out window resizing

# === window focus ===
cmd - h : yabai -m window --focus west
cmd - j : yabai -m window --focus south
cmd - k : yabai -m window --focus north
cmd - l : yabai -m window --focus east

# === swap windows ===
ctrl + cmd - j : yabai -m window --swap south
ctrl + cmd - k : yabai -m window --swap north
ctrl + cmd - h : yabai -m window --swap west
ctrl + cmd - l : yabai -m window --swap east

# === warp windows (maintain relative tiling) ===
ctrl + alt - j : yabai -m window --warp south
ctrl + alt - k : yabai -m window --warp north
ctrl + alt - h : yabai -m window --warp west
ctrl + alt - l : yabai -m window --warp east

# === send window to desktop and follow focus ===

shift + alt - x : yabai -m window --space recent && yabai -m space --focus recent
shift + alt - z : yabai -m window --space prev && yabai -m space --focus prev
shift + alt - c : yabai -m window --space next && yabai -m space --focus next
shift + alt - 1 : yabai -m window --space  1 && yabai -m space --focus 1
shift + alt - 2 : yabai -m window --space  2 && yabai -m space --focus 2
shift + alt - 3 : yabai -m window --space  3 && yabai -m space --focus 3
shift + alt - 4 : yabai -m window --space  4 && yabai -m space --focus 4
shift + alt - 5 : yabai -m window --space  5 && yabai -m space --focus 5
shift + alt - 6 : yabai -m window --space  6 && yabai -m space --focus 6
shift + alt - 7 : yabai -m window --space  7 && yabai -m space --focus 7
shift + alt - 8 : yabai -m window --space  8 && yabai -m space --focus 8
shift + alt - 9 : yabai -m window --space  9 && yabai -m space --focus 9
shift + alt - 0 : yabai -m window --space 10 && yabai -m space --focus 10

# move floating window
shift + ctrl - left : yabai -m window --move rel:-30:0
shift + ctrl - down : yabai -m window --move rel:0:30
shift + ctrl - up : yabai -m window --move rel:0:-30
shift + ctrl - right: yabai -m window --move rel:30:0

# increase window size
# shift + alt - h : yabai -m window --resize left:-20:0
# shift + alt - j : yabai -m window --resize bottom:0:-20
# shift + alt - k : yabai -m window --resize top:0:-20
# shift + alt - l : yabai -m window --resize right:20:0

# decrease window size
shift + cmd - h : yabai -m window --resize left:-20:0
shift + cmd - j : yabai -m window --resize bottom:0:-20
shift + cmd - k : yabai -m window --resize top:0:20
shift + cmd - l : yabai -m window --resize right:20:0

# set insertion point in focused container (this is like i3 where you specify where the next window should tile)
# ctrl + alt - h : yabai -m window --insert west
# ctrl + alt - j : yabai -m window --insert south
# ctrl + alt - k : yabai -m window --insert north
# ctrl + alt - l : yabai -m window --insert east
# ctrl + alt - i : yabai -m window --insert stack

# === Layout ===

# toggle sticky and pip top right
 alt - p : yabai -m window --toggle sticky; yabai -m window --grid 5:5:4:0:1:1

# toggle sticky on currently active window
alt - s : yabai -m window --toggle sticky

# float / unfloat window and restore position
alt - t : yabai -m window --toggle float --grid 4:4:1:1:2:2

# toggle topmost (keep above other windows)
alt - o : yabai -m window --toggle topmost

# toggle picture-in-picture
alt - p : yabai -m window --toggle border --toggle pip

# modifying current layout
shift + alt - r : yabai -m space --rotate 270
# filp along y-axis
shift + alt - y : yabai -m space --mirror y-axis
# flip along x-axis
shift + alt - x : yabai -m space --mirror y-axis
# balance out tree of windows (reset to default)
shift + cmd - b : yabai -m space --balance

# Make window native fullscreen
shift + alt - f : yabai -m window --toggle zoom-fullscreen
shift + alt - m : yabai -m window --toggle native-fullscreen

# toggle window float
shift + alt - f: yabai -m window --toggle float --grid 4:4:1:1:2:2

# make floating window fill screen
shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1

# change layout of desktop
ctrl + alt - a : yabai -m space --layout bsp
ctrl + alt - d : yabai -m space --layout float
ctrl + alt - s : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" else "bsp" end')

# === Manage yabai ===
ctrl + alt + cmd - y : yabai --restart-service; # y for yabai so Restart yabai
ctrl + alt + cmd - o : yabai --stop-service; # o for stOp
ctrl + alt + cmd - s : yabai --start-service; # o for stOp

# === System State Management ===
# lock screen
# cmd - escape : pmset displaysleepnow
# # logout
# cmd + shift - e : osascript -e 'tell app "System Events" to log out'
#
# # power down 
# cmd + shift - p : osascript -e 'tell app "System Events" to shut down'
#
# # reboot
# cmd + shift - b : osascript -e 'tell app "System Events" to restart'
#
# # sleep
# cmd + shift - s : osascript -e 'tell app "System Events" to sleep'


# Extras

### Swap/move window on multiple displays
#   (options: north, east, south, west)
# alt + shift - h : yabai -m window --swap west  || $(yabai -m window --display west; yabai -m display --focus west)
# alt + shift - j : yabai -m window --swap south || $(yabai -m window --display south; yabai -m display --focus south)
# alt + shift - k : yabai -m window --swap north || $(yabai -m window --display north; yabai -m display --focus north)
# alt + shift - l : yabai -m window --swap east  || $(yabai -m window --display east; yabai -m display --focus east)

# focus monitor
# ctrl + alt - x  : yabai -m display --focus recent
# ctrl + alt - z  : yabai -m display --focus prev
# ctrl + alt - c  : yabai -m display --focus next
# ctrl + alt - 1  : yabai -m display --focus 1
# ctrl + alt - 2  : yabai -m display --focus 2
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
# ctrl + cmd - x  : yabai -m window --display recent && yabai -m display --focus recent
# ctrl + cmd - z  : yabai -m window --display prev && yabai -m display --focus prev
# ctrl + cmd - c  : yabai -m window --display next && yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1 && yabai -m display --focus 1
# ctrl + cmd - 2  : yabai -m window --display 2 && yabai -m display --focus 2
# ctrl + cmd - 3  : yabai -m window --display 3 && yabai -m display --focus 3

# set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west
# ctrl + alt - j : yabai -m window --insert south
# ctrl + alt - k : yabai -m window --insert north
# ctrl + alt - l : yabai -m window --insert east
# ctrl + alt - i : yabai -m window --insert stack

# # toggle desktop offset
# alt - a : yabai -m space --toggle padding --toggle gap
#
# # toggle window parent zoom
# alt - d : yabai -m window --toggle zoom-parent
#
# # toggle window fullscreen zoom
# alt - f : yabai -m window --toggle zoom-fullscreen
#
# # toggle window native fullscreen
# shift + alt - f : yabai -m window --toggle native-fullscreen
# toggle window split type
# alt - e : yabai -m window --toggle split

# === Desktop Space Management ===

# create space
# hyper - n : yabai -m space --create; \ sketchybar --update

# destroy current space
# hyper - d : yabai -m space --desotry

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && \
#                    index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                    yabai -m window --space "${index}" && \
#                    yabai -m space --focus "${index}"

# create desktop and follow focus - uses jq for parsing json (brew install jq)
# cmd + alt - n : yabai -m space --create && \
#                  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                  yabai -m space --focus "${index}"


# fast focus desktop
# cmd + alt - x : yabai -m space --focus recent
# cmd + alt - z : yabai -m space --focus prev || skhd -k "ctrl + alt + cmd - z"
# cmd + alt - c : yabai -m space --focus next || skhd -k "ctrl + alt + cmd - c"
# cmd + alt - 1 : yabai -m space --focus  1 || skhd -k "ctrl + alt + cmd - 1"
# cmd + alt - 2 : yabai -m space --focus  2 || skhd -k "ctrl + alt + cmd - 2"
# cmd + alt - 3 : yabai -m space --focus  3 || skhd -k "ctrl + alt + cmd - 3"
# cmd + alt - 4 : yabai -m space --focus  4 || skhd -k "ctrl + alt + cmd - 4"
# cmd + alt - 5 : yabai -m space --focus  5 || skhd -k "ctrl + alt + cmd - 5"
# cmd + alt - 6 : yabai -m space --focus  6 || skhd -k "ctrl + alt + cmd - 6"
# cmd + alt - 7 : yabai -m space --focus  7 || skhd -k "ctrl + alt + cmd - 7"
# cmd + alt - 8 : yabai -m space --focus  8 || skhd -k "ctrl + alt + cmd - 8"
# cmd + alt - 9 : yabai -m space --focus  9 || skhd -k "ctrl + alt + cmd - 9"
# cmd + alt - 0 : yabai -m space --focus 10 || skhd -k "ctrl + alt + cmd - 0"
#
# how to run a command from a definition
# open mpv with url from clipboard
# shift + cmd - m : mpv $(pbpaste)
