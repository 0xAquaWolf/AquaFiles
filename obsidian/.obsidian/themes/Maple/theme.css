@charset "UTF-8";
/* #region [style settings] */
/* @settings

name: 🛠️ Maple Basic Setting
id: maple-basic
settings:
    -
        id: setting-animation-time
        title: animation duration (ms)
        title.zh: 动画持续时间（毫秒）
        type: variable-number-slider
        format: ms
        default: 200
        min: 0
        max: 500
        step: 50
    -
        id: color-use-custom
        title: use custom accent color
        description: use style setting accent color instead of Obsidian's accent color
        title.zh: 自定义 accent color
        description.zh: 使用 style setting 的颜色，而不是 Obsidian 自带的颜色
        type: class-toggle
    -
        id: color-accent-light
        title: light mode
        title.zh: 浅色模式
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-accent-h-light
        title: base color
        title.zh: 基础颜色
        type: variable-number-slider
        default: 35
        min: 0
        max: 360
        step: 5
    -
        id: color-active-light
        title: highlight color
        title.zh: 高亮颜色
        type: class-select
        allowEmpty: false
        default: color-active-default-light
        options:
            -   label: accent color
                value: color-active-default-light
            -   label: accent color alt
                value: color-active-alt-light
            -   label: custom
                value: color-active-custom-light
    -
        id: setting-color-active-custom-light
        title: custom highlight color
        title.zh: 自定义高亮颜色
        type: variable-color
        format: rgb
        default: '#'
        opacity: false
    -
        id: color-more-light
        title: more configuration
        title.zh: 更多设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-accent-s-light
        title: accent color saturation
        description: s of hsl
        title.zh: 高亮颜色饱和度
        description.zh: hsl中的s
        type: variable-number-slider
        default: 32
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: setting-accent-l-light
        title: accent color lightness
        description: l of hsl
        title.zh: 高亮颜色亮度
        description.zh: hsl中的l
        type: variable-number-slider
        default: 58
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: color-accent-dark
        title: dark mode
        title.zh: 暗色模式
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-accent-h-dark
        title: base color
        title.zh: 基础颜色
        type: variable-number-slider
        default: 207
        min: 0
        max: 360
        step: 5
    -
        id: color-active-dark
        title: highlight color
        title.zh: 高亮颜色
        type: class-select
        allowEmpty: false
        default: color-active-default-dark
        options:
            -   label: accent color
                value: color-active-default-dark
            -   label: accent color alt
                value: color-active-alt-dark
            -   label: custom
                value: color-active-custom-dark
    -
        id: setting-color-active-custom-dark
        title: custom highlight color
        title.zh: 自定义高亮颜色
        type: variable-color
        default: '#'
        format: rgb
        opacity: false
    -
        id: color-more-dark
        title: more configuration
        title.zh: 更多设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-accent-s-dark
        title: accent color saturation
        description: s of hsl
        title.zh: 高亮颜色饱和度
        description.zh: hsl中的s
        type: variable-number-slider
        default: 32
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: setting-accent-l-dark
        title: accent color lightness
        description: l of hsl
        title.zh: 高亮颜色亮度
        description.zh: hsl中的l
        type: variable-number-slider
        default: 58
        format: '%'
        min: 0
        max: 100
        step: 1
    -
*/
/* @settings

name: 🌏 Maple Workspace
id: maple-workspace
settings:
    -
        id: titlebar
        title: obsidian titlebar
        title.zh: obsidian 标题栏
        type: heading
        collapsed: true
        level: 2
    -
        id: titlebar-button-style
        title: styled window buttons
        description: for Windows and Linux
        title.zh: 窗体按钮美化
        description.zh: 在 Windows 和 Linux 中生效
        type: class-toggle
        default: true
    -
        id: titlebar-colorful
        title: colorful titlebar
        description: reference from https://github.com/kepano/obsidian-minimal
        title.zh: 多彩 Obsidian 标题栏
        description.zh: 参考 https://github.com/kepano/obsidian-minimal
        type: class-toggle
    -
        id: bg
        title: wave background
        description: will also add in canvas card when card width > 768px
        title.zh: 波浪背景图
        description.zh: 白板的卡片宽度 >768px 时编辑卡片也会添加
        type: heading
        collapsed: true
        level: 2
    -
        id: bg-enable
        title: background wave image
        description: static style reference from https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow, ❗live style will increase CPU/GPU use
        title.zh: 背景波浪图
        description.zh: 静态图（static）参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow，❗动态图（live）将提高 CPU/GPU 占用率
        type: class-select
        allowEmpty: false
        default: bg-static
        options:
            -   label: disable
                value: bg-default
            -   label: static
                value: bg-static
            -   label: live
                value: bg-live
    -
        id: setting-bg-color
        title: wave color
        title.zh: 波浪颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: explorer
        title: file explorer
        title.zh: 文件管理器
        type: heading
        collapsed: true
        level: 2
    -
        id: explorer-vault-name-position
        title: vault name position
        title.zh: 仓库名称位置
        type: class-select
        allowEmpty: false
        default: explorer-vault-name-default
        options:
            -   label: default
                value: explorer-vault-name-default
            -   label: compact
                value: explorer-vault-name-compact
            -   label: hidden
                value: explorer-vault-name-hidden
    -
        id: explorer-nav-decoration
        title: styled active file
        description: reference from https://github.com/Akifyss/obsidian-border
        title.zh: 当前文件美化
        description.zh: 参考 https://github.com/Akifyss/obsidian-border
        type: class-toggle
        default: true
    -
        id: explorer-title-wrap
        title: title wrap
        title.zh: 标题换行
        type: class-toggle
    -
        id: explorer-item-height
        title: item line height
        title.zh: 行高
        type: variable-number-slider
        default: 1.6
        min: 1.2
        max: 1.8
        step: 0.1
    -
        id: explorer-icon
        title: enable prefix icon
        description: if the tree indent is weird, please collpase all the directory and restart Obsidian
        title.zh: 开启前置图标
        description.zh: 如果缩进出现问题，请折叠全部文件夹并重启 Obsidian
        type: class-toggle
        default: true
    -
        id: setting-color-dirs
        title: dir color
        title.zh: 文件夹颜色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: rgb(245, 180, 0)
        default-dark: rgb(245, 180, 0)
    -
        id: outline-panel
        title: outline panel
        title.zh: 文档大纲
        type: heading
        collapsed: true
        level: 2
    -
        id: outline-enable
        title: enable bullet style
        description: reference from https://github.com/pengx17/logseq-dev-theme/blob/main/bullet_threading.css
        title.zh: 开启引导线样式
        description.zh: 参考 https://github.com/pengx17/logseq-dev-theme/blob/main/bullet_threading.css
        type: class-toggle
        default: true
    -
        id: outline-item-animation
        title: enable item animation
        title.zh: 开启鼠标经过动画
        type: class-toggle
    -
        id: status-bar
        title: status bar
        title.zh: 状态栏
        type: heading
        collapsed: true
        level: 2
    -
        id: status-bar-enable
        title: enable status bar style
        title.zh: 启用状态栏样式
        type: class-toggle
        default: true
    -
        id: status-bar-style-float
        title: round style status bar
        title.zh: 圆角风格的状态栏
        type: class-toggle
        default: true
    -
        id: status-bar-style
        title: status bar animation
        description: ❗last style only valid when turn on “round status bar”
        title.zh: 状态栏样式
        description.zh: ❗最后一种样式只在开启“圆角风格的状态栏”才生效
        type: class-select
        allowEmpty: false
        default: status-bar-default
        options:
            -   label: default
                value: status-bar-default
            -   label: show on hover
                value: status-bar-hidden
            -   label: scroll out on hover
                value: status-bar-scroll
    -
        id: status-bar-style-center
        title: center status bar
        title.zh: 状态栏居中
        type: class-toggle
    -
        id: search-internal
        title: document search panel
        title.zh: 文档内搜索框
        type: heading
        collapsed: true
        level: 2
    -
        id: search-internal-enable
        title: enable VSCode style search/replace panel
        title.zh: 启用 VSCode 样式的搜索框
        type: class-toggle
        default: true
    -
        id: tab
        title: tab
        title.zh: 标签页
        type: heading
        collapsed: true
        level: 2
    -
        id: tab-float
        title: float tabs style like firefox / Microsoft Edge
        title.zh: 仿 Firefox / Microsoft Edge 的标签页
        type: class-toggle
    -
        id: tab-slide-up
        title: slide up animation on tab switch
        description: ❗will prevent outline panel update instantly on switch articles
        title.zh: 标签页切换动画
        description.zh: ❗会导致切换文章时无法立即更新大纲面板
        type: class-toggle
        default: true
    -
        id: labeled-nav
        title: text labels for primary navigation
        description: reference from https://github.com/kepano/obsidian-minimal
        title.zh: 主导航栏添加文字
        description.zh: 参考自 https://github.com/kepano/obsidian-minimal
        type: class-toggle
    -
        id: tab-show-close
        title: when to show close button on tabs
        title.zh: 何时显示标签页的关闭按钮
        type: class-select
        allowEmpty: false
        default: tab-show-close-default
        options:
            -   label: default
                value: tab-show-close-default
            -   label: on hover all tabs
                value: tab-show-close-all
            -   label: on hover except active tab
                value: tab-show-close-part
    -
        id: tab-title
        title: tab title bar
        title.zh: 标签页标题栏
        type: heading
        level: 3
    -
        id: tab-title-bar-round
        title: enable tab title bar round style
        title.zh: 开启标签页标题栏圆角样式
        type: class-toggle
    -
        id: tab-title-bar-shadow
        title: add shadow for active tab title bar
        title.zh: 为当前标签页标题栏添加阴影
        type: class-toggle
    -
        id: tab-title-bar-text
        title: file name on tab title bar
        title.zh: 标签页标题栏的文件名
        type: class-select
        allowEmpty: false
        default: tab-title-bar-text-default
        options:
            -   label: default
                value: tab-title-bar-text-default
            -   label: small size
                value: tab-title-bar-text-small
            -   label: show on hover
                value: tab-title-bar-text-hidden
    -
        id: message
        title: tooltip & notice
        title.zh: 气泡提示框 & 通知
        type: heading
        collapsed: true
        level: 2
    -
        id: message-tooltip-hide-arrow
        title: hide tooltip arrow
        title.zh: 隐藏气泡提示框箭头
        type: class-toggle
    -
        id: message-tooltip-hide
        title: always hide tooltip
        title.zh: 永久隐藏气泡提示框
        type: class-toggle
    -
        id: message-modify
        title: change tooltip & notice color
        title.zh: 修改气泡提示框和消息的颜色
        type: class-toggle
        default: true
    -
        id: setting-message-bg
        title: background color
        title.zh: 背景色
        type: variable-themed-color
        format: hsl-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-message-fg
        title: foreground color
        title.zh: 文字色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: modal
        title: modal & setting panel
        title.zh: 弹出框 & 设置面板
        type: heading
        collapsed: true
        level: 2
    -
        id: modal-blur
        title: enable modal background blur
        description: If there is a delay in scrolling, try turning this option off
        title.zh: 开启弹出框背景模糊
        description.zh: 如果滚动时有卡顿，尝试关闭该选项
        type: class-toggle
        default: true
    -
        id: modal-header
        title: add header for setting panel
        description: better with plugin “setting search”, invalid in mobile
        title.zh: 为设置面板添加顶部框
        description.zh: 配合 setting search 插件使用更佳，移动端无效
        type: class-toggle
    -
        id: setting-modal-header-title
        title: set modal header title
        title.zh: 设置面板标题
        type: variable-text
        default: "'maple 0.7.38'"
    -
        id: setting-group-title
        title: add style for left navigation group title
        title.zh: 为左侧选项组标题添加样式
        type: class-toggle
        default: true
    -
        id: setting-nav-decoration
        title: styled active nav item
        title.zh: 左侧当前设置项美化
        type: class-toggle
        default: true
    -
        id: modal-slider
        title: styled slider thumb
        title.zh: 滑动条按钮美化
        type: class-toggle
        default: true
    -
        id: modal-toggle
        title: styled toggle button
        title.zh: 开关按钮美化
        type: class-select
        allowEmpty: false
        default: modal-toggle-default
        options:
            -   label: default
                value: modal-toggle-default
            -   label: thin
                value: modal-toggle-thin
            -   label: round
                value: modal-toggle-round
    -
        id: modal-animation
        title: modal bounce animation
        desciption: reference from https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow
        title.zh: 弹出框抖动动画
        desciption.zh: 参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow
        type: class-toggle
        default: true
    -
        id: menu-blur
        title: menu blur
        title.zh: 菜单模糊
        type: heading
        collapsed: true
        level: 2
    -
        id: menu-normal
        title: normal menu
        title.zh: 普通菜单
        type: class-toggle
        default: true
    -
        id: menu-suggestion
        title: suggestion menu
        title.zh: 提示菜单
        type: class-toggle
        default: true
    -
        id: menu-graph
        title: graph menu
        title.zh: 图谱菜单
        type: class-toggle
        default: true
    -
        id: scrollbar
        title: scrollbar
        title.zh: 滚动条
        type: heading
        collapsed: true
        level: 2
    -
        id: scrollbar-hide
        title: always hide scrollbar
        title.zh: 不显示滚动条
        type: class-toggle
    -
        id: scrollbar-hover
        title: scrollbar hover action
        title.zh: 鼠标经过时滚动条变化
        type: class-select
        allowEmpty: false
        default: scrollbar-hover-default
        options:
            -   label: default
                value: scrollbar-hover-default
            -   label: accent
                value: scrollbar-hover-accent
            -   label: expand
                value: scrollbar-hover-expand
    -
        id: scrollbar-movein-animation-enable
        title: enable scrollbar animation
        description: when disabled, always show scrollbar; when enabled, hide scrollbar when the mouse move outside the container
        title.zh: 启用滚动条动画
        description.zh: 关闭时，一直显示滚动条；开启后，鼠标在容器外时隐藏滚动条
        type: class-toggle
        default: true
    -
        id: graph
        title: graph
        title.zh: 关系图谱
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-graph-node
        title: node color
        title.zh: 普通节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-graph-node-unresolved
        title: unresolved node color
        title.zh: 未连接节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-graph-node-focus
        title: focused node color
        title.zh: 聚焦节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: export-pdf
        title: PDF export
        title.zh: PDF 导出
        type: heading
        collapsed: true
        level: 2
    -
        id: export-pdf-transparent
        title: transparent page background color
        title.zh: 透明页面背景色
        type: class-toggle
*/
/* @settings

name: ✏️ Maple Editor
id: maple-editor
settings:
    -
        id: bg
        title: background
        title.zh: 背景
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-editor-bg
        title: editor background color
        title.zh: 编辑器背景色
        type: variable-themed-color
        format: hsl-values
        default-light: '#'
        default-dark: '#'
    -
        id: setting-md-container-bg
        title: editor container background color
        description: quote, code block, table and so on
        title.zh: 编辑器容器背景色
        description.zh: 引用、代码块、表格等
        type: variable-themed-color
        format: hsl-values
        default-light: '#'
        default-dark: '#'
    -
        id: text-line-font
        title: text & font & line
        title.zh: 文字 & 字体 & 行
        type: heading
        collapsed: true
        level: 2
    -
        id: font-maple
        title: use "Maple Mono" as monospace
        description: https://github.com/subframe7536/Maple-font
        title.zh: 使用 Maple Mono 作为等宽字体
        description.zh: https://github.com/subframe7536/Maple-font
        type: class-toggle
        default: true
    -
        id: font-fix-latex
        title: fix latex italic absent
        description: latex in my vault often wrong rendered, so i make this setting. If wrong rendered, just toggle it
        title.zh: 修复 latex 斜体问题
        description.zh: 在我的仓库里经常渲染失败，只能自己打包一份字体进主题了。只要字体不正常，开关一次即可
        type: class-toggle
    -
        id: font-latex-text
        title: use “text font” in non-formula parts of latex
        description: ❗only tested in CJK font, maybe not reconcile with latin characters
        title.zh: 在 latex 非公式部分使用正文字体
        description.zh: 默认的字体比较丑
        type: class-toggle
    -
        id: setting-editor-p-spacing
        title: editor paragraph spacing (px)
        title.zh: 编辑器段落间隔（px）
        type: variable-number-slider
        default: 4
        format: 'px'
        min: 0
        max: 20
        step: 1
    -
        id: setting-editor-p-indent
        title: editor paragraph indent
        description: if 'p-indent' exist in properties.cssclasses, all paragraph will add indent(n times of font size)
        title.zh: 编辑器段落缩进
        description.zh: 在文档属性的cssclasses中存在 'p-indent' 类时，会为段落添加缩进（字体大小的倍数）
        type: variable-number-slider
        default: 2
        min: 0
        max: 4
        step: 0.2
    -
        id: setting-line-height
        title: editor line height
        description: multiple of the text size
        title.zh: 编辑器行高
        description.zh: 文字大小的倍数
        type: variable-number-slider
        default: 2
        min: 1.5
        max: 2.5
        step: 0.1
    -
        id: setting-editor-width
        title: editor line width (px)
        title.zh: 编辑器行宽（px）
        type: variable-number-slider
        default: 700
        format: 'px'
        min: 400
        max: 1000
        step: 50
    -
        id: line-indicator-enable
        title: enable hover line indicator
        description: reference from https://github.com/Akifyss/obsidian-border, need install version>=1.1.9
        title.zh: 启用鼠标经过行指示器
        description.zh: 参考自 https://github.com/Akifyss/obsidian-border, 需要安装版本>=1.1.9
        type: class-toggle
        default: true
    -
        id: line-active-enable
        title: enable active line hightlight
        title.zh: 启用当前行高亮
        type: class-toggle
        default: true
    -
        id: setting-line-active-color
        title: active line color
        title.zh: 高亮行颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-normal
        title: editor text color
        title.zh: 编辑器文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: text-highlight
        title: highlight
        title.zh: 高亮
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-highlight-bg
        title: highlight text background color
        description: The value can be the value of any background attribute in css
        title.zh: 文本高亮背景色
        description.zh: 填写的值可以为css中任意 background 属性的值
        type: variable-text
        default: 'rgba(255, 208, 0, 0.4)'
    -
        id: setting-text-highlight-color
        title: highlight text color
        title.zh: 文本高亮文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-highlight-radius
        title: highlight background radius
        description: format px
        title.zh: 高亮背景色圆角大小
        description.zh: 单位 px
        type: variable-number-slider
        default: 4
        min: 0
        max: 8
        step: 1
    -
        id: text-highlight-all-round
        title: keep radius when wrap
        description: except when edit
        title.zh: 换行时保持圆角
        description.zh: 除了编辑的时候
        type: class-toggle
        default: true
    -
        id: text-highlight-margin
        title: add spacing around highlight
        title.zh: 增加高亮周围边距
        type: class-toggle
    -
        id: text-bold
        title: bold
        title.zh: 粗体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-bold-color
        title: bold text color
        title.zh: 粗体颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-bold-style
        title: bold style
        description: support any css text-decoration property
        title.zh: 粗体样式
        description.zh: 支持任何 css 的 text-decoration 属性值
        type: variable-text
        default: "underline dotted"
    -
        id: setting-text-bold-font
        title: bold font
        title.zh: 粗体字体
        type: variable-text
        default: "''"
    -
        id: text-italic
        title: italic
        title.zh: 斜体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-italic-color
        title: italic text color
        title.zh: 斜体颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-italic-style
        title: italic style
        description: support any css text-decoration property
        title.zh: 斜体样式
        description.zh: 支持任何 css 的 text-decoration 属性值
        type: variable-text
        default: "underline dotted"
    -
        id: setting-text-italic-font
        title: italic font
        title.zh: 斜体字体
        type: variable-text
        default: "''"
    -
        id: links
        title: link
        title.zh: 链接
        type: heading
        collapsed: true
        level: 2
    -
        id: link-hover-expand
        title: use underline animation on hover
        title.zh: 鼠标经过时开启下划线动画
        type: class-toggle
    -
        id: link-icon
        title: add icon before link in editor
        title.zh: 编辑器内链接前添加图标
        type: class-toggle
        default: true
    -
        id: link-heading
        title: Compatible with heading style
        description: keep link color with heading, but keep icon
        title.zh: 兼容标题样式
        description.zh: 链接颜色改为标题颜色，保留图标
        type: class-toggle
    -
        id: link-click-to-edit-in-live-preview
        title: click to edit link in Live-Preview
        description: ❗will disable hover animation, external link prefix icon will be diabled
        title.zh: 实时预览 模式时点击链接进行编辑而不是跳转
        description.zh: ❗鼠标经过动画会消失，外部链接的前置图标会消失
        type: class-toggle
    -
        id: link-color
        title: link color
        title.zh: 链接颜色
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-link-internal-color
        title: internal link color
        title.zh: 内部链接颜色
        type: variable-themed-color
        format: rgb-value
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-internal-color-underline
        title: internal link underline color
        title.zh: 内部链接下划线颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-external-color
        title: external link color
        title.zh: 外部链接颜色
        type: variable-themed-color
        format: rgb-value
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-external-color-underline
        title: external link underline color
        title.zh: 外部链接下划线颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: heading
        title: heading
        title.zh: 标题
        type: heading
        collapsed: true
        level: 2
    -
        id: fix-line-number
        title: fix line number movement
        description: will increase '#' size
        title.zh: 修复行号的移动
        description.zh: 将增加 '#' 的大小
        type: class-toggle
    -
        id: heading-level
        title: heading level icon
        description: add prefix icon for heading, click to collapse title if you open setting “Fold heading”
        title.zh: 标题等级图标
        description.zh: 为标题添加前置图标，如果你开启了“折叠图标”选项，点击图标可以收起标题
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-level-enable
        title: enable level heading icon
        title.zh: 启用标题等级图标
        type: class-toggle
    -
        id: heading-level-fix
        title: always show heading icon
        description: highlight on hover
        title.zh: 总是显示图标
        description.zh: 鼠标经过时高亮
        type: class-toggle
    -
        id: heading-level
        title: heading style preference
        title.zh: 标题样式设置
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-h1-center
        title: center h1
        title.zh: h1 居中
        type: class-toggle
        default: true
    -
        id: heading-underline-thin
        title: thinner heading underline
        title.zh: 标题下划线变细
        type: class-toggle
    -
        id: heading-h6-variant
        title: set font small-caps for h6
        description: always capital style
        title.zh: 添加 h6 small-caps
        description.zh: 全大写
        type: class-toggle
        default: true
    -
        id: heading-color
        title: heading color
        title.zh: 标题颜色
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-color-style
        title: heading color style
        title.zh: 标题颜色样式
        type: class-select
        allowEmpty: false
        default: heading-color-colorful
        options:
            -   label: text color
                value: heading-color-base
            -   label: accent color
                value: heading-color-accent
            -   label: colorful
                value: heading-color-colorful
    -
        id: heading-color-custom
        title: custom heading color
        title.zh: 自定义标题颜色
        type: heading
        level: 4
    -
        id: setting-h1-color
        title: h1 color
        title.zh: 标题 1 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h2-color
        title: h2 color
        title.zh: 标题 2 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h3-color
        title: h3 color
        title.zh: 标题 3 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h4-color
        title: h4 color
        title.zh: 标题 4 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h5-color
        title: h5 color
        title.zh: 标题 5 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h6-color
        title: h6 color
        title.zh: 标题 6 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: heading-size
        title: heading size
        description: compare to normal text
        title.zh: 标题大小
        description.zh: 相对于正文字体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-h1-size
        title: h1 font size
        title.zh: 标题 1 字体大小
        type: variable-number-slider
        default: 1.6
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h2-size
        title: h2 font size
        title.zh: 标题 2 字体大小
        type: variable-number-slider
        default: 1.5
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h3-size
        title: h3 font size
        title.zh: 标题 3 字体大小
        type: variable-number-slider
        default: 1.4
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h4-size
        title: h4 font size
        title.zh: 标题 4 字体大小
        type: variable-number-slider
        default: 1.3
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h5-size
        title: h5 font size
        title.zh: 标题 5 字体大小
        type: variable-number-slider
        default: 1.2
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h6-size
        title: h6 font size
        title.zh: 标题 6 字体大小
        type: variable-number-slider
        default: 1.1
        min: 1
        max: 2.4
        step: 0.1
    -
        id: heading-underline
        title: heading underline
        description: with line-gredient
        title.zh: 标题下划线
        description.zh: 渐变色
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-h1-underline
        title: add underline for h1
        title.zh: 添加 h1 下划线
        type: class-toggle
    -
        id: heading-h2-underline
        title: add underline for h2
        title.zh: 添加 h2 下划线
        type: class-toggle
        default: true
    -
        id: heading-h3-underline
        title: add underline for h3
        title.zh: 添加 h3 下划线
        type: class-toggle
    -
        id: heading-h4-underline
        title: add underline for h4
        title.zh: 添加 h4 下划线
        type: class-toggle
    -
        id: heading-h5-underline
        title: add underline for h5
        title.zh: 添加 h5 下划线
        type: class-toggle
    -
        id: heading-h6-underline
        title: add underline for h6
        title.zh: 添加 h6 下划线
        type: class-toggle
    -
        id: heading-font
        title: heading font
        title.zh: 标题字体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-h1-font
        title: h1 font
        title.zh: 标题 1 字体
        type: variable-text
        default: "''"
    -
        id: setting-h2-font
        title: h2 font
        title.zh: 标题 2 字体
        type: variable-text
        default: "''"
    -
        id: setting-h3-font
        title: h3 font
        title.zh: 标题 3 字体
        type: variable-text
        default: "''"
    -
        id: setting-h4-font
        title: h4 font
        title.zh: 标题 4 字体
        type: variable-text
        default: "''"
    -
        id: setting-h5-font
        title: h5 font
        title.zh: 标题 5 字体
        type: variable-text
        default: "''"
    -
        id: setting-h6-font
        title: h6 font
        title.zh: 标题 6 字体
        type: variable-text
        default: "''"
    -
        id: hr
        title: hr
        title.zh: 分隔行
        type: heading
        collapsed: true
        level: 2
    -
        id: hr-enable
        title: enable hr style
        title.zh: 开启分割线样式
        type: class-toggle
        default: true
    -
        id: setting-hr-icon
        title: set icon in the center of hr
        title.zh: 分割行中部图标
        type: variable-text
        default: "'⭐'"
    -
        id: table
        title: table
        title.zh: 表格
        type: heading
        collapsed: true
        level: 2
    -
        id: table-colorful
        title: colorful table
        description: accent header and line color
        title.zh: 多彩表格
        description.zh: 添加表头和行的颜色
        type: class-toggle
        default: true
    -
        id: setting-table-header-text
        title: header text color
        title.zh: 表头文字色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-table-header-bg
        title: header background color
        title.zh: 表头背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-table-line-bg
        title: alt line color
        title.zh: 交错行背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: embed
        title: embed
        title.zh: 内嵌文档
        type: heading
        collapsed: true
        level: 2
    -
        id: embed-enable
        title: enable embed file style
        title.zh: 启用内嵌文档样式
        type: class-toggle
        default: true
    -
        id: embed-title-right-top
        title: move embed title to right top
        description: visiable on hover, disabled when alias is '#', Example ![[FileName|#]]
        title.zh: 内嵌文档标题移至右上角
        description.zh: 鼠标经过时显示；别名为'#'时禁用，例：![[文件名|#]]
        type: class-toggle
        default: true
    -
        id: image
        title: image
        title.zh: 图片
        type: heading
        collapsed: true
        level: 2
    -
        id: image-alt
        title: add alt text below and center the image
        description: example ![[image.jpg|alt text]]
        title.zh: 在图片底部添加提示文本并居中图片
        description.zh: 样例 ![[图片.jpg|提示文本]]
        type: class-toggle
        default: true
    -
        id: image-zoom
        title: click to zoom out image
        description: invalid in source view or Live-Preview
        title.zh: 鼠标按下时放大图片
        description.zh: 在 源码模式 或者 实时预览 模式不生效
        type: class-toggle
        default: true
    -
        id: image-dark-hover
        title: decrease brightness in dark mode
        description: hover will increase brightness
        title.zh: 黑暗模式下降低图片亮度
        description.zh: 鼠标经过时会增加亮度
        type: class-toggle
        default: true
    -
        id: quote
        title: quote
        title.zh: 引言
        type: heading
        collapsed: true
        level: 2
    -
        id: quote-theme
        title: enable quote theme
        description: with thick guide line
        title.zh: 启用引言块主题
        description.zh: 宽引导线
        type: class-toggle
        default: true
    -
        id: quote-mark
        title: add front quote mark in preview mode
        title.zh: 阅读模式 引言块添加前置引号
        type: class-toggle
    -
        id: quote-outline-style
        title: Preview mode outline style
        title.zh: 阅读模式 外部样式
        type: class-select
        allowEmpty: false
        default: quote-shadow
        options:
            -   label: none
                value: quote-none
            -   label: border
                value: quote-border
            -   label: shadow
                value: quote-shadow
    -
        id: list
        title: list
        title.zh: 列表
        type: heading
        collapsed: true
        level: 2
    -
        id: list-enable
        title: enable list style
        description: ❗no support for list or task items inside callout
        title.zh: 启用列表样式
        description.zh: ❗精力有限，不打算适配 callout 中的列表或者代办项
        type: class-toggle
        default: true
    -
        id: setting-list-marker
        title: list marker color
        title.zh: 列表标号颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-marker-alt
        title: list marker alt color
        title.zh: 列表标号颜色 2
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: list-checkbox
        title: checkbox
        title.zh: 勾选框
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-list-checkbox-color
        title: checkbox marker color
        title.zh: 勾选框颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-checkbox-color-hover
        title: checkbox marker hover color
        title.zh: 勾选框鼠标经过色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-checkbox-border
        title: checkbox marker border
        title.zh: 勾选框边框
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code
        title: code
        title.zh: 代码
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-code-inline
        title: inline code color
        title.zh: 行内代码文字色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-code-bg
        title: code block background color
        title.zh: 代码块背景色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code-line-number
        title: add code block line number in live Preview mode
        description: if the code block lines are too large, the line number will have error
        title.zh: 为 实时预览模式 代码块添加行号
        description.zh: 如果代码块行数太多，行号会出现错误
        type: class-toggle
        default: true
    -
        id: code-language
        title: add code block language indicator in Preview mode
        title.zh: 为 阅读模式 代码块添加语言标识
        type: class-toggle
        default: true
    -
        id: code-nowrap
        title: no wrap in Preview mode
        title.zh: 阅读模式 代码块不换行
        type: class-toggle
        default: true
    -
        id: setting-code-ligature
        title: monospace font feature
        description: if you use “Maple Mono” as monospace, recommend to set 'calt','cv02'
        title.zh: 等宽字体字体特性
        description.zh: 如果你使用“Maple Mono”作为等宽字体，推荐设置为 'calt','cv02'
        type: variable-text
        default: "'calt'"
    -
        id: code-preview-bg
        title: enable codeblock background in Preview mode
        description: need install version >= 1.1.9
        title.zh: 在 阅读模式 开启代码块背景
        description.zh: 需要安装程序版本 >= 1.1.9
        type: class-toggle
    -
        id: setting-code-bg-radius
        title: code block border radius
        title.zh: 代码块背景圆角
        type: variable-number-slider
        default: 12
        format: 'px'
        min: 0
        max: 20
        step: 1
    -
        id: setting-code-bg-outer
        title: custom codeblock background in Preview mode
        description: need install version >= 1.1.9, image is supported(eg. 'url("/your/image/uri")'), it can be all the css value that supported by background-image
        title.zh: 修改 阅读模式 代码块背景
        description.zh: 需要安装程序版本 >= 1.1.9，支持图片（'url("图片地址")'），可以是 css background-image 支持的所有的值
        type: variable-text
        default: "''"
    -
        id: code-mac-style-header
        title: add mac style code block header in Preview mode
        description: no code block border
        title.zh: 为 阅读模式 代码块添加mac的标题栏
        description.zh: 没有代码块边框
        type: class-toggle
    -
        id: setting-code-language-color
        title: language indicator color
        title.zh: 语言标识颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code-theme
        title: use theme's color schema
        title.zh: 使用主题的代码高亮
        type: class-toggle
        default: true
    -
        id: tag
        title: tag
        title.zh: 标签
        type: heading
        collapsed: true
        level: 2
    -
        id: tag-click-to-edit
        title: click to edit tags in Live-Preview mode
        description: click '#' to jump
        title.zh: 点击标签进行编辑
        description.zh: 点击'#'跳转
        type: class-toggle
    -
        id: tag-style
        title: tag style
        description: tags of obsidian / todo / important / progress / complete will be colorized when use outline or fill
        title.zh: 标签样式
        description.zh: 当选择 outline 或者 fill 时，obsidian / todo / important / progress / complete 标签会有额外颜色
        type: class-select
        allowEmpty: false
        default: tag-outline
        options:
            -   label: default
                value: tag-default
            -   label: plain
                value: tag-plain
            -   label: outline
                value: tag-outline
            -   label: fill
                value: tag-fill
    -
        id: setting-tag-bg
        title: tag background color
        title.zh: 标签背景颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: tag-outline-setting
        title: outline style setting
        title.zh: 边框模式设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-tag-color
        title: tag text color
        title.zh: 标签文字颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-tag-border
        title: tag border color
        title.zh: 标签边框颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: canvas
        title: canvas
        title.zh: 白板
        type: heading
        collapsed: true
        level: 2
    -
        id: canvas-group-hide
        title: hide left canvas control buttons
        description: show on hover
        title.zh: 隐藏左侧的控制按钮
        description.zh: 鼠标移入时显示
        type: class-toggle
    -
        id: canvas-center
        title: center text in card when blur focus
        title.zh: 卡片失去焦点时居中文本
        type: class-toggle
    -
        id: pdf
        title: pdf
        type: heading
        collapsed: true
        level: 2
    -
        id: pdf-dark-hover
        title: decrease brightness in dark mode
        description: hover will increase brightness
        title.zh: 黑暗模式下降低图片亮度
        description.zh: 鼠标经过时会增加亮度
        type: class-toggle
        default: true
    -
        id: prop
        title: properties
        title.zh: 文档属性
        type: heading
        collapsed: true
        level: 2
    -
        id: prop-outline
        title: add outlint for property panel
        title.zh: 属性面板添加边框
        type: class-toggle
        default: true
*/
/* @settings

name: 🔌 Maple Plugin
id: maple-plugin
settings:
    -
        id: calendar
        title: calendar
        title.zh: 日历
        type: heading
        collapsed: true
        level: 2
    -
        id: calendar-weekend
        title: highlight weekend
        title.zh: 突显周末
        type: class-toggle
        default: true
    -
        id: calendar-swap-year-month
        title: swap year & month
        title.zh: 交换年和月的位置
        type: class-toggle
    -
        id: setting-calendar-year-suffix
        title: year suffix
        title.zh: 年份后缀
        type: variable-text
        default: "'年'"
    -
        id: setting-calendar-max-width
        title: max width
        description: support any css max-width property
        title.zh: 最大宽度
        description.zh: 支持任何 css 的 max-width 属性值
        type: variable-text
        default: "500px"
    -
        id: kanban
        title: kanban
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-kanban-item-color
        title: kanban item font color
        title.zh: kanban 项 文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-kanban-item-bg
        title: kanban item background color
        title.zh: kanban 项 背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-kanban-board-bg
        title: kanban board backgound color
        title.zh: kanban 版面 背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: dv
        title: DataView(WIP)
        title.zh: DataView(待完工)
        type: heading
        collapsed: true
        level: 2
    -
        id: dv-enable
        title: enable dataview style
        description: need install version >= 1.1.9
        title.zh: 启用 dataview 样式
        description.zh: 需要安装程序版本 >= 1.1.9
        type: class-toggle
*/
.mod-settings .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control > input[type=color] {
  position: relative;
}
.mod-settings .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control > input[type=color]::before {
  content: "only change Hue!";
  font-family: var(--font-interface);
  position: absolute;
  width: auto;
  left: calc((var(--swatch-width) + var(--size-4-12) * 2 + 120%) * -1);
  top: 50%;
  transform: translateY(-50%);
}

:is(.style-settings-import, .style-settings-export, .style-settings-copy, .style-settings-download, .style-settings-import-label) {
  transition: var(--animation);
  text-decoration: none !important;
  height: var(--input-height);
  font-size: var(--font-ui-small);
  font-family: inherit;
  font-weight: var(--input-font-weight);
  color: var(--text-normal) !important;
  line-height: var(--line-height-normal);
  padding: 0 0.8em;
  max-width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: 0;
  box-shadow: var(--input-shadow);
  border-radius: var(--input-radius);
  background-color: var(--interactive-normal);
}
:is(.style-settings-import, .style-settings-export, .style-settings-copy, .style-settings-download, .style-settings-import-label):hover {
  box-shadow: var(--input-shadow-hover);
  background-color: var(--interactive-hover);
}

.themed-color-wrapper > .theme-light {
  background-color: #eee;
}
.themed-color-wrapper > .theme-dark {
  background-color: #111;
}
.themed-color-wrapper .pickr-reset > button {
  padding: var(--size-2-3);
}

.pickr .pcr-button::before, .pickr .pcr-button::after {
  border-radius: var(--radius-s);
}

.style-settings-container .setting-item:is([data-id^=setting-accent-h]) input.slider {
  height: 0.8em;
  --hue-slider-sat: 70%;
  --hue-slider-br: 60%;
  background: linear-gradient(to right, hsl(0, var(--hue-slider-sat), var(--hue-slider-br)), hsl(30, var(--hue-slider-sat), var(--hue-slider-br)), hsl(60, var(--hue-slider-sat), var(--hue-slider-br)), hsl(90, var(--hue-slider-sat), var(--hue-slider-br)), hsl(120, var(--hue-slider-sat), var(--hue-slider-br)), hsl(150, var(--hue-slider-sat), var(--hue-slider-br)), hsl(180, var(--hue-slider-sat), var(--hue-slider-br)), hsl(210, var(--hue-slider-sat), var(--hue-slider-br)), hsl(240, var(--hue-slider-sat), var(--hue-slider-br)), hsl(270, var(--hue-slider-sat), var(--hue-slider-br)), hsl(300, var(--hue-slider-sat), var(--hue-slider-br)), hsl(330, var(--hue-slider-sat), var(--hue-slider-br)), hsl(360, var(--hue-slider-sat), var(--hue-slider-br)));
  border-radius: var(--size-2-1);
}
.style-settings-container .setting-item:is([data-id^=setting-accent-h]) .setting-item-control::before {
  content: "";
  font-size: 0.7em;
  text-align: center;
  white-space: pre-wrap;
  height: 1.6em;
  width: 1.6em;
  color: var(--text-normal);
  background-color: hsl(var(--setting-accent-h-light, 116), 32%, 58%);
  position: relative;
  right: 1em;
  border-radius: var(--radius-s);
}
.style-settings-container .setting-item[data-id=setting-accent-h-dark] .setting-item-control::before {
  background-color: hsl(var(--setting-accent-h-dark, 207), 32%, 58%);
}

/* hide option */
body:not(.line-active-enable) .setting-item[data-id=setting-line-active-color],
body:not(.calendar-swap-year-month) .setting-item[data-id=setting-calendar-year-suffix],
body:not(.quote-theme) .setting-item:is([data-id=quote-mark], [data-id=quote-shadow]),
body:not(.scrollbar-smooth) .setting-item[data-id=scrollbar-smooth-editor],
body.bg-default .setting-item[data-id=setting-bg-color],
body.scrollbar-hide .setting-item:is([data-id*=scrollbar-hover], [data-id=scrollbar-movein-animation], [data-id=scrollbar-gutter]),
body:not(.status-bar-enable) .setting-item[data-id*=status-bar-style],
:is(body.status-bar-scroll, body:not(.status-bar-style-float)) .setting-item[data-id=status-bar-style-center],
body:not(.tab-title-bar-round) .setting-item[data-id=tab-title-bar-shadow],
body:not(.loading-text) .setting-item[data-id=loading-text-content],
body:not(.explorer-icon) .setting-item[data-id=setting-color-dirs],
body:not(.search-internal-enable) .setting-item:is([data-id=search-internal-expand-on-focus], [data-id=search-internal-disable-select-all]),
body:not(.color-use-custom) .setting-item[data-id*=color-accent-],
body:not(.list-enable) .setting-item:is([data-id*=setting-list-], [data-id=list-checkbox]),
body:not(.code-language) .setting-item[data-id=setting-code-language-color],
body:not(.code-preview-bg) .setting-item[data-id=setting-code-bg-outer],
body:not(.modal-header) .setting-item[data-id=setting-modal-header-title],
body:not(.color-use-custom) .setting-item[data-id^=accent-hue],
body:not(.color-active-custom-light) .setting-item[data-id=setting-color-active-custom-light],
body:not(.color-active-custom-dark) .setting-item[data-id=setting-color-active-custom-dark],
body:not(.message-modify) .setting-item[data-id^=setting-message],
body:not(.heading-level-enable) .setting-item[data-id^=heading-level-fix],
body:not(.heading-color-colorful) .setting-item[data-id=heading-color-custom],
body:not(.table-colorful) .setting-item[data-id^=setting-table],
body:not(.embed-enable) .setting-item[data-id^=embed-title],
body:not(.hr-enable) .setting-item[data-id^=setting-hr-icon],
body:not(.tag-outline) .setting-item[data-id=tag-outline-setting] {
  display: none;
}
body:not(.line-active-enable) .setting-item[data-id=setting-line-active-color] + .style-settings-container,
body:not(.calendar-swap-year-month) .setting-item[data-id=setting-calendar-year-suffix] + .style-settings-container,
body:not(.quote-theme) .setting-item:is([data-id=quote-mark], [data-id=quote-shadow]) + .style-settings-container,
body:not(.scrollbar-smooth) .setting-item[data-id=scrollbar-smooth-editor] + .style-settings-container,
body.bg-default .setting-item[data-id=setting-bg-color] + .style-settings-container,
body.scrollbar-hide .setting-item:is([data-id*=scrollbar-hover], [data-id=scrollbar-movein-animation], [data-id=scrollbar-gutter]) + .style-settings-container,
body:not(.status-bar-enable) .setting-item[data-id*=status-bar-style] + .style-settings-container,
:is(body.status-bar-scroll, body:not(.status-bar-style-float)) .setting-item[data-id=status-bar-style-center] + .style-settings-container,
body:not(.tab-title-bar-round) .setting-item[data-id=tab-title-bar-shadow] + .style-settings-container,
body:not(.loading-text) .setting-item[data-id=loading-text-content] + .style-settings-container,
body:not(.explorer-icon) .setting-item[data-id=setting-color-dirs] + .style-settings-container,
body:not(.search-internal-enable) .setting-item:is([data-id=search-internal-expand-on-focus], [data-id=search-internal-disable-select-all]) + .style-settings-container,
body:not(.color-use-custom) .setting-item[data-id*=color-accent-] + .style-settings-container,
body:not(.list-enable) .setting-item:is([data-id*=setting-list-], [data-id=list-checkbox]) + .style-settings-container,
body:not(.code-language) .setting-item[data-id=setting-code-language-color] + .style-settings-container,
body:not(.code-preview-bg) .setting-item[data-id=setting-code-bg-outer] + .style-settings-container,
body:not(.modal-header) .setting-item[data-id=setting-modal-header-title] + .style-settings-container,
body:not(.color-use-custom) .setting-item[data-id^=accent-hue] + .style-settings-container,
body:not(.color-active-custom-light) .setting-item[data-id=setting-color-active-custom-light] + .style-settings-container,
body:not(.color-active-custom-dark) .setting-item[data-id=setting-color-active-custom-dark] + .style-settings-container,
body:not(.message-modify) .setting-item[data-id^=setting-message] + .style-settings-container,
body:not(.heading-level-enable) .setting-item[data-id^=heading-level-fix] + .style-settings-container,
body:not(.heading-color-colorful) .setting-item[data-id=heading-color-custom] + .style-settings-container,
body:not(.table-colorful) .setting-item[data-id^=setting-table] + .style-settings-container,
body:not(.embed-enable) .setting-item[data-id^=embed-title] + .style-settings-container,
body:not(.hr-enable) .setting-item[data-id^=setting-hr-icon] + .style-settings-container,
body:not(.tag-outline) .setting-item[data-id=tag-outline-setting] + .style-settings-container {
  display: none;
}

/* 参考 https://github.com/damiankorcz/Prism-Theme */
div.workspace-leaf-content[data-type=style-settings] div.view-content {
  padding: var(--file-margins);
}
body.is-mobile div.workspace-leaf-content[data-type=style-settings] div.view-content {
  padding: var(--size-4-8) var(--size-4-4);
}
body:not(.is-mobile) div.workspace-leaf-content[data-type=style-settings] .view-content .style-settings-container .setting-item:not(.setting-item-heading) {
  flex-direction: row;
}

.setting-item.setting-item-heading.style-settings-heading {
  padding: var(--size-4-2);
  margin: var(--size-4-1) 0;
  border-radius: var(--radius-m);
  padding-left: var(--size-4-3);
}
.setting-item.setting-item-heading.style-settings-heading:hover {
  color: var(--highlight-text-normal);
  background-color: var(--background-modifier-hover);
}

.style-settings-container {
  padding-bottom: unset;
}
.style-settings-container .setting-item {
  padding: var(--size-4-2);
  padding-left: var(--size-4-6);
}
.is-phone .style-settings-container .setting-item {
  margin-top: unset;
}

.style-settings-heading[data-level="0"] {
  background-color: var(--md-container-bg);
  border: 1px solid hsla(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%), 16%) !important;
}
.style-settings-heading[data-level="0"] + .style-settings-container .style-settings-collapse-indicator {
  margin-left: unset;
}

:is(.setting-item.setting-item-heading.style-settings-heading, .style-settings-container .style-settings-heading) {
  border-bottom: unset;
}

.setting-item-heading .setting-item-description {
  padding-left: var(--size-4-4);
}

.setting-item.setting-item-heading.is-collapsed {
  margin-bottom: unset;
}

.style-settings-container > .setting-item:last-of-type {
  padding-bottom: unset;
  margin-bottom: var(--size-4-4);
}

:is(.style-settings-heading[data-level="0"] + .style-settings-container, .style-settings-container) {
  padding-left: var(--size-2-1);
  margin-left: var(--size-4-4);
  border-left: var(--nav-indentation-guide-width) solid var(--nav-indentation-guide-color);
  transition: var(--animation);
}
:is(.style-settings-heading[data-level="0"] + .style-settings-container, .style-settings-container):hover {
  border-left-color: var(--accent-active);
}

body.modal-item-animation .style-settings-heading {
  transition: var(--animation);
}
body.modal-item-animation .style-settings-heading:hover {
  transition: none;
}

/* #endregion [style settings] */
/* #region [global] */
/* #region built-in fonts */
@font-face {
  font-family: "EMBED-TEX-I";
  font-display: swap;
  font-style: normal;
  src: url("data:application/font-woff;base64,") format("woff");
}
@font-face {
  font-family: "maplemono";
  font-display: swap;
  font-style: normal;
  src: local("Maple Mono NF CN Regular"), local("Maple Mono CN Regular"), local("Maple Mono NF Regular"), local("Maple Mono Regular"), url("data:font/woff2;base64,d09GMgABAAAAANMIAA0AAAACdwgAANKvAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoIeGxAcgdcQBmAAmn4Khs58hZcpATYCJAOVCguVCgAEIAWJEwfzaFvDD5IL5Yl3Cd + YFdOx2TW8qytkH6RtABdwc2cYRtk5GijW6 + Ir6ACes5AfdCeilIV6v172 ") format("woff2");
}
@font-face {
  font-family: "maplemono";
  font-display: swap;
  font-style: italic;
  src: local("Maple Mono NF CN Italic"), local("Maple Mono CN Italic"), local("Maple Mono NF Italic"), local("Maple Mono Italic"), url("data:font/woff2;base64,d09GMgABAAAAANMIAA0AAAACdwgAANKvAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoIeGxAcgdcQBmAAmn4Khs58hZcpATYCJAOVCguVCgAEIAWJEwfzaFvDD5IL5Yl3Cd + YFdOx2TW8qytkH6RtABdwc2cYRtk5GijW6 + Ir6ACes5AfdCeilIV6v172 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") format("woff2");
}
/* #endregion built-in fonts */
/* #region global variables */
:is(body, body .print) {
  --font-ui-smaller: 13px;
  --font-ui-small: 14px;
  --font-ui-medium: 16px;
  --line-height-normal: 2.1;
  --background-modifier-hover: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%), 20%);
  --background-modifier-border: var(--accent-inactive);
  --background-modifier-border-focus: var(--accent-inactive);
  --background-modifier-error: rgba(var(--color-red-rgb), 0.8);
  --background-modifier-cover: hsla(var(--background-secondary-hsl), 0.6);
  --interactive-accent: var(--accent-active);
  --radius-xl: var(--size-4-3);
  --animation: var(--setting-animation-time, 200ms) var(--anim-motion-smooth);
  --animation-slow: calc(var(--setting-animation-time, 200ms) * 2) var(--anim-motion-smooth);
  --animation-delay: calc(4 * var(--setting-animation-time, 150ms));
  --bg-opacity: 1;
  --block-outline-width: 3px;
  --editor-bg: var(--setting-editor-bg, var(--background-primary-hsl));
  --nav-item-background-hover: var(--background-modifier-hover);
  --nav-item-background-active: var(--accent-active);
  --nav-item-background-selected: var(--frame-outline-color);
}

html :is(body.obsidian-app, body.obsidian-app .print) {
  --accent-s: 32% !important;
  --accent-l: 58% !important;
}

:is(body.color-use-custom.theme-light.css-settings-manager, body.color-use-custom.theme-light.css-settings-manager .print) {
  --accent-h: var(--setting-accent-h-light, 35) !important;
  --accent-s: var(--setting-accent-s-light, 32%) !important;
  --accent-l: var(--setting-accent-l-light, 58%) !important;
}

:is(body.color-use-custom.theme-dark.css-settings-manager, body.color-use-custom.theme-dark.css-settings-manager .print) {
  --accent-h: var(--setting-accent-h-dark, 207) !important;
  --accent-s: var(--setting-accent-s-dark, 32%) !important;
  --accent-l: var(--setting-accent-l-dark, 58%) !important;
}

:is(.theme-light, .theme-light .print) {
  --color-red: rgba(var(--color-red-rgb), var(--color-opacity)) !important;
  --color-red-rgb: 210,75,75 !important;
  --color-green: rgba(var(--color-green-rgb), var(--color-opacity)) !important;
  --color-green-rgb: 94,179,77 !important;
  --color-yellow: rgba(var(--color-yellow-rgb), var(--color-opacity)) !important;
  --color-yellow-rgb: 226,178,18 !important;
  --color-orange: rgba(var(--color-orange-rgb), var(--color-opacity)) !important;
  --color-orange-rgb: 228,163,12 !important;
  --color-blue: rgba(var(--color-blue-rgb), var(--color-opacity)) !important;
  --color-blue-rgb: 24,168,220 !important;
  --color-cyan: rgba(var(--color-cyan-rgb), var(--color-opacity)) !important;
  --color-cyan-rgb: 54,181,134 !important;
  --color-purple: rgba(var(--color-purple-rgb), var(--color-opacity)) !important;
  --color-purple-rgb: 128,120,186 !important;
  --background-primary-hsl: var(--accent-h), calc(var(--accent-s) - 12%), 97%;
  --background-primary: hsl(var(--background-primary-hsl));
  --background-secondary-hsl: calc(var(--accent-h) - 18), calc(var(--accent-s) - 4%), calc(100% - (100% - var(--accent-l)) / 8);
  --background-secondary: hsl(var(--background-secondary-hsl));
  --background-modifier-hover: hsl(var(--accent-h), calc(var(--accent-s) * 1.2), min(var(--accent-l) * 2, 90%));
  --accent-active: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%));
  --accent-inactive: hsl(var(--accent-h), calc(var(--accent-s) - 4%), calc(var(--accent-l) + 24%));
  --text-on-accent: #fafafa !important;
  --frame-background-color: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 32%));
  --frame-outline-color: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 23.5%));
  --frame-muted-color: hsl(var(--accent-h), calc(var(--accent-s) - 20%), calc(var(--accent-l) - 10%));
  --md-container-bg: var(--setting-md-container-bg, hsla(calc(var(--accent-h) + 8), calc(var(--accent-s) / 1.2), calc(100% - (100% - var(--accent-l)) / 6), 70%));
  --color-opacity: 1;
}

:is(.theme-dark, .theme-dark .print) {
  --color-red: rgba(var(--color-red-rgb), var(--color-opacity)) !important;
  --color-red-rgb: 244,154,154 !important;
  --color-green: rgba(var(--color-green-rgb), var(--color-opacity)) !important;
  --color-green-rgb: 154,214,164 !important;
  --color-yellow: rgba(var(--color-yellow-rgb), var(--color-opacity)) !important;
  --color-yellow-rgb: 244,208,154 !important;
  --color-orange: rgba(var(--color-orange-rgb), var(--color-opacity)) !important;
  --color-orange-rgb: 244,184,154 !important;
  --color-blue: rgba(var(--color-blue-rgb), var(--color-opacity)) !important;
  --color-blue-rgb: 133,194,255 !important;
  --color-cyan: rgba(var(--color-cyan-rgb), var(--color-opacity)) !important;
  --color-cyan-rgb: 168,240,240 !important;
  --color-purple: rgba(var(--color-purple-rgb), var(--color-opacity)) !important;
  --color-purple-rgb: 197,190,249 !important;
  --background-primary: hsl(var(--background-primary-hsl));
  --background-primary-hsl: var(--accent-h), 5%, 5%;
  --background-secondary: hsl(var(--background-secondary-hsl));
  --background-secondary-hsl: calc(var(--accent-h) + 8), calc(var(--accent-s) / 6), calc(var(--accent-l) / 5);
  --background-modifier-hover: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) / 3));
  --accent-active: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) - 16%));
  --accent-inactive: hsl(var(--accent-h), calc(var(--accent-s) + 24%), calc(var(--accent-l) - 32%));
  --frame-background-color: hsl(var(--accent-h), 12%, 16%);
  --frame-outline-color: hsl(calc(var(--accent-h) - 24), calc(var(--accent-s) + 6%), 24%);
  --frame-muted-color: hsl(var(--accent-h), calc(var(--accent-s) - 20%), calc(var(--accent-l) + 10%));
  --text-normal: hsla(var(--accent-h), 50%, 94%, 75%);
  --text-on-accent: #eaeaea !important;
  --md-container-bg: var(--setting-md-container-bg, hsl(calc(var(--accent-h) - 4), 18%, 9%));
  --color-opacity: 0.85;
}

:is(.theme-light.color-use-custom:not(.color-active-default-light), .theme-light.color-use-custom:not(.color-active-default-light) .print) {
  --accent-active: var(--setting-color-active-custom-light,
     hsl(calc(var(--accent-h) + 60),
       calc(var(--accent-s) + -12%),
       calc(var(--accent-l) + 4%)));
  --accent-inactive: var(--setting-color-active-custom-dark,
    hsl(calc(var(--accent-h) + 60),
      calc(var(--accent-s) + -12%),
      calc(var(--accent-l) + 20%)));
}

:is(.theme-dark.color-use-custom:not(.color-active-default-dark), .theme-dark.color-use-custom:not(.color-active-default-dark) .print) {
  --accent-active: var(--setting-color-active-custom-light,
     hsl(calc(var(--accent-h) + 60),
       calc(var(--accent-s) + -12%),
       calc(var(--accent-l) + -12%)));
  --accent-inactive: var(--setting-color-active-custom-dark,
    hsl(calc(var(--accent-h) + 60),
      calc(var(--accent-s) + -12%),
      calc(var(--accent-l) + -28%)));
}

/* #endregion global variables */
/* #endregion [global] */
/* #region [editor] */
/* #region base */
/* #region paragraph */
body {
  --p-spacing: var(--setting-editor-p-spacing, var(--size-4-1)) ;
}

.p-indent :is([class=cm-line], [class="cm-active cm-line"]) {
  text-indent: calc(var(--font-text-size) * var(--setting-editor-p-indent, 2));
}

/* #endregion paragraph */
/* #region fix latex */
body.font-latex-text mjx-container mjx-utext {
  font-family: var(--font-text) !important;
}

body.font-fix-latex mjx-container .TEX-I {
  font-family: MJXZERO, EMBED-TEX-I;
}

mjx-stretchy-h > mjx-ext > mjx-c::before {
  transform: scaleX(200) !important;
}

/* #endregion fix latex */
/* #region monospace */
body {
  --font-monospace-theme: "Maple Mono SC NF", "Maple Mono", var(--font-text);
}

body.font-maple {
  --font-monospace: var(--monospace-custom, "maplemono"),
    var(--font-monospace-override), var(--font-monospace-theme),
    var(--font-monospace-default);
}

code,
code *,
.HyperMD-codeblock *,
.cm-inline-code {
  font-family: var(--font-monospace);
  font-feature-settings: var(--setting-code-ligature, "calt");
}

/* #endregion monospace */
/* #region editor background */
body {
  --file-line-width: var(--setting-editor-width, 700px);
}

.workspace-split.mod-root .workspace-leaf-content[data-type=markdown] {
  background-color: hsla(var(--editor-bg), var(--bg-opacity));
}
.workspace-split.mod-root .workspace-leaf-content[data-type=markdown] .view-content {
  background-color: transparent;
}

/* #endregion editor background */
/* #region text */
body {
  --text-selection: hsla(var(--color-accent-hsl), 0.25);
}

.markdown-source-view,
.markdown-rendered,
.markdown-preview-view,
.community-modal-readme {
  color: var(--setting-text-normal, var(--text-normal));
}

body .markdown-source-view .cm-scroller .cm-line:not(.HyperMD-codeblock) {
  padding-inline: var(--size-4-1);
}

/* #endregion text */
/* #region editor line height */
.workspace-split.mod-root,
.markdown-rendered {
  --line-height-normal: var(--setting-line-height, 2) !important;
}

/* #endregion editor line height */
/* #region current line highlight */
.theme-light {
  --active-line: var(--setting-line-active-color, hsl(var(--accent-h), 24%, 92%));
}

.theme-dark {
  --active-line: var(--setting-line-active-color, hsl(var(--accent-h), 18%, 14%));
}

body:is(:not(.css-settings-manager), .line-active-enable) .workspace-leaf.mod-active .markdown-source-view .cm-scroller .cm-line.cm-active {
  background-color: var(--active-line);
  border-radius: var(--size-2-3);
}

/* #endregion current line highlight */
/* #region line indicator */
/* reference from https://github.com/Akifyss/obsidian-border */
body.line-indicator-enable .markdown-preview-sizer > div:not(.search-highlight) {
  position: relative;
}
body.line-indicator-enable :is(.markdown-reading-view .markdown-preview-sizer > div:not(:has(:is(.collapse-indicator, hr, pre, blockquote, table, p img, audio, video))),
.markdown-source-view .cm-line:not(.HyperMD-header, .HyperMD-quote, .HyperMD-list-line-1:has(.collapse-indicator))):hover::after {
  content: "";
  width: var(--size-4-1);
  position: absolute;
  inset-block: var(--size-4-1);
  left: calc(var(--size-4-3) * -1);
  background-color: var(--accent-active);
  border-radius: var(--size-2-1);
}

/* #endregion line indicator */
/* #region keyboard */
.cm-hmd-html-begin,
.cm-hmd-html-begin ~ .cm-tag,
.cm-hmd-html-end,
.cm-line:has(.cm-hmd-html-begin) {
  font-family: var(--font-monospace);
}

kbd {
  user-select: none;
  text-transform: capitalize;
  border: var(--size-2-1) solid var(--accent-inactive);
  box-shadow: var(--shadow-s);
  border-radius: var(--size-2-3);
  transition: var(--animation);
  font-family: var(--font-monospace) !important;
  color: var(--text-normal) !important;
}
kbd:hover {
  border-color: var(--accent-active);
}

/* #endregion keyboard */
/* #region highlight */
mark {
  color: var(--text-normal);
}

.is-flashing {
  transition: var(--animation);
  border-radius: var(--radius-s);
}

.theme-dark .is-flashing {
  --text-faint: #aaa;
}

body {
  --text-highlight-bg: var(--setting-text-highlight-bg, rgba(var(--color-yellow-rgb), 0.3));
}

.text-highlight-all-round :is(.markdown-source-view .cm-highlight, .markdown-rendered mark) {
  -webkit-box-decoration-break: clone;
}

.markdown-source-view span.cm-highlight,
.markdown-rendered mark {
  border-radius: calc(var(--setting-text-highlight-radius, 4) * 1px);
  color: var(--setting-text-highlight-color);
  background: var(--text-highlight-bg) !important;
}

body.text-highlight-margin :is(.markdown-source-view span.cm-highlight, .markdown-rendered mark) {
  margin: 0 var(--size-2-1);
  padding: var(--size-2-1) var(--size-4-1);
}

.markdown-source-view :is(:not(.cm-highlight) + .cm-formatting-highlight, .cm-formatting-highlight:first-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  margin-right: 0;
  padding-right: 0;
}
.markdown-source-view .cm-formatting-highlight + .cm-highlight {
  border-radius: 0;
  padding-inline: 0;
  margin: 0;
}
.markdown-source-view .cm-highlight + .cm-formatting-highlight {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin-left: 0;
  padding-left: 0;
}

/* #endregion highlight */
/* #region bold & italic */
body {
  --bold-color: var(--setting-text-bold-color, var(--color-red)) !important;
  --italic-color: var(--setting-text-italic-color, var(--color-red)) !important;
}

:is(em, .cm-em, strong, .cm-strong) {
  text-underline-offset: var(--size-2-1);
  transition: var(--animation);
}

body :is(.cm-highlight.cm-strong, mark > strong) {
  color: var(--setting-text-highlight-color, var(--bold-color));
}
body :is(.cm-highlight.cm-em, mark > em) {
  color: var(--setting-text-highlight-color, var(--bold-color));
}

em,
.cm-em {
  --blockquote-color: var(--italic-color);
  text-decoration-style: var(--setting-text-italic-style, underline dotted);
  font-family: var(--setting-text-italic-font, var(--font-text));
}

strong,
.cm-strong {
  --blockquote-color: var(--bold-color);
  text-decoration: var(--setting-text-bold-style, underline dotted);
  font-family: var(--setting-text-bold-font, var(--font-text));
}

a :is(em, strong) {
  text-decoration: none;
}
a :is(em, strong):hover {
  --bold-color: var(--text-on-accent);
  --italic-color: var(--text-on-accent);
}

/* #endregion bold & italic */
/* #region others */
.workspace-leaf-content[data-type=markdown] .view-header .clickable-icon:hover {
  background-color: var(--background-modifier-hover);
}

.cm-hmd-frontmatter {
  font-size: var(--font-small);
}

.view-header-title-container:not(.mod-at-end):after {
  content: none;
}

input[type=checkbox] {
  transition: var(--animation);
}
input[type=checkbox]:checked::after {
  -webkit-mask-position: 47% 52%;
}

/* #endregion others */
/* #endregion base */
/* #region code */
:is(body, .print .markdown-rendered) {
  --inline-code: var(--setting-code-inline, var(--color-red));
  --code-background: var(--setting-code-bg, var(--md-container-bg));
  --code-function: var(--color-orange);
  --code-important: var(--color-purple);
  --code-keyword: var(--color-purple);
  --code-property: var(--color-orange);
  --code-punctuation: var(--color-blue);
  --code-string: var(--color-green);
  --code-tag: var(--color-red);
  --code-value: var(--color-orange);
  --code-comment: var(--text-faint);
  --code-normal: var(--code-preview-base);
  --code-bg-radius: var(--setting-code-bg-radius, var(--radius-l));
  --code-bg-border: var(--size-2-1) solid var(--nav-item-background-hover);
}

:is(.theme-light, .theme-light .print) {
  --code-preview-base: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) - 30%));
  --code-mac-style-header-bg: #333;
}

:is(.theme-dark, .theme-dark .print) {
  --code-preview-base: hsl(var(--accent-h),
      var(--accent-s),
      85%);
  --code-mac-style-header-bg: #000;
}

.cm-hmd-codeblock.cm-formatting,
.markdown-rendered code {
  color: var(--inline-code);
}

.markdown-rendered code {
  border: var(--code-bg-border);
}

.markdown-preview-view pre code {
  color: var(--code-preview-base);
  border: none;
  border-radius: 0;
}

.cm-inline-code {
  color: var(--inline-code) !important;
  border-radius: var(--radius-s);
  border: var(--code-bg-border);
}
.cm-inline-code:not(.cm-formatting) {
  padding-inline: var(--size-2-1);
}
.cm-formatting-code + .cm-inline-code {
  padding: 0;
}
.cm-inline-code.cm-header {
  color: var(--inline-code) !important;
}

.cm-formatting-code:has(+ .cm-inline-code) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  padding-left: var(--size-2-1);
}
.cm-formatting-code + .cm-inline-code {
  border-radius: 0;
  border-inline: 0;
}
.cm-inline-code + .cm-formatting-code {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  padding-right: var(--size-2-1);
}

.cm-s-obsidian .cm-line.HyperMD-codeblock {
  line-height: calc(var(--line-height-normal) - 0.2);
  color: var(--color-blue) !important;
  border-left: var(--code-bg-border);
  border-right: var(--code-bg-border);
  border-radius: 0 !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock .cm-fold-indicator .collapse-indicator {
  padding-left: var(--size-4-3);
  padding-right: unset !important;
  left: calc(var(--size-4-2) * -3);
  right: unset !important;
  cursor: pointer;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-begin-bg {
  border-top: var(--code-bg-border);
  border-top-left-radius: var(--code-bg-radius) !important;
  border-top-right-radius: var(--code-bg-radius) !important;
  margin-top: var(--size-2-1) !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-end-bg {
  border-bottom: var(--code-bg-border);
  border-bottom-left-radius: var(--code-bg-radius) !important;
  border-bottom-right-radius: var(--code-bg-radius) !important;
  margin-bottom: var(--size-2-1) !important;
}

.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget) {
  box-shadow: none !important;
  border: var(--block-outline-width) solid transparent;
  border-radius: var(--radius-l) !important;
  transition: var(--animation);
}
.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget):hover {
  border-color: var(--accent-active);
}
.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget) .edit-block-button {
  border-radius: var(--radius-m) !important;
  transition: var(--animation);
  inset-block: 0.2rem;
  height: fit-content;
}

.cm-hmd-codeblock .cm-indent::before {
  transform: unset !important;
}

.markdown-source-view.mod-cm6 .code-block-flair:has(svg) {
  width: calc(var(--size-4-8) - var(--size-4-1));
  height: calc(var(--size-4-8) - var(--size-4-1));
  padding: var(--size-4-1);
}
.markdown-source-view.mod-cm6 .code-block-flair:has(svg) svg {
  width: var(--size-4-5);
  height: var(--size-4-5);
}

code[class*=language-],
pre {
  line-height: calc(var(--line-height-normal) - 0.2);
}

body .markdown-rendered pre {
  border-radius: var(--code-bg-radius);
  border: var(--block-outline-width) solid var(--accent-inactive);
  transition: var(--animation);
  overflow-x: hidden;
}
body .markdown-rendered pre:hover {
  border-color: var(--accent-active);
}
body .markdown-rendered pre:hover button.copy-code-button {
  opacity: 1;
}
body .markdown-rendered pre .copy-code-button {
  width: 1.5rem;
  height: 1.5rem;
  line-height: 1.5rem;
  opacity: 0;
  color: transparent;
  background-color: var(--setting-code-language-color, var(--accent-active));
  transition: var(--animation);
  margin: 0;
  display: block !important;
  top: var(--size-4-1);
  right: var(--size-4-1);
  z-index: 9;
}
body .markdown-rendered pre .copy-code-button:hover {
  opacity: 1;
  background-color: var(--text-normal);
}

.code-nowrap.scrollbar-gutter-overlay:not(.code-mac-style-header) .app-container div pre {
  padding-bottom: calc(var(--code-size) * var(--line-height-normal) * 0.8) !important;
}
.code-nowrap.scrollbar-gutter-overlay pre code {
  padding-bottom: var(--size-2-3);
}
.code-nowrap pre code {
  word-break: normal;
  word-wrap: break-word;
  white-space: pre;
}

body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre {
  padding: 2rem 1rem;
  position: relative;
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class*=language-]::before {
  content: "unkown language";
  font-family: var(--font-text);
  color: var(--setting-code-language-color, var(--inline-code));
  font-weight: bold;
  font-size: 0.9rem;
  position: absolute;
  letter-spacing: 0.05rem;
  text-align: right;
  right: calc(1.3rem + 2 * var(--size-4-1));
  top: 0.1333333333rem;
  line-height: var(--line-height-normal);
  z-index: 9;
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-c]::before {
  content: "C";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-properties]::before {
  content: "Properties";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-python]::before {
  content: "Python";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-nginx]::before {
  content: "Nginx";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-css]::before {
  content: "CSS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-javascript]::before {
  content: "Javascript";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-js]::before {
  content: "JS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-typescript]::before {
  content: "Typescript";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-ts]::before {
  content: "TS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-jsp]::before {
  content: "JSP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-php]::before {
  content: "PHP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-lua]::before {
  content: "Lua";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-shell]::before {
  content: "Shell";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-powershell]::before {
  content: "PowerShell";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-flow]::before {
  content: "Flow";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-sequence]::before {
  content: "Sequence";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-sql]::before {
  content: "SQL";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-yaml]::before {
  content: "YAML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-yml]::before {
  content: "YML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-ini]::before {
  content: "ini";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-xml]::before {
  content: "XML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-cs]::before {
  content: "CS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-cpp]::before {
  content: "CPP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-java]::before {
  content: "Java";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-html]::before {
  content: "HTML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-txt]::before {
  content: "TXT";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-md]::before {
  content: "MD";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-markdown]::before {
  content: "Markdown";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-bat]::before {
  content: "Bat";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-json]::before {
  content: "Json";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-groovy]::before {
  content: "Groovy";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-scss]::before {
  content: "SCSS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-bash]::before {
  content: "Bash";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-cmd]::before {
  content: "Cmd";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-latex]::before {
  content: "Latex";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-zig]::before {
  content: "Zig";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-ssml]::before {
  content: "SSML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-jsx]::before {
  content: "JSX";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-tsx]::before {
  content: "TSX";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-tsconfig]::before {
  content: "tsconfig";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-git]::before {
  content: "Git";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-csharp]::before {
  content: "CSharp";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-csv]::before {
  content: "CSV";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-cue]::before {
  content: "cue";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-toml]::before {
  content: "TOML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-kt]::before {
  content: "kt";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-kotlin]::before {
  content: "Kotlin";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-go]::before {
  content: "Go";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-rust]::before {
  content: "Rust";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-regex]::before {
  content: "Regex";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-swift]::before {
  content: "Swift";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~=language-abap]::before {
  content: "ABAP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre[class~="language-pl/sql"]::before {
  content: "PL/SQL";
}

.markdown-source-view.mod-cm6 .code-block-flair {
  padding-block: 0;
  color: var(--color-red);
  transition: var(--animation);
}
.markdown-source-view.mod-cm6 .code-block-flair:hover {
  background-color: var(--nav-item-background-hover);
}

.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.comment, .prolog, .doctype, .cdata), .cm-comment) {
  color: var(--code-comment);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.tag, .constant, .symbol, .deleted, .class-name, .maybe-class-name), .cm-tag, .cm-operator) {
  color: var(--code-tag);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-punctuation, .cm-bracket, .cm-hr, .cm-operator) {
  color: var(--code-punctuation);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.boolean, .number), .cm-number) {
  color: var(--code-value);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.selector, .attr-name, .string, .char, .builtin, .inserted), .cm-qualifier, .cm-string:not(.cm-url), .cm-string-2, .cm-meta:not(.cm-hashtag)) {
  color: var(--code-string);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.entity, .parameter, .property, .property-access, .url, .variable), :is(.language-css, .style) .token.string, .cm-def, .cm-number + .cm-variable) {
  color: var(--code-property);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.attr-value, .function, .class-name), .cm-property, .cm-attribute) {
  color: var(--code-function);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.keyword, .constant, .unit, .builtin, .atrule), .cm-keyword, .cm-builtin, .cm-type, .cm-atom) {
  color: var(--code-keyword);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.regex, .important)) {
  color: var(--code-important);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-variable, .cm-variable-2, .cm-variable-3) {
  color: var(--code-normal);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-variable-2, .cm-variable-3) {
  opacity: 0.7;
}

.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) {
  border: none;
  padding-top: calc(var(--code-size) * var(--line-height-normal) * 1.5);
  padding-bottom: calc(var(--code-size) * var(--line-height-normal) * 0.5) !important;
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview)[class*=language-]::before {
  color: var(--setting-code-language-color, var(--accent-active));
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview)::after {
  content: "";
  width: 100%;
  height: calc(var(--code-size) * var(--line-height-normal) * 1.1);
  background-color: var(--code-mac-style-header-bg);
  top: 0;
  left: 0;
  position: absolute;
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) code::before {
  content: "";
  width: calc(var(--code-size) - var(--size-2-1));
  height: calc(var(--code-size) - var(--size-2-1));
  position: absolute;
  left: var(--size-4-4);
  top: calc((var(--code-size) - var(--size-2-1)) * var(--line-height-normal) * 0.7 - var(--code-size) / 3);
  border-radius: 50%;
  z-index: 9;
  background-color: rgba(255, 94, 92, var(--color-opacity));
  box-shadow: var(--size-4-5) 0 0 0 rgba(255, 187, 78, var(--color-opacity)), calc(var(--size-4-5) * 2) 0 0 0 rgba(81, 188, 0, var(--color-opacity));
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) .copy-code-button:hover {
  background-color: var(--accent-inactive);
}

.code-line-number .cm-contentContainer {
  counter-reset: code-line;
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock {
  padding-left: var(--size-4-12);
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end)::before {
  counter-increment: code-line;
  content: counter(code-line);
  position: absolute;
  text-align: right;
  width: var(--size-4-8);
  left: 0;
  color: var(--accent-inactive);
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end).cm-active::before {
  color: var(--accent-active);
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock-end {
  counter-reset: code-line;
}

.code-preview-bg {
  --code-bg-s: 50%;
  --code-bg-l: 85%;
}
.code-preview-bg .markdown-preview-view .markdown-preview-section div:has(> pre:not([class*=frontmatter])) {
  padding: var(--size-4-4) var(--size-4-8);
  margin-block: var(--size-4-4);
  border-radius: var(--radius-l);
  background-image: var(--setting-code-bg-outer, linear-gradient(-30deg, hsl(calc(var(--accent-h) + 145), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 115), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 90), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 65), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 35), var(--code-bg-s), var(--code-bg-l))));
}
.code-preview-bg .markdown-preview-view .markdown-preview-section pre:not([class*=frontmatter]) {
  --code-background: var(--setting-code-bg, hsl(var(--background-secondary-hsl)));
  border-width: 0;
}

.theme-dark .markdown-preview-view .markdown-preview-section div:has(> pre:not([class*=frontmatter])) {
  --code-bg-s: 20%;
  --code-bg-l: 45%;
}

/* #endregion code */
/* #region embed */
body.embed-enable .internal-embed.is-loaded:not(.image-embed) {
  --embed-background: var(--background-primary);
  --embed-max-height: initial;
  transition: var(--animation);
  padding: var(--size-4-1) var(--size-2-1) !important;
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link) {
  padding: var(--size-2-3);
  border-radius: var(--radius-m);
  transition: var(--animation);
  color: var(--accent-active);
  top: 0.2rem;
  right: 0.2rem;
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link):hover {
  background-color: var(--nav-item-background-hover);
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed).mod-empty {
  border: var(--size-2-1) dotted var(--accent-inactive);
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed) .markdown-embed-title {
  text-align: center;
  line-height: 2.8;
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) {
  border-radius: var(--radius-xl);
  transition: var(--animation);
  margin-block: var(--size-4-1) !important;
  padding: 0;
  border: var(--block-outline-width) solid var(--accent-inactive);
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 1.2) calc(var(--font-text-size) * 1.5);
  position: initial;
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .markdown-preview-view .markdown-preview-section {
  min-height: fit-content !important;
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed):hover {
  border-color: var(--accent-active);
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .frontmatter + div {
  display: none;
}
body.embed-enable .internal-embed.is-loaded:not(.image-embed) svg.link {
  transform: rotate(90deg);
}
body.embed-enable.scrollbar-gutter-reserve.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-heading .markdown-preview-section > div:nth-child(2) {
  right: var(--size-4-3);
}
body.embed-enable.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .obsidian-metatable {
  display: none;
}
body.embed-enable.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) {
  position: absolute;
  right: var(--size-4-9);
  top: var(--size-4-2);
  z-index: 99;
  opacity: 0;
  transition: var(--animation);
}
body.embed-enable.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) * {
  font-size: 1rem;
  cursor: pointer;
  line-height: 1rem;
}
body.embed-enable.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) *::after {
  content: none;
}
body.embed-enable.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-title {
  opacity: 0;
  position: absolute;
  z-index: 99;
  width: fit-content;
  right: 28px;
  left: unset;
  font-size: 1rem;
  top: var(--size-4-1);
  line-height: 28px;
  height: 28px;
  padding: 0 var(--size-4-2);
  border-radius: var(--radius-m);
  transition: var(--animation);
  cursor: pointer;
}
body.embed-enable.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) {
  opacity: 1;
}
body.embed-enable.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover :is(.markdown-embed-title, .markdown-embed-link, .file-embed-link:hover svg) {
  opacity: 1;
  color: var(--text-normal);
}
body.embed-enable.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) :is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 1.5);
  padding-bottom: calc(var(--font-text-size) * 1.2);
}

/* #endregion embed */
/* #region hr */
.markdown-rendered hr {
  margin-block-start: 2.4rem !important;
  margin-block-end: 2.4rem !important;
}

body.hr-enable :is(.markdown-source-view.mod-cm6, .markdown-rendered) hr {
  overflow: initial;
  border: none;
  position: relative;
  height: var(--size-4-1);
  background-image: linear-gradient(to right, transparent 0%, hsla(var(--color-accent-hsl), 40%) 16%, hsla(var(--color-accent-hsl), 90%) 44%, transparent 44%, transparent 56%, hsla(var(--color-accent-hsl), 90%) 56%, hsla(var(--color-accent-hsl), 40%) 84%, transparent 100%);
}
body.hr-enable :is(.markdown-source-view.mod-cm6, .markdown-rendered) hr::after {
  content: var(--setting-hr-icon, "⭐");
  display: inline-block;
  font-family: var(--font-monospace);
  font-size: var(--font-ui-small);
  position: absolute;
  text-align: center;
  width: var(--input-height);
  height: var(--input-height);
  line-height: var(--input-height);
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: var(--accent-active);
  background: var(--md-container-bg);
  border-radius: 50%;
}

/* #endregion hr */
/* #region link */
:is(body, .print .markdown-rendered) {
  --link-color-rgb: var(--setting-link-internal-color, var(--color-blue-rgb));
  --link-external-color-rgb: var(--setting-link-external-color, var(--color-orange-rgb));
  --link-color: rgba(var(--link-color-rgb), var(--color-opacity));
  --link-color-hover: var(--link-color);
  --link-color-underline: var(--setting-link-internal-color-underline, var(--link-color));
  --link-external-color: rgba(var(--link-external-color-rgb), var(--color-opacity));
  --link-external-color-hover: var(--link-external-color);
  --link-external-color-underline: var(--setting-link-external-color-underline, var(--link-external-color));
  --link-unresolved-decoration-color: var(--link-unresolve-color);
  --link-footnote: var(--color-purple);
  --link-text-size: var(--font-text-size) ;
}

.cm-hmd-footnote .cm-underline {
  color: var(--link-footnote) !important;
  font-size: var(--footnote-size);
  text-decoration-color: var(--link-footnote) !important;
  pointer-events: none;
}

.is-unresolved {
  transition: var(--animation);
}
.is-unresolved:hover {
  --link-color-hover: rgba(var(--link-color-rgb), 0.6) !important;
}

body .cm-s-obsidian .cm-url {
  text-decoration: none;
}

.cm-s-obsidian .cm-formatting-link-string + span.cm-url {
  color: var(--link-color);
}

body span:is(.cm-formatting-link, .cm-formatting-link-string) {
  color: rgba(var(--color-green-rgb), 0.6) !important;
}

body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline) {
  transition: var(--animation);
  color: rgba(var(--link-external-color-rgb), var(--color-opacity));
  border-radius: var(--radius-s);
  text-underline-offset: var(--size-2-1);
  text-decoration-color: var(--link-external-color-underline);
}
body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline):hover {
  background-color: rgba(var(--link-external-color-rgb), 0.15);
}
body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline):active {
  background-color: rgba(var(--link-external-color-rgb), 0.35);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline) {
  transition: var(--animation);
  color: rgba(var(--link-color-rgb), var(--color-opacity));
  border-radius: var(--radius-s);
  text-underline-offset: var(--size-2-1);
  text-decoration-color: var(--link-color-underline);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):hover {
  background-color: rgba(var(--link-color-rgb), 0.15);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):active {
  background-color: rgba(var(--link-color-rgb), 0.35);
}

span:is(.cm-url, .cm-link, .cm-hmd-internal-link, .cm-formatting-link.cm-url):hover {
  text-decoration: none;
}

body.link-hover-expand .cm-url {
  --link-external-decoration: none;
  --link-external-decoration-hover: none;
}
body.link-hover-expand .cm-link {
  --link-external-decoration-hover: none;
}
body.link-hover-expand .cm-hmd-internal-link > .cm-underline {
  --link-decoration-hover: none;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline) {
  font-size: var(--link-text-size);
  box-shadow: inset 0 -0.1em 0 var(--link-external-color-underline);
  text-decoration: none !important;
  transition: var(--animation);
  color: var(--link-external-color) !important;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline):hover, body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline):focus {
  box-shadow: inset 0 -1.3em 0 var(--link-external-color-underline);
  --link-color: var(--setting-link-internal-color-hover, var(--text-on-accent));
  --link-external-color: var(--setting-link-external-color-hover, var(--text-on-accent));
}
body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline) {
  font-size: var(--link-text-size);
  box-shadow: inset 0 -0.1em 0 var(--link-color-underline);
  text-decoration: none !important;
  transition: var(--animation);
  color: var(--link-color) !important;
}
body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):hover, body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):focus {
  box-shadow: inset 0 -1.3em 0 var(--link-color-underline);
  --link-color: var(--setting-link-internal-color-hover, var(--text-on-accent));
  --link-external-color: var(--setting-link-external-color-hover, var(--text-on-accent));
}
body.link-hover-expand :is(.cm-hmd-internal-link, .cm-link) {
  transition: color var(--animation);
}

body.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline)::before {
  content: "";
  display: inline-block;
  transition: var(--animation);
  transform: translateY(var(--size-2-1));
  width: calc(var(--link-text-size) - var(--size-2-1));
  height: calc(var(--link-text-size) - var(--size-2-1));
  margin-inline: var(--size-2-1);
  background-color: var(--link-color);
}
body.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link:not(.is-resolved), :is(.cm-link:not(.cm-hmd-footnote, .cm-escape), .cm-url) > .cm-underline):not(.cm-escape + .cm-link .cm-underline)::before {
  content: "";
  display: inline-block;
  transition: var(--animation);
  width: calc(var(--link-text-size) - var(--size-4-1));
  height: calc(var(--link-text-size) - var(--size-4-1));
  margin-left: var(--size-2-1);
  margin-right: var(--size-2-1);
  background-color: var(--link-external-color);
}
body.link-icon:not(.link-click-to-edit-in-live-preview) a.external-link {
  background-image: none;
  background-size: unset;
  padding-right: 0;
}
body.link-icon:not(.link-click-to-edit-in-live-preview) span.external-link {
  display: none;
}

body.link-click-to-edit-in-live-preview :is(.cm-url, .cm-link, .cm-hmd-internal-link) .cm-underline {
  pointer-events: none;
}

/* #endregion link */
/* #region list */
.cm-formatting-list-ul,
.cm-formatting-list-ol {
  padding-inline-start: 0.4rem;
}

body.list-enable {
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
  --list-marker-color-alt: var(--setting-list-marker-alt, var(--list-marker-color));
  --checkbox-marker-color: var(--text-on-accent);
  --checkbox-border-color: var(--setting-list-checkbox-color, var(--accent-inactive));
  --checkbox-border-color-hover: var(--setting-list-checkbox-color-hover, var(--accent-active));
  --list-bullet-size: calc(var(--font-text-size) / 3 + var(--size-2-1));
}
body.list-enable .cm-formatting-list-ol,
body.list-enable li::marker {
  font-family: var(--font-monospace);
}
body.list-enable :is(.markdown-source-view, .markdown-preview-view) .task-list-item-checkbox {
  border-width: var(--size-2-1);
}
body.list-enable .markdown-source-view .task-list-item-checkbox {
  margin-inline-start: 0.7rem;
  margin-inline-end: var(--size-4-1);
}
body.list-enable .markdown-preview-view .task-list-item-checkbox {
  margin-inline-start: calc(var(--checkbox-size) * -1.3);
}
body.list-enable .collapse-indicator {
  --cursor: pointer;
}
body.list-enable .markdown-source-view.mod-cm6 .cm-indent::before {
  transform: translateX(10px);
}
body.list-enable .markdown-source-view.mod-cm6 .collapse-indicator {
  padding-right: 1.4rem !important;
  transform: translateX(1.25rem) !important;
}
body.list-enable li .list-collapse-indicator {
  margin-inline-start: 0 !important;
  padding-inline-end: 1.2rem !important;
  transform: translateX(-2.25rem);
}
body.list-enable ol li .list-collapse-indicator {
  transform: translateX(-3rem);
}
body.list-enable .contains-task-list .list-collapse-indicator {
  transform: translateX(-2.4rem);
}
body.list-enable .markdown-rendered ul > li {
  margin-inline-start: calc(var(--font-text-size) * 2 + 0.25rem);
}
body.list-enable .markdown-rendered div > ul:is(.has-list-bullet, .contains-task-list) {
  margin-inline-start: calc(var(--size-4-3) * -1);
}
body.list-enable .markdown-rendered ol {
  --list-indent: calc(var(--font-text-size) - 0.25rem);
}
body.list-enable .markdown-rendered ol > li {
  margin-inline-start: calc(var(--font-text-size) + 0.25rem);
}
body.list-enable .markdown-rendered ol li > ol {
  padding-left: calc(var(--font-text-size));
}
body.list-enable .markdown-rendered ol li > ol::before {
  left: calc(var(--font-text-size) * -1.5);
}
body.list-enable :is(.markdown-rendered, div) > ul {
  --list-indent: 0;
}
body.list-enable .HyperMD-list-line-2 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-border: var(--setting-list-marker, var(--accent-active)) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) - var(--size-2-1));
}
body.list-enable .HyperMD-list-line-3 .list-bullet {
  --list-bullet-radius: 0;
  --list-marker-color: var(--list-marker-color-alt);
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.95);
  transform: rotate(45deg);
}
body.list-enable .HyperMD-list-line-4 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-border: var(--list-marker-color-alt) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.9 - var(--size-2-1));
  --list-bullet-radius: 0;
  transform: rotate(45deg);
}
body.list-enable ul > li > ul > li {
  --list-marker-color: transparent;
  --list-bullet-border: var(--setting-list-marker, var(--accent-active)) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) - var(--size-2-1));
}
body.list-enable ul > li > ul > li > ul > li {
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.5);
  --list-bullet-radius: 0;
  --list-marker-color: var(--list-marker-color-alt);
  --deg: 45deg;
}
body.list-enable ul > li > ul > li > ul > li .list-bullet {
  transform: rotate(var(--deg));
}
body.list-enable ul > li > ul > li > ul > li > ul > li {
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.9 - var(--size-2-1));
  --list-marker-color: transparent;
}
body.list-enable ul > li > ul > li > ul > li > ul > li ul > li {
  --list-bullet-radius: var(--radius-s);
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
}
body.list-enable .callout-content ul {
  --list-indent: 1.6em;
}
body.list-enable .callout-content ul.contains-task-list {
  --list-indent: 0.4em;
}
body.list-enable .callout-content ul::before {
  left: -0.7em;
}
body.list-enable .callout-content ul li::marker {
  --list-marker-color: transparent !important;
}
body.list-enable .callout-content ul li::before {
  content: "";
  position: absolute;
  width: var(--list-bullet-size);
  height: var(--list-bullet-size);
  background-color: var(--list-marker-color);
  border-radius: var(--list-bullet-radius);
  border: var(--list-bullet-border);
  transform: translate(-0.9em, calc(var(--font-text-size) * var(--line-height-normal) / 2.5)) rotate(var(--deg, 0));
}

/* #endregion list */
/* #region checkbox */
/* https://github.com/Akifyss/obsidian-border/blob/main/theme.css#L7738C1-L7953C2 */
input[data-task="<"]:checked,
li[data-task="<"] > input:checked,
li[data-task="<"] > p > input:checked,
input[data-task=">"]:checked,
li[data-task=">"] > input:checked,
li[data-task=">"] > p > input:checked,
input[data-task=d]:checked,
li[data-task=d] > input:checked,
li[data-task=d] > p > input:checked,
input[data-task=u]:checked,
li[data-task=u] > input:checked,
li[data-task=u] > p > input:checked,
input[data-task=S]:checked,
li[data-task=S] > input:checked,
li[data-task=S] > p > input:checked,
input[data-task=“]:checked,
li[data-task=“] > input:checked,
li[data-task=“] > p > input:checked,
input[data-task=c]:checked,
li[data-task=c] > input:checked,
li[data-task=c] > p > input:checked,
input[data-task=p]:checked,
li[data-task=p] > input:checked,
li[data-task=p] > p > input:checked,
input[data-task=n]:checked,
li[data-task=n] > input:checked,
li[data-task=n] > p > input:checked,
input[data-task=b]:checked,
li[data-task=b] > input:checked,
li[data-task=b] > p > input:checked,
input[data-task="-"]:checked,
li[data-task="-"] > input:checked,
li[data-task="-"] > p > input:checked,
input[data-task=l]:checked,
li[data-task=l] > input:checked,
li[data-task=l] > p > input:checked,
input[data-task=I]:checked,
li[data-task=I] > input:checked,
li[data-task=I] > p > input:checked,
input[data-task="/"]:checked,
li[data-task="/"] > input:checked,
li[data-task="/"] > p > input:checked,
input[data-task=i]:checked,
li[data-task=i] > input:checked,
li[data-task=i] > p > input:checked,
input[data-task="*"]:checked,
li[data-task="*"] > input:checked,
li[data-task="*"] > p > input:checked,
input[data-task="?"]:checked,
li[data-task="?"] > input:checked,
li[data-task="?"] > p > input:checked,
input[data-task="!"]:checked,
li[data-task="!"] > input:checked,
li[data-task="!"] > p > input:checked {
  --checkbox-marker-color: transparent;
  border: none;
  background-image: none;
  background-color: currentColor;
  -webkit-mask-size: var(--checkbox-icon);
  -webkit-mask-position: 50% 50%;
}

input[data-task="!"]:checked,
li[data-task="!"] > input:checked,
li[data-task="!"] > p > input:checked {
  --checkbox-color-hover: var(--color-orange);
  color: var(--color-orange);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM6.07 3.55c-.08.29-.09.6-.03.9l.86 4.56c.05.28.2.52.42.7.22.18.49.28.77.28s.55-.1.77-.28c.22-.18.36-.43.42-.7l.86-4.56c.06-.3.04-.61-.03-.9-.08-.29-.22-.57-.41-.8A2.094 2.094 0 0 0 8.11 2c-.3 0-.61.07-.88.2-.28.13-.52.32-.71.55-.19.23-.34.51-.41.8zm3.07 10.01a1.499 1.499 0 1 0-2.12-2.12 1.499 1.499 0 1 0 2.12 2.12z" fill-rule="evenodd" /></svg>');
}

input[data-task="?"]:checked,
li[data-task="?"] > input:checked,
li[data-task="?"] > p > input:checked {
  --checkbox-color-hover: var(--color-pink);
  color: var(--color-pink);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM4.84 3.66c-.32.48-.09 1.14.44 1.37.23.1.49.1.72 0 .17-.07.31-.18.41-.34.31-.49.82-.89 1.6-.89 1.72 0 2.06 1.61 1.45 2.47-.36.51-.87.91-1.33 1.37-.28.28-.55.58-.74.93-.19.33-.27.69-.31 1.03-.04.31.08.59.28.79.18.18.43.29.71.29.49 0 .89-.38.95-.87.04-.3.1-.45.2-.63.41-.76 1.18-1.12 1.98-2.3.72-1.07.45-2.5-.02-3.27C10.63 2.72 9.56 2 7.99 2c-1.43 0-2.51.7-3.15 1.66zM8 14.67c.73 0 1.33-.6 1.33-1.33s-.6-1.33-1.33-1.33-1.33.6-1.33 1.33.6 1.33 1.33 1.33z" fill-rule="evenodd" /></svg>');
}

input[data-task="*"]:checked,
li[data-task="*"] > input:checked,
li[data-task="*"] > p > input:checked {
  --checkbox-color-hover: var(--color-yellow);
  color: var(--color-yellow);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8.91.58C8.83.41 8.7.26 8.54.16 8.38.05 8.19 0 8 0s-.38.05-.54.16c-.16.1-.29.25-.37.42L5.16 4.7l-4.31.66c-.18.03-.35.1-.49.22s-.25.27-.3.45a.99.99 0 0 0 .23 1.02l3.15 3.23-.75 4.57c-.03.19 0 .38.06.55.07.17.19.32.35.43.15.11.33.17.52.18.19 0 .37-.03.54-.12L8 13.76l3.84 2.13c.16.09.35.13.54.12.19-.01.37-.07.52-.18.15-.11.27-.26.35-.43.07-.17.09-.36.06-.55l-.75-4.57 3.15-3.23a.99.99 0 0 0 .23-1.02.99.99 0 0 0-.31-.45.914.914 0 0 0-.49-.22l-4.31-.66L8.91.58z" /></svg>');
}

input[data-task=i]:checked,
li[data-task=i] > input:checked,
li[data-task=i] > p > input:checked {
  --checkbox-color-hover: var(--color-cyan);
  color: var(--color-cyan);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none}</style></defs><path class="cls-1" d="M0 0h16v16H0z"/><path class="cls-1" d="M0 0h16v16H0z"/><path d="M10.67 13v-1.67c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09h-1V5.67c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09H5.68c-.1 0-.18.03-.24.09s-.09.14-.09.24v1.67c0 .1.03.18.09.24s.14.09.24.09h1V11h-1c-.1 0-.18.03-.24.09s-.09.14-.09.24V13c0 .1.03.18.09.24s.14.09.24.09h4.67c.1 0 .18-.03.24-.09s.09-.14.09-.24zM9.34 3.67V2c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09h-2c-.1 0-.18.03-.24.09s-.09.14-.09.24v1.67c0 .1.03.18.09.24s.14.09.24.09h2c.1 0 .18-.03.24-.09s.09-.14.09-.24zM16.01 8c0 1.45-.36 2.79-1.07 4.02a7.962 7.962 0 0 1-2.91 2.91C10.8 15.65 9.47 16 8.01 16s-2.79-.36-4.02-1.07a7.962 7.962 0 0 1-2.91-2.91C.36 10.79.01 9.46.01 8s.35-2.79 1.06-4.02c.72-1.23 1.69-2.2 2.91-2.91C5.21.35 6.54 0 8 0s2.79.36 4.02 1.07c1.23.72 2.2 1.69 2.91 2.91C15.65 5.21 16 6.54 16 8z"/></svg>');
}

input[data-task="/"]:checked,
li[data-task="/"] > input:checked,
li[data-task="/"] > p > input:checked {
  --checkbox-color-hover: var(--color-yellow);
  color: var(--color-yellow);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none;}.cls-2{fill-rule:evenodd;}</style></defs><rect class="cls-1" width="16" height="16"/><path class="cls-2" d="M13.66,13.66c-1.45,1.45-3.45,2.34-5.66,2.34C3.58,16,0,12.42,0,8S3.58,0,8,0c2.17,0,4.15,.87,5.59,2.28,.06,.06,.12,.12,.18,.18,1.37,1.43,2.22,3.36,2.23,5.5,0,.03,0,.07,0,.1-.01,2.19-.91,4.17-2.34,5.6Zm-1.41-1.41c-1.09,1.09-2.59,1.76-4.24,1.76-3.31,0-6-2.69-6-6S4.69,2,8,2v6l4.24,4.24Z"/></svg>');
}

input[data-task=I]:checked,
li[data-task=I] > input:checked,
li[data-task=I] > p > input:checked {
  --checkbox-color-hover: var(--color-orange);
  color: var(--color-orange);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none}</style></defs><path class="cls-1" d="M0 0h16v16H0z"/><path class="cls-1" d="M0 0h16v16H0z"/><path d="M9 1c0-.27-.11-.52-.29-.71C8.52.1 8.27 0 8 0s-.52.11-.71.29A.99.99 0 0 0 7 1v1c0 .27.11.52.29.71.19.19.44.29.71.29s.52-.11.71-.29A.99.99 0 0 0 9 2V1zm4.66 2.76c.18-.19.28-.44.28-.7 0-.26-.11-.51-.29-.7s-.44-.29-.7-.29c-.26 0-.51.1-.7.28l-.71.71c-.18.19-.28.44-.28.7 0 .26.11.51.29.7s.44.29.7.29c.26 0 .51-.1.7-.28l.71-.71zM16 8c0 .27-.11.52-.29.71A.99.99 0 0 1 15 9h-1c-.27 0-.52-.11-.71-.29C13.1 8.52 13 8.27 13 8s.11-.52.29-.71A.99.99 0 0 1 14 7h1c.27 0 .52.11.71.29.19.19.29.44.29.71zM3.05 4.46c.09.1.2.17.32.22.12.05.25.08.39.08.13 0 .26-.02.39-.07a1.004 1.004 0 0 0 .55-.55c.05-.12.08-.25.07-.39 0-.13-.03-.26-.08-.39-.05-.12-.13-.23-.22-.32l-.71-.71c-.19-.18-.44-.28-.7-.28-.26 0-.51.11-.7.29s-.29.44-.29.7c0 .26.1.51.28.7l.71.71zM3 8c0 .27-.11.52-.29.71A.99.99 0 0 1 2 9H1c-.27 0-.52-.11-.71-.29C.1 8.52 0 8.27 0 8s.11-.52.29-.71A.99.99 0 0 1 1 7h1c.27 0 .52.11.71.29.19.19.29.44.29.71zm3 6v-1h4v1c0 .53-.21 1.04-.59 1.41a1.983 1.983 0 0 1-2.82 0C6.21 15.03 6 14.53 6 14zm4-2c.02-.34.21-.65.48-.86.65-.51 1.13-1.22 1.36-2.02.23-.8.21-1.65-.06-2.43-.27-.79-.78-1.47-1.46-1.95C9.64 4.26 8.83 4 8 4s-1.64.26-2.32.74C5 5.22 4.49 5.9 4.22 6.69s-.29 1.64-.06 2.43c.23.8.71 1.5 1.36 2.02.27.21.46.52.48.86h4z"/></svg>');
}

input[data-task=l]:checked,
li[data-task=l] > input:checked,
li[data-task=l] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 .12A6.176 6.176 0 0 0 1.82 6.3a6.144 6.144 0 0 0 1.45 3.96l4.74 5.6 4.75-5.6.19-.25A6.144 6.144 0 0 0 14.2 6.3c0-1.64-.65-3.21-1.81-4.37A6.345 6.345 0 0 0 8 .12zm0 8.44c-.45 0-.88-.13-1.25-.38s-.66-.6-.83-1.01c-.17-.41-.21-.86-.13-1.3.09-.44.3-.84.62-1.15.31-.31.72-.53 1.15-.62.44-.09.89-.04 1.3.13.41.17.76.46 1.01.83a2.24 2.24 0 0 1-.28 2.84c-.42.42-.99.66-1.59.66z" /></svg>');
}

input[data-task="-"]:checked,
li[data-task="-"] > input:checked,
li[data-task="-"] > p > input:checked {
  --checkbox-color-hover: var(--text-faint);
  color: var(--text-faint);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z"/><path fill="none" d="M0 0h16v16H0z"/><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM3.5 7c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1h-9z" fill-rule="evenodd"/></svg>');
}

body:not(.tasks) .markdown-preview-view ul li[data-task="-"].task-list-item.is-checked,
body:not(.tasks) .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task="-"]),
body:not(.tasks) li[data-task="-"].task-list-item.is-checked {
  color: var(--text-faint);
  text-decoration: line-through solid var(--text-faint) 1px;
}

input[data-task=b]:checked,
li[data-task=b] > input:checked,
li[data-task=b] > p > input:checked {
  --checkbox-color-hover: var(--color-blue);
  color: var(--color-blue);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M4.25.5c-.6 0-1.17.24-1.59.66-.42.42-.66.99-.66 1.59V14.1c0 .2.05.39.15.56.1.17.24.31.41.41.17.1.36.15.56.15.2 0 .39-.05.56-.15l3.94-2.25c.11-.06.24-.1.37-.1s.26.03.37.1l3.95 2.25c.17.1.36.15.56.15.2 0 .39-.05.56-.15.17-.1.31-.24.41-.41s.15-.36.15-.56V2.75c0-.6-.24-1.17-.66-1.59-.42-.42-.99-.66-1.59-.66H4.25z" fill-rule="evenodd" /></svg>');
}

input[data-task=n]:checked,
li[data-task=n] > input:checked,
li[data-task=n] > p > input:checked {
  --checkbox-color-hover: var(--color-cyan);
  color: var(--color-cyan);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.75 14.75c-.41 0-.77-.15-1.06-.44-.29-.29-.44-.65-.44-1.06V2.75c0-.41.15-.77.44-1.06.29-.29.65-.44 1.06-.44h10.5c.41 0 .77.15 1.06.44.29.29.44.65.44 1.06v7.5l-4.5 4.5h-7.5zm4.5-5.25c.21 0 .39-.07.53-.22.14-.14.22-.32.22-.53s-.07-.39-.22-.53A.732.732 0 0 0 7.25 8H5c-.21 0-.39.07-.53.22-.14.14-.22.32-.22.53s.07.39.22.53c.14.14.32.22.53.22h2.25zm3.75-3c.21 0 .39-.07.53-.22.14-.14.22-.32.22-.53s-.07-.39-.22-.53A.732.732 0 0 0 11 5H5c-.21 0-.39.07-.53.22-.14.14-.22.32-.22.53s.07.39.22.53.32.22.53.22h6zm-1.5 6.75l3.75-3.75h-3c-.21 0-.39.07-.53.22s-.22.32-.22.53v3z" /></svg>');
}

input[data-task=p]:checked,
li[data-task=p] > input:checked,
li[data-task=p] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M0 16h16V0H0v16z" fill="none" /><path d="M3.33 15h-.72c-.33 0-.66-.13-.9-.35-.25-.23-.4-.54-.43-.87L.73 7.11c-.02-.18 0-.37.07-.54.06-.18.16-.34.28-.47.13-.14.28-.25.45-.32.17-.07.35-.11.54-.11h1.27A1.333 1.333 0 0 1 4.67 7v6.67A1.333 1.333 0 0 1 3.34 15zM15.4 7.69l-1.79 6.34c-.08.28-.25.53-.48.7-.23.17-.52.27-.81.27H6.67a1.333 1.333 0 0 1-1.33-1.33V7.13c0-.53.32-1.02.81-1.25.79-.37 1.38-.82 1.62-1.22.36-.6.53-1.78.57-2.65 0-.06 0-.12.01-.18.06-.41.34-.72.73-.8.07-.01.14-.02.21-.02.8 0 1.73.83 2.12 1.48.29.48.41 1.09.36 1.84-.03.55-.18 1.05-.33 1.55L11.4 6h2.72c.21 0 .41.05.6.14.18.09.34.23.47.39.12.17.21.35.24.55.04.2.03.41-.03.61zM9 1.94z" /></svg>');
}

input[data-task=c]:checked,
li[data-task=c] > input:checked,
li[data-task=c] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M0 0h16v16H0V0z" fill="none" /><path d="M3.33 1h-.72c-.33 0-.66.13-.9.35-.25.23-.4.54-.43.87L.72 8.89c-.02.18 0 .37.07.54.06.18.16.34.28.47.13.14.28.25.45.32.17.07.35.11.54.11h1.27A1.333 1.333 0 0 0 4.66 9V2.33A1.333 1.333 0 0 0 3.33 1zM15.4 8.31l-1.79-6.34c-.08-.28-.25-.53-.48-.7-.23-.17-.52-.27-.81-.27H6.67a1.333 1.333 0 0 0-1.33 1.33v6.54c0 .53.32 1.02.81 1.25.79.37 1.38.82 1.62 1.22.36.6.53 1.78.57 2.65 0 .06 0 .12.01.18.06.41.34.72.73.8.07.01.14.02.21.02.8 0 1.73-.83 2.12-1.48.29-.48.41-1.09.36-1.84-.03-.55-.18-1.05-.33-1.55L11.4 10h2.72c.21 0 .41-.05.6-.14.18-.09.34-.23.47-.39.12-.17.21-.35.24-.55.04-.2.03-.41-.03-.61zM9 14.06z" /></svg>');
}

input[data-task=“]:checked,
li[data-task=“] > input:checked,
li[data-task=“] > p > input:checked {
  --checkbox-color-hover: var(--color-purple);
  color: var(--color-purple);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.46 4.19c.94-1.01 2.35-1.53 4.21-1.53h.67v1.88l-.54.11c-.91.18-1.55.54-1.89 1.07-.18.28-.28.61-.29.94h2.05c.18 0 .35.07.47.2.13.13.2.29.2.47V12c0 .74-.6 1.33-1.33 1.33H2c-.18 0-.35-.07-.47-.2a.634.634 0 0 1-.2-.47V7.39c0-.07-.13-1.83 1.13-3.19zm10.87 9.14h-4c-.18 0-.35-.07-.47-.2a.634.634 0 0 1-.2-.47V7.39c0-.07-.13-1.83 1.13-3.19.94-1.01 2.35-1.53 4.21-1.53h.67v1.88l-.54.11c-.91.18-1.55.54-1.89 1.07-.18.28-.28.61-.29.94H14c.18 0 .35.07.47.2s.2.29.2.47v4.67c0 .74-.6 1.33-1.33 1.33z" /></svg>');
}

input[data-task=S]:checked,
li[data-task=S] > input:checked,
li[data-task=S] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M6.43 5.42c.15-.1.35-.2.57-.27v1.7c-.2-.06-.39-.15-.57-.27C6.07 6.34 6 6.11 6 6s.07-.34.43-.58zM9 10.85v-1.7c.22.07.41.16.57.27.36.24.43.47.43.58s-.07.34-.43.58c-.18.11-.37.2-.57.27z" /><path d="M8 16c2.12 0 4.16-.84 5.66-2.34S16 10.12 16 8s-.84-4.16-2.34-5.66S10.12 0 8 0 3.84.84 2.34 2.34 0 5.88 0 8s.84 4.16 2.34 5.66S5.88 16 8 16zM9 3c0-.27-.11-.52-.29-.71C8.52 2.1 8.27 2 8 2s-.52.11-.71.29A.99.99 0 0 0 7 3v.09c-.6.11-1.17.33-1.68.66C4.6 4.23 4 5 4 6s.6 1.76 1.32 2.25c.48.32 1.05.55 1.68.66v1.94c-.39-.13-.68-.32-.84-.5a.95.95 0 0 0-.31-.25c-.12-.06-.25-.1-.38-.11s-.27 0-.4.05a.94.94 0 0 0-.35.2 1.02 1.02 0 0 0-.34.7c0 .13.01.27.06.39.05.13.12.24.21.34.56.65 1.41 1.08 2.35 1.25v.09c0 .27.11.52.29.71.19.19.44.29.71.29s.52-.11.71-.29a.99.99 0 0 0 .29-.71v-.09c.6-.11 1.17-.33 1.68-.66C11.4 11.78 12 11 12 10.01s-.6-1.77-1.32-2.25C10.17 7.43 9.6 7.2 9 7.1V5.16c.39.13.68.32.84.5.09.1.19.18.31.25.12.06.25.1.38.11.13.01.26 0 .39-.05.13-.04.24-.11.34-.19.1-.09.18-.19.24-.31s.09-.25.1-.38c0-.13 0-.26-.05-.39a.9.9 0 0 0-.2-.34C10.79 3.71 9.94 3.28 9 3.11v-.09z" fill-rule="evenodd" /></svg>');
}

input[data-task=u]:checked,
li[data-task=u] > input:checked,
li[data-task=u] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M10 5c-.27 0-.52-.11-.71-.29C9.1 4.52 9 4.27 9 4s.11-.52.29-.71A.99.99 0 0 1 10 3h5c.27 0 .52.11.71.29.19.19.29.44.29.71v5c0 .27-.11.52-.29.71-.19.19-.44.29-.71.29s-.52-.11-.71-.29A.99.99 0 0 1 14 9V6.41L9.71 10.7c-.19.19-.44.29-.71.29s-.52-.11-.71-.29L6 8.41l-4.29 4.3c-.19.18-.44.28-.7.28-.26 0-.51-.11-.7-.29s-.3-.44-.3-.7c0-.26.1-.51.28-.7l5-5.01C5.48 6.1 5.73 6 6 6s.52.11.71.29L9 8.58l3.59-3.59H10z" fill-rule="evenodd" /></svg>');
}

input[data-task=d]:checked,
li[data-task=d] > input:checked,
li[data-task=d] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M10 11c-.27 0-.52.11-.71.29-.19.19-.29.44-.29.71s.11.52.29.71c.19.19.44.29.71.29h5c.27 0 .52-.11.71-.29A.99.99 0 0 0 16 12V7c0-.27-.11-.52-.29-.71C15.52 6.1 15.27 6 15 6s-.52.11-.71.29A.99.99 0 0 0 14 7v2.59L9.71 5.3c-.19-.19-.44-.29-.71-.29s-.52.11-.71.29L6 7.59l-4.29-4.3c-.19-.18-.44-.28-.7-.28-.26 0-.51.11-.7.29s-.3.44-.3.7c0 .26.1.51.28.7l5 5c.19.19.44.29.71.29s.52-.11.71-.29L9 7.41 12.59 11H10z" fill-rule="evenodd" /></svg>');
}

input[data-task=">"]:checked,
li[data-task=">"] > input:checked,
li[data-task=">"] > p > input:checked {
  --checkbox-color-hover: var(--color-pink);
  color: var(--color-pink);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M1.72 1.05A.503.503 0 0 0 1.45 1c-.09 0-.18.04-.26.1a.503.503 0 0 0-.18.49l1.4 4.85a.513.513 0 0 0 .4.35l5.69.95c.27.05.27.44 0 .49l-5.69.95a.513.513 0 0 0-.4.35l-1.4 4.85a.492.492 0 0 0 .18.49c.07.06.16.09.26.1.09 0 .19 0 .27-.05l13-6.5c.08-.04.15-.11.2-.18.05-.08.07-.17.07-.26s-.03-.18-.07-.26a.494.494 0 0 0-.2-.18l-13-6.49z" /></svg>');
}

input[data-task="<"]:checked,
li[data-task="<"] > input:checked,
li[data-task="<"] > p > input:checked {
  --checkbox-color-hover: var(--color-blue);
  color: var(--color-blue);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.75 15.5h10.5c.83 0 1.5-.67 1.5-1.5V3.5c0-.83-.67-1.5-1.5-1.5h-1.5V.5h-1.5V2h-4.5V.5h-1.5V2h-1.5c-.83 0-1.5.67-1.5 1.5V14c0 .83.67 1.5 1.5 1.5zm0-11.25h10.5v1.5H2.75v-1.5z" /></svg>');
}

/* #endregion checkbox */
/* #region quote */
:is(body, .print .markdown-rendered) {
  --blockquote-background-color: var(--md-container-bg);
  --callout-radius: var(--radius-l);
}

body.quote-theme {
  --blockquote-border-color: var(--accent-active);
  /* 引导线高度修复 */
}
body.quote-theme :is(.markdown-source-view, .markdown-rendered) {
  --blockquote-border-thickness: var(--size-4-1);
  --blockquote-radius: var(--size-2-3);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(.HyperMD-quote, .cm-blockquote-border)::before {
  width: var(--blockquote-border-thickness);
  border-left: none;
  background-color: var(--blockquote-border-color);
  border-radius: var(--blockquote-radius);
  inset-block: var(--blockquote-radius);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(.HyperMD-quote, .cm-blockquote-border) :not(:first-child)::before {
  transform: translateX(var(--size-2-1));
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote {
  border-radius: 0 !important;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote.cm-active:not(:has(+ .HyperMD-quote:not(.HyperMD-callout))) {
  border-bottom-left-radius: var(--blockquote-radius) !important;
  border-bottom-right-radius: var(--blockquote-radius) !important;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote.cm-active .cm-blockquote-border::before {
  background-color: transparent;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote::before {
  left: calc(var(--blockquote-border-thickness) / 2);
  z-index: 10;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote + .HyperMD-quote::before {
  top: calc(var(--blockquote-radius) * -2);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) {
  border-top-left-radius: var(--blockquote-radius) !important;
  border-top-right-radius: var(--blockquote-radius) !important;
}
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote))::after,
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) .cm-quote.cm-formatting::after {
  content: none !important;
}
body.quote-theme .markdown-rendered blockquote {
  --h1-size: var(--font-text-size);
  --h2-size: var(--font-text-size);
  --h3-size: var(--font-text-size);
  --h4-size: var(--font-text-size);
  --h5-size: var(--font-text-size);
  --h6-size: var(--font-text-size);
  --h1-line-height: var(--setting-line-height, var(--line-height-normal));
  --h2-line-height: var(--setting-line-height, var(--line-height-normal));
  --h3-line-height: var(--setting-line-height, var(--line-height-normal));
  --h4-line-height: var(--setting-line-height, var(--line-height-normal));
  --h5-line-height: var(--setting-line-height, var(--line-height-normal));
  --h6-line-height: var(--setting-line-height, var(--line-height-normal));
  border: none;
  border-radius: var(--blockquote-radius);
  position: relative;
  margin-block: var(--size-4-3);
}
body.quote-theme .markdown-rendered blockquote :is(p, h1, h2, h3, h4, h5, h6) {
  padding-left: var(--blockquote-border-thickness);
  padding-right: var(--size-4-1);
}
body.quote-theme .markdown-rendered blockquote::after {
  content: "";
  position: absolute;
  left: calc(var(--blockquote-radius) * 4 / 5);
  top: var(--blockquote-radius);
  border-radius: var(--blockquote-radius);
  height: calc(100% - var(--blockquote-radius) * 2);
  width: var(--blockquote-border-thickness);
  background-color: var(--accent-active);
}
body.quote-theme .markdown-rendered blockquote blockquote {
  box-shadow: none;
  margin: 0;
}
body.quote-theme.quote-shadow .markdown-rendered blockquote {
  box-shadow: var(--shadow-s);
}
body.quote-theme.quote-border .markdown-rendered blockquote {
  border: var(--block-outline-width) solid var(--accent-inactive);
  transition: var(--animation);
  box-shadow: none;
}
body.quote-theme.quote-border .markdown-rendered blockquote:hover {
  border-color: var(--accent-active);
}
body.quote-theme.quote-border .markdown-rendered blockquote blockquote {
  margin: var(--block-outline-width);
}
body.quote-theme.quote-mark.quote-theme blockquote {
  padding-left: 2.28rem;
}
body.quote-theme.quote-mark.quote-theme blockquote::before {
  position: absolute;
  font-size: 3rem;
  font-family: Source Code Pro;
  line-height: 1;
  content: "“" !important;
  background-color: transparent;
  color: var(--text-muted);
  top: calc(var(--font-text-size) * var(--line-height-normal) - 2.1428571429rem);
  transform: translateX(-1.32rem);
}
body.quote-theme :is(.markdown-preview-view, .community-modal-readme.markdown-rendered) blockquote {
  padding-left: var(--size-4-8);
}
body.quote-theme :is(.markdown-preview-view, .community-modal-readme.markdown-rendered) blockquote :is(p, h1, h2, h3, h4, h5, h6) {
  padding-left: calc(var(--blockquote-border-thickness) * 2);
}
body.quote-theme :is(.HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 8))::before {
  top: calc(var(--blockquote-radius) * -2);
}

/* #endregion quote */
/* #region table */
body {
  --table-radius: var(--size-2-3);
  --table-btn-color: var(--text-on-accent);
  --table-btn-bg: var(--accent-inactive);
  --table-header-bg: var(--setting-table-header-bg, var(--md-container-bg));
  --table-alt-line-bg: var(--setting-table-line-bg, var(--md-container-bg));
  --table-cell-vertical-alignment: middle;
}

.markdown-rendered table {
  border-collapse: initial;
  border-spacing: 0;
}

:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) {
  --table-white-space: break-all;
  width: 100%;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-editor {
  width: 100%;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-col-btn {
  border-top-right-radius: var(--table-radius);
  border-bottom-right-radius: var(--table-radius);
  color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-row-btn {
  border-bottom-left-radius: var(--table-radius);
  border-bottom-right-radius: var(--table-radius);
  color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(.table-col-btn, .table-row-btn, .table-col-drag-handle:hover, .table-row-drag-handle:hover) {
  transition: var(--animation);
  background-color: var(--table-btn-bg);
  --table-drag-handle-color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(tr:hover .table-row-drag-handle, th:hover .table-col-drag-handle) {
  opacity: 1;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th {
  background-color: var(--table-header-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th:first-child:not(:has(:is(.table-row-drag-handle, .table-col-drag-handle):hover)) {
  border-top-left-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th:last-child:not(:has(.table-col-drag-handle:hover)) {
  border-top-right-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(.table-col-btn:hover) th:last-child {
  border-top-right-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tr:last-child td:first-child {
  border-bottom-left-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(.table-row-btn:hover) tr:last-child td:first-child {
  border-bottom-left-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tr:last-child td:last-child {
  border-bottom-right-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(:is(.table-col-btn, .table-row-btn):hover) tr:last-child td:last-child {
  border-bottom-right-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(th, td):not(:first-child) {
  border-left: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody td {
  border-top: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) thead tr {
  background-color: var(--table-header-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody tr:nth-of-type(2n) {
  background-color: var(--table-alt-line-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody tr:nth-of-type(2n+1) {
  background-color: var(--background-primary);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(> .cm-s-obsidian):not(:has(.image-embed)) {
  padding-inline: var(--size-4-1);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(> .image-embed) {
  display: table-cell;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper .image-embed {
  padding-block: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(.is-live-preview .image-embed) {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(.is-live-preview .image-embed) [class=cm-line] {
  display: none;
}

body.table-colorful table {
  --table-header-color: var(--setting-table-header-text, var(--text-on-accent));
  --table-header-bg: var(--setting-table-header-bg, var(--accent-active));
}
body.table-colorful .markdown-source-view table thead .cm-s-obsidian {
  color: var(--setting-table-header-text, var(--text-normal));
}

/* #endregion table */
/* #region tag */
body {
  --tag-color: var(--accent-active);
}

.HyperMD-header .cm-hashtag {
  font-size: var(--tag-size) !important;
}

:is(body, .print .markdown-rendered) {
  --tag-padding-x: 0.4rem;
  --tag-padding-y: 0.05rem;
}

.cm-line span.cm-hashtag {
  vertical-align: baseline;
}

body.tag-click-to-edit .cm-line span.cm-hashtag:not(.cm-formatting) {
  pointer-events: none;
}

body.tag-plain {
  --tag-background: transparent;
}

body.tag-outline {
  --tag-border-color: var(--setting-tag-outline, var(--accent-inactive)) !important;
  --tag-border-width: var(--size-2-1) !important;
  --tag-color: var(--setting-tag-color, var(--accent-active)) !important;
}
body.tag-outline :is(.cm-tag-obsidian, .tag[href="#obsidian"]) {
  --tag-border-color: var(--color-purple) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-todo, .tag[href="#todo"]) {
  --tag-border-color: var(--color-green) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-important, .tag[href="#important"]) {
  --tag-border-color: var(--color-red) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-progress, .tag[href="#progress"]) {
  --tag-border-color: var(--color-blue) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-complete, .tag[href="#complete"]) {
  --tag-border-color: var(--color-orange) !important;
  --tag-color: var(--tag-border-color);
}

body.tag-fill {
  --tag-background: var(--setting-tag-bg, var(--accent-active)) !important;
  --tag-background-hover: var(--tag-background);
  --tag-color: var(--text-on-accent);
  --tag-color-hover: var(--tag-color);
}
body.tag-fill :is(.cm-tag-obsidian, .tag[href="#obsidian"]) {
  --tag-background: var(--color-purple) !important ;
}
body.tag-fill :is(.cm-tag-todo, .tag[href="#todo"]) {
  --tag-background: var(--color-green) !important ;
}
body.tag-fill :is(.cm-tag-important, .tag[href="#important"]) {
  --tag-background: var(--color-red) !important ;
}
body.tag-fill :is(.cm-tag-progress, .tag[href="#progress"]) {
  --tag-background: var(--color-blue) !important ;
}
body.tag-fill :is(.cm-tag-complete, .tag[href="#complete"]) {
  --tag-background: var(--color-orange) !important ;
}

/* #endregion tag */
/* #region heading */
body {
  --font-bold: bold;
  --h1-size: calc(var(--font-text-size) * var(--setting-h1-size, 1.6));
  --h2-size: calc(var(--font-text-size) * var(--setting-h2-size, 1.5));
  --h3-size: calc(var(--font-text-size) * var(--setting-h3-size, 1.4));
  --h4-size: calc(var(--font-text-size) * var(--setting-h4-size, 1.3));
  --h5-size: calc(var(--font-text-size) * var(--setting-h5-size, 1.2));
  --h6-size: calc(var(--font-text-size) * var(--setting-h6-size, 1.1));
  --h1-weight: var(--font-bold);
  --h2-weight: var(--font-bold);
  --h3-weight: var(--font-bold);
  --h4-weight: var(--font-bold);
  --h5-weight: var(--font-bold);
  --h6-weight: var(--font-bold);
  --h1-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h1-size));
  --h2-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h2-size));
  --h3-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h3-size));
  --h4-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h4-size));
  --h5-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h5-size));
  --h6-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h6-size));
  --h1-font: var(--setting-h1-font, var(--font-text));
  --h2-font: var(--setting-h2-font, var(--font-text));
  --h3-font: var(--setting-h3-font, var(--font-text));
  --h4-font: var(--setting-h4-font, var(--font-text));
  --h5-font: var(--setting-h5-font, var(--font-text));
  --h6-font: var(--setting-h6-font, var(--font-text));
}
body.heading-color-base {
  --h1-color: var(--text-normal);
  --h2-color: var(--text-normal);
  --h3-color: var(--text-normal);
  --h4-color: var(--text-normal);
  --h5-color: var(--text-normal);
  --h6-color: var(--text-normal);
}
body.heading-color-accent {
  --h1-color: var(--accent-active);
  --h2-color: var(--accent-active);
  --h3-color: var(--accent-active);
  --h4-color: var(--accent-active);
  --h5-color: var(--accent-active);
  --h6-color: var(--accent-active);
}
body :is(h1, h2, h3, h4, h5, h6) {
  margin: 0 !important;
}

body:is(:not(.css-settings-manager), .heading-color-colorful) {
  --h1-color: var(--setting-h1-color, var(--color-red));
  --h2-color: var(--setting-h2-color, var(--color-orange));
  --h3-color: var(--setting-h3-color, var(--color-green));
  --h4-color: var(--setting-h4-color, var(--color-blue));
  --h5-color: var(--setting-h5-color, var(--color-purple));
  --h6-color: var(--setting-h6-color, var(--color-cyan));
}

.cm-formatting.cm-formatting-header {
  filter: grayscale(70%);
  font-weight: 400 !important;
}
body:not(.fix-line-number) .cm-formatting.cm-formatting-header {
  font-size: 1rem !important;
  line-height: 1.2rem;
}

.cm-s-obsidian .cm-line.HyperMD-header {
  padding-block: 0;
}

body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header) {
  position: relative;
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header)::before {
  content: "";
  position: absolute;
  z-index: 1;
  padding: 0.1rem;
  background-color: transparent;
  font-size: 0.7rem;
  line-height: 1;
  width: fit-content;
  letter-spacing: 0.05rem;
  opacity: 0;
  transition: var(--animation);
  transition-delay: calc(var(--animation-delay) / 2);
  pointer-events: none;
  top: 50%;
  transform: translateY(-50%);
  left: calc(var(--size-4-5) * -1);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header):hover::before {
  opacity: 0.9;
  transition-delay: 0s;
  pointer-events: all;
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div.is-collapsed > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:has(> .cm-foldPlaceholder))::before {
  opacity: 0.9;
  text-decoration: underline 0.1rem;
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder)))::before {
  opacity: 0.4;
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder))):not(:hover)::before {
  color: var(--text-muted);
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder))):hover::before {
  opacity: 1;
}
body:is(:not(.css-settings-manager), .heading-level-enable) div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)::before {
  left: calc(var(--size-4-6) * -1) !important;
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h1, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1) {
  --link-color: var(--h1-color);
  --link-color-underline: var(--h1-color);
  --link-external-color: var(--h1-color);
  --link-external-color-underline: var(--h1-color);
  --link-text-size: var(--h1-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h1, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1)::before {
  content: "H1";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h2, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2) {
  --link-color: var(--h2-color);
  --link-color-underline: var(--h2-color);
  --link-external-color: var(--h2-color);
  --link-external-color-underline: var(--h2-color);
  --link-text-size: var(--h2-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h2, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2)::before {
  content: "H2";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h3, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3) {
  --link-color: var(--h3-color);
  --link-color-underline: var(--h3-color);
  --link-external-color: var(--h3-color);
  --link-external-color-underline: var(--h3-color);
  --link-text-size: var(--h3-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h3, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3)::before {
  content: "H3";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h4, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4) {
  --link-color: var(--h4-color);
  --link-color-underline: var(--h4-color);
  --link-external-color: var(--h4-color);
  --link-external-color-underline: var(--h4-color);
  --link-text-size: var(--h4-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h4, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4)::before {
  content: "H4";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h5, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5) {
  --link-color: var(--h5-color);
  --link-color-underline: var(--h5-color);
  --link-external-color: var(--h5-color);
  --link-external-color-underline: var(--h5-color);
  --link-text-size: var(--h5-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h5, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5)::before {
  content: "H5";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h6, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6) {
  --link-color: var(--h6-color);
  --link-color-underline: var(--h6-color);
  --link-external-color: var(--h6-color);
  --link-external-color-underline: var(--h6-color);
  --link-text-size: var(--h6-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h6, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6)::before {
  content: "H6";
}
body:is(:not(.css-settings-manager), .heading-level-enable) div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)::before {
  left: calc(-1 * var(--size-4-6)) !important;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .heading-collapse-indicator {
  position: absolute;
  z-index: 99;
  height: var(--size-4-4);
  width: var(--size-4-5);
  top: 50%;
  transform: translateY(-50%);
  left: calc(var(--size-2-1) * -1);
  padding: 0 !important;
  --cursor: pointer;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .heading-collapse-indicator svg {
  display: none;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .HyperMD-header {
  position: relative;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .HyperMD-header .cm-fold-indicator .collapse-indicator {
  --cursor: pointer;
  z-index: 99;
  opacity: 0 !important;
  width: var(--size-4-6);
  height: var(--size-4-4) !important;
  left: calc(var(--size-2-1) - var(--size-4-8));
  top: 50% !important;
  transform: translateY(-50%) !important;
}

body.heading-h1-center h1 {
  text-align: center;
}

body.heading-h1-underline :is(h1, .HyperMD-header-1) {
  position: relative;
}
body.heading-h1-underline :is(h1, .HyperMD-header-1)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  bottom: calc(var(--h1-size) * var(--line-height-normal) * 0.3 - var(--size-4-3));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h1-color) 30%, transparent 70%);
}
body.heading-h1-underline h1::after {
  left: 0;
}
body.heading-h1-underline .HyperMD-header-1::after {
  left: var(--size-4-1);
}
body.heading-h1-underline .vertical-tab-content h1 {
  font-size: var(--h1-size);
  font-weight: var(--h1-weight);
}
body.heading-h1-underline.heading-underline-thin :is(h1, .HyperMD-header-1)::after {
  height: var(--size-2-1);
}

body.heading-h2-underline :is(h2, .HyperMD-header-2) {
  position: relative;
}
body.heading-h2-underline :is(h2, .HyperMD-header-2)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  bottom: calc(var(--h2-size) * var(--line-height-normal) * 0.3 - var(--size-4-3));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h2-color) 30%, transparent 70%);
}
body.heading-h2-underline h2::after {
  left: 0;
}
body.heading-h2-underline .HyperMD-header-2::after {
  left: var(--size-4-1);
}
body.heading-h2-underline .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}
body.heading-h2-underline.heading-underline-thin :is(h2, .HyperMD-header-2)::after {
  height: var(--size-2-1);
}

body.heading-h3-underline :is(h3, .HyperMD-header-3) {
  position: relative;
}
body.heading-h3-underline :is(h3, .HyperMD-header-3)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  bottom: calc(var(--h3-size) * var(--line-height-normal) * 0.3 - var(--size-4-3));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h3-color) 30%, transparent 70%);
}
body.heading-h3-underline h3::after {
  left: 0;
}
body.heading-h3-underline .HyperMD-header-3::after {
  left: var(--size-4-1);
}
body.heading-h3-underline .vertical-tab-content h3 {
  font-size: var(--h3-size);
  font-weight: var(--h3-weight);
}
body.heading-h3-underline.heading-underline-thin :is(h3, .HyperMD-header-3)::after {
  height: var(--size-2-1);
}

body.heading-h4-underline :is(h4, .HyperMD-header-4) {
  position: relative;
}
body.heading-h4-underline :is(h4, .HyperMD-header-4)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  bottom: calc(var(--h4-size) * var(--line-height-normal) * 0.3 - var(--size-4-3));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h4-color) 30%, transparent 70%);
}
body.heading-h4-underline h4::after {
  left: 0;
}
body.heading-h4-underline .HyperMD-header-4::after {
  left: var(--size-4-1);
}
body.heading-h4-underline .vertical-tab-content h4 {
  font-size: var(--h4-size);
  font-weight: var(--h4-weight);
}
body.heading-h4-underline.heading-underline-thin :is(h4, .HyperMD-header-4)::after {
  height: var(--size-2-1);
}

body.heading-h5-underline :is(h5, .HyperMD-header-5) {
  position: relative;
}
body.heading-h5-underline :is(h5, .HyperMD-header-5)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  bottom: calc(var(--h5-size) * var(--line-height-normal) * 0.3 - var(--size-4-3));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h5-color) 30%, transparent 70%);
}
body.heading-h5-underline h5::after {
  left: 0;
}
body.heading-h5-underline .HyperMD-header-5::after {
  left: var(--size-4-1);
}
body.heading-h5-underline .vertical-tab-content h5 {
  font-size: var(--h5-size);
  font-weight: var(--h5-weight);
}
body.heading-h5-underline.heading-underline-thin :is(h5, .HyperMD-header-5)::after {
  height: var(--size-2-1);
}

body.heading-h6-underline :is(h6, .HyperMD-header-6) {
  position: relative;
}
body.heading-h6-underline :is(h6, .HyperMD-header-6)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  bottom: calc(var(--h6-size) * var(--line-height-normal) * 0.3 - var(--size-4-3));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h6-color) 30%, transparent 70%);
}
body.heading-h6-underline h6::after {
  left: 0;
}
body.heading-h6-underline .HyperMD-header-6::after {
  left: var(--size-4-1);
}
body.heading-h6-underline .vertical-tab-content h6 {
  font-size: var(--h6-size);
  font-weight: var(--h6-weight);
}
body.heading-h6-underline.heading-underline-thin :is(h6, .HyperMD-header-6)::after {
  height: var(--size-2-1);
}

body.heading-h6-variant :is(h6, .cm-header-6) {
  font-variant: small-caps;
}

/* #endregion heading */
/* #region image */
body.theme-dark.image-dark-hover img {
  filter: brightness(0.7);
  transition: var(--animation);
}
body.theme-dark.image-dark-hover img:hover {
  filter: brightness(0.85);
}

img {
  border-radius: var(--radius-l);
  cursor: pointer;
}

/* hint text, reference from https://github.com/chrisgrieser/shimmering-focus */
body.image-alt .image-embed[alt] {
  padding: var(--size-4-1) 0;
}
body.image-alt .image-embed[alt]::after {
  display: block;
  text-align: center;
}
body.image-alt .image-embed[alt]:not([alt$=".png"], [alt$=".jpg"], [alt$=".jpeg"], [alt$=".tiff"], [alt$=".webp"], [alt$=".bmp"])::after {
  content: attr(alt);
  font-size: var(--font-smaller);
  color: var(--text-faint);
}
body.image-alt .view-content img:not(.emoji) {
  display: block;
  margin-right: auto;
  margin-left: auto;
}

/* scale on click, reference from blue-topaz */
body.image-zoom :is(.markdown-preview-view, .workspace-leaf-content[data-type=image]) img:not([class*=emoji], .banner-image) {
  cursor: zoom-in;
}
body.image-zoom :is(.markdown-preview-view, .workspace-leaf-content[data-type=image]) img:not([class*=emoji], .banner-image):active {
  overflow: hidden;
  position: fixed;
  object-fit: contain;
  height: 100%;
  width: 100%;
  margin: 0;
  border-radius: 0;
  inset: 0;
  z-index: 200;
  background-image: linear-gradient(to right, hsl(var(--background-primary-hsl)), hsl(var(--background-secondary-hsl)), hsl(var(--background-primary-hsl)));
}

/* #endregion image */
/* #region canvas */
.canvas-wrapper .canvas-node-container {
  border-radius: var(--radius-l);
  background-color: hsl(var(--background-primary-hsl));
}
.canvas-wrapper .canvas-card-menu {
  padding: var(--size-2-1);
  border-radius: var(--radius-m);
  bottom: var(--size-4-6);
}
.canvas-wrapper .canvas-card-menu .canvas-card-menu-button {
  --icon-size: var(--icon-l);
}
.canvas-wrapper :is(.canvas-menu, .canvas-controls-group) {
  border-radius: var(--radius-m);
}
.canvas-wrapper .canvas-menu {
  padding: var(--size-4-1);
}
.canvas-wrapper .canvas-menu .clickable-icon {
  padding: var(--size-2-3);
}
.canvas-wrapper .canvas-control-group {
  box-shadow: none;
  border-radius: var(--radius-m);
  background-color: hsl(var(--background-secondary-hsl));
}
.canvas-wrapper .canvas-control button {
  transition: none;
  margin: var(--size-2-1);
  padding: var(--size-2-3);
  border-radius: var(--radius-s);
  border-bottom: none;
}
.canvas-wrapper .canvas-control button:not([disabled]):hover {
  background-color: var(--background-modifier-hover) !important;
}

body.canvas-control-hide .canvas-control-group {
  opacity: 0;
  transition: var(--animation);
  transition-delay: var(--animation-delay);
}
body.canvas-control-hide .canvas-control-group:hover {
  transition-delay: 0s;
  opacity: 1;
}

body.canvas-center .canvas-node-content.markdown-embed > .markdown-embed-content > .markdown-preview-view > .markdown-preview-sizer {
  text-align: center;
}

/* #endregion canvas */
/* #region callout */
body {
  --callout-padding: var(--size-4-3) var(--size-4-6);
}

.callout-icon {
  margin-block: auto;
}

.callout-fold {
  margin: auto 0 !important;
}

/* #endregion callout */
/* #region pdf */
body.theme-dark.pdf-dark-hover .pdf-viewer {
  opacity: 0.7;
  transition: opacity var(--animation);
}
body.theme-dark.pdf-dark-hover .pdf-viewer:hover {
  opacity: 0.85;
}

/* #endregion pdf */
/* #region property */
.metadata-container {
  margin-block-end: var(--size-4-2);
  transition: var(--animation);
  --metadata-property-background-hover: var(--md-container-bg);
}
body.prop-outline .metadata-container {
  transform: none;
  --metadata-border-width: var(--block-outline-width);
  --metadata-border-radius: var(--radius-l);
  --metadata-border-color: var(--accent-inactive);
  --metadata-padding: var(--radius-l);
}
body.prop-outline .metadata-container:hover {
  --metadata-border-color: var(--accent-active);
}
.metadata-container .metadata-add-button {
  padding: var(--size-4-1);
  margin-top: var(--size-4-2);
  gap: var(--size-2-3);
}

.metadata-properties-heading .collapse-indicator {
  left: calc(var(--size-4-8) * -1);
}

.metadata-property-icon,
input.metadata-property-key-input,
.multi-select-pill,
.multi-select-input {
  line-height: calc(var(--line-height-normal) / 1.5);
  height: calc(var(--line-height-normal) / 1.5);
}

.metadata-property-key {
  padding-block: var(--size-2-1);
}

.metadata-property:not([data-property-key=tags]) .metadata-property-key-input {
  padding-block: var(--size-2-3);
}

.multi-select-pill {
  transition: var(--animation);
}

.metadata-property[data-property-key=cssclasses] {
  --pill-padding-x: 0.4em;
}
.metadata-property[data-property-key=cssclasses] .multi-select-pill {
  line-height: 1;
}

.multi-select-pill-remove-button {
  cursor: pointer;
}

.multi-select-pill-content {
  line-height: 1.6;
}

/* #endregion property */
/* #endregion [editor] */
/* #region [plugins] */
/* #region better-command-palette */
.better-command-palette p.better-command-palette-title {
  margin: var(--size-4-3) var(--size-4-6);
}
.better-command-palette .prompt-input {
  font-size: var(--font-ui-large);
}

/* #endregion better-command-palette */
/* #region calender */
body.calendar-swap-year-month #calendar-container .nav {
  padding-left: var(--size-4-1);
}
body.calendar-swap-year-month #calendar-container .nav .title {
  display: flex;
  flex-direction: row-reverse;
  font-weight: normal;
  font-size: 1.2rem;
}
body.calendar-swap-year-month #calendar-container .nav .title .year {
  color: var(--text-normal);
  letter-spacing: 0.1rem;
  display: flex;
  align-items: center;
}
body.calendar-swap-year-month #calendar-container .nav .title .year::after {
  content: var(--setting-calendar-year-suffix, "年");
  margin-right: var(--size-2-1);
  margin-left: var(--size-2-1);
}
body.calendar-swap-year-month #calendar-container .nav .title .month {
  height: var(--size-4-6);
  line-height: var(--size-4-6);
  letter-spacing: 0.1rem;
  font-weight: bold;
  color: var(--accent-active);
}

.theme-light {
  --calendar-weekend-bg: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 24%), 24%);
}

.theme-dark {
  --calendar-weekend-bg: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) - 24%), 24%);
}

#calendar-container {
  --color-text-today: var(--text-on-accent);
  --color-text-weeknum: var(--accent-active);
}
#calendar-container thead {
  border-bottom: var(--size-2-1) solid var(--accent-active);
}
#calendar-container th {
  padding: 2px 0 4px;
  font-weight: bold;
  letter-spacing: 0.1em;
}
#calendar-container .nav {
  padding: 0;
  margin-bottom: var(--size-4-3);
  padding-left: var(--size-4-1);
  justify-content: space-around;
}
#calendar-container .nav .right-nav {
  margin-left: unset;
}
#calendar-container .day {
  border: 1px solid transparent;
}
#calendar-container .day:hover {
  border-color: var(--accent-inactive);
}
#calendar-container .day.today:hover {
  border-color: var(--text-on-accent);
}
#calendar-container .day:active {
  background-color: var(--accent-inactive);
}
#calendar-container .active {
  background-color: var(--accent-inactive);
  color: var(--text-normal);
}
#calendar-container .today {
  --color-dot: var(--text-on-accent);
  color: var(--text-on-accent);
  background-color: var(--accent-active);
}
#calendar-container .reset-button {
  white-space: nowrap;
}
#calendar-container .title {
  line-height: 1;
  font-size: 1.4rem;
  white-space: nowrap;
}
#calendar-container .dot-container {
  translate: 0 calc(-1 * var(--size-2-1));
}

body.calendar-weekend #calendar-container tbody tr td:nth-last-child(2),
body.calendar-weekend #calendar-container tbody tr td:nth-last-child(1) {
  background-color: var(--calendar-weekend-bg);
}

.workspace-leaf-content[data-type=calendar] .view-content {
  padding-inline: var(--size-4-1);
  padding-block: 0;
}

body #calendar-container {
  max-width: var(--setting-calendar-max-width, 500px);
  margin-inline: auto;
}
body #calendar-container .day {
  padding: var(--size-2-1) var(--size-4-1) !important;
  border: none;
}

/* #endregion calender */
/* #region excalidraw */
/* reference from https://github.com/Maldonacho/obsidian-encore-theme */
.excalidraw-wrapper {
  background-color: transparent;
}

.excalidraw {
  border-radius: 8px;
  background-color: transparent;
  --ui-font: var(--font-interface);
  --help-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Ccircle cx='12' cy='12' r='10'%3E%3C/circle%3E%3Cpath d='M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3'%3E%3C/path%3E%3Cline x1='12' y1='17' x2='12.01' y2='17'%3E%3C/line%3E%3C/svg%3E");
  --grip-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Ccircle cx='12' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='19' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='5' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='12' cy='15' r='1'%3E%3C/circle%3E%3Ccircle cx='19' cy='15' r='1'%3E%3C/circle%3E%3Ccircle cx='5' cy='15' r='1'%3E%3C/circle%3E%3C/svg%3E");
}
.excalidraw .welcome-screen-menu {
  display: none;
}
.excalidraw .mobile-misc-tools-container {
  right: calc(var(--editor-container-padding) * -0.8);
}
.excalidraw .mobile-misc-tools-container .library-button {
  border-radius: 0;
  padding: var(--size-4-1);
}
:is(.excalidraw, .excalidraw.theme--dark) {
  --color-selection: var(--accent-active);
  --color-primary: var(--accent-active);
  --color-primary-darker: var(--accent-active);
  --color-primary-darkest: var(--text-normal);
  --button-gray-2: var(--nav-item-background-hover);
  --color-primary-light: var(--nav-item-background-hover);
  --border-radius-md: 4px;
  --border-radius-lg: 8px;
  --input-shadow: none;
  --input-shadow-hover: none;
}
:is(.excalidraw, .excalidraw.theme--dark) .color-picker-label-swatch {
  border: 1px solid var(--color-base-100);
}
:is(.excalidraw, .excalidraw.theme--dark) .color-picker-hash {
  width: 1rem;
}
:is(.excalidraw, .excalidraw.theme--dark) .Island > div:first-child > svg {
  -webkit-mask-image: var(--grip-icon);
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: unset;
  background-color: var(--button-gray-1);
}
:is(.excalidraw, .excalidraw.theme--dark) :is(.Island, .mobile-misc-tools-container) {
  backdrop-filter: blur(var(--size-2-3));
}
.excalidraw .popover {
  box-shadow: none;
  background-color: hsl(var(--background-secondary-hsl)) !important;
  animation: op var(--animation) !important;
}
.excalidraw .popover ul {
  border-radius: var(--radius-m);
  margin-left: 0;
  padding: var(--size-2-3);
  font-family: var(--font-text);
  box-shadow: var(--shadow-s);
}
.excalidraw .popover ul li button {
  border-radius: var(--radius-s);
  transition: none;
}
.excalidraw .popover ul li button:hover {
  background-color: var(--background-modifier-hover);
  color: var(--text-normal);
}
.excalidraw .popover ul hr {
  margin-block: var(--size-2-3);
  border-color: var(--hr-color);
  margin-inline: calc(-1 * var(--size-4-1));
}
.excalidraw .layer-ui__wrapper__footer-right {
  transform: translateY(-32px);
}
.excalidraw .layer-ui__wrapper__footer-right .help-icon {
  display: none;
}
.excalidraw .layer-ui__wrapper__footer-left {
  margin-bottom: 0.3rem;
}

.theme-light .excalidraw:not(.theme--dark) {
  --button-gray-1: var(--color-base-30);
  --button-gray-3: var(--color-base-30);
  --dialog-border-color: var(--color-base-40);
  --island-bg-color: var(--color-base-00);
  --input-border-color: var(--color-base-30);
  --input-bg-color: var(--color-base-20);
}

.theme-dark .excalidraw.theme--dark {
  --button-gray-1: var(--color-base-30);
  --button-gray-3: var(--color-base-30);
  --dialog-border-color: var(--color-base-40);
  --island-bg-color: var(--color-base-00);
  --input-border-color: var(--color-base-30);
  --input-bg-color: var(--color-base-20);
}

.help-icon {
  -webkit-mask-image: var(--help-icon);
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 18px;
  background-color: var(--button-gray-1);
  height: 30px;
}
.help-icon :hover {
  background-color: var(--button-gray-2);
}
.help-icon > * {
  display: none;
}

.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action:is([aria-label="Press ESC to exit fullscreen mode"], [aria-label="Open selected text as link\a(SHIFT+CLICK to open in a new pane)"], [aria-label="Save (will also update transclusions)"], [aria-label="Install or update Excalidraw Scripts"]) > svg {
  -webkit-mask-image: unset;
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 16px;
  background-color: var(--color-base-70);
  border-radius: 0;
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Press ESC to exit fullscreen mode"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpolyline points='15 3 21 3 21 9'%3E%3C/polyline%3E%3Cpolyline points='9 21 3 21 3 15'%3E%3C/polyline%3E%3Cline x1='21' y1='3' x2='14' y2='10'%3E%3C/line%3E%3Cline x1='3' y1='21' x2='10' y2='14'%3E%3C/line%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Open selected text as link\a(SHIFT+CLICK to open in a new pane)"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6'%3E%3C/path%3E%3Cpolyline points='15 3 21 3 21 9'%3E%3C/polyline%3E%3Cline x1='10' y1='14' x2='21' y2='3'%3E%3C/line%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Save (will also update transclusions)"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z'%3E%3C/path%3E%3Cpolyline points='17 21 17 13 7 13 7 21'%3E%3C/polyline%3E%3Cpolyline points='7 3 7 8 15 8'%3E%3C/polyline%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Install or update Excalidraw Scripts"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4'%3E%3C/path%3E%3Cpolyline points='14 2 14 8 20 8'%3E%3C/polyline%3E%3Cpath d='m9 18 3-3-3-3'%3E%3C/path%3E%3Cpath d='m5 12-3 3 3 3'%3E%3C/path%3E%3C/svg%3E");
}

.workspace-leaf-content .excalidraw-view {
  padding: unset;
  padding-right: 4px;
  padding-bottom: 4px;
}

.excalidraw .excalidraw__embeddable__outer .theme-light {
  --background-primary: hsla(var(--accent-h),
      calc(var(--accent-s) - 12%),
      97%,
      var(--bg-opacity)) !important ;
}

.theme-dark .excalidraw .excalidraw-textEditorContainer * {
  color: var(--text-on-accent) !important;
  filter: none !important;
}

/* #endregion excalidraw */
/* #region dbfolder */
body.link-icon .database-plugin__embed-link-wrapper a.internal-link[class*=database-plugin]::before {
  content: none;
}

/* #endregion dbfolder */
/* #region git */
.workspace-leaf-content[data-type=diff-view] .d2h-diff-table {
  font-family: var(--font-monospace);
}

body.back-blur-title-bar .workspace-leaf-content[data-type=diff-view] .d2h-file-diff {
  padding-top: var(--size-4-8);
}

/* #endregion git */
/* #region my-snippets */
.MySnippets-statusbar-menu {
  --interactive-normal: var(--accent-inactive);
}

/* #endregion my-snippets */
/* #region banners */
img.banner-image {
  border-radius: 0;
}

.obsidian-banner-spacer {
  height: 0;
}

.markdown-source-view .cm-content:has(.cm-line.has-banner) {
  padding-top: calc(var(--banner-height) - var(--size-4-8) + 1.5rem) !important;
}
.markdown-source-view .obsidian-banner-spacer {
  margin: 0 !important;
}

.markdown-preview-sizer > div.obsidian-banner-wrapper {
  position: initial !important;
  margin-top: var(--banner-height);
}

/* #endregion banners */
/* #region kanban */
body {
  --kanban-item-color: var(--setting-kanban-item-color, var(--text-normal));
  --kanban-item-bg: var(--setting-kanban-item-bg, hsl(var(--background-primary-hsl)));
  --kanban-board-bg: var(--setting-kanban-board-bg, hsl(var(--background-secondary-hsl)));
}

:is(.kanban-plugin, .kanban-plugin__item, .kanban-plugin__lane) button {
  line-height: normal;
  padding-block: 0;
}
:is(.kanban-plugin__item-action-add, .kanban-plugin__lane-action-add) {
  color: var(--accent-active);
}
:is(.kanban-plugin__item-action-add, .kanban-plugin__lane-action-add):hover {
  background-color: var(--accent-active);
  color: var(--text-on-accent);
}
.kanban-plugin__lane {
  background: var(--kanban-board-bg);
}
.kanban-plugin__lane-form-wrapper {
  background: var(--kanban-board-bg);
  border: 1px solid var(--background-modifier-border-hover);
  box-shadow: var(--shadow-s);
}
.kanban-plugin__lane-form-wrapper textarea {
  padding: var(--size-4-1) var(--size-2-3);
}
.kanban-plugin__grow-wrap > textarea, .kanban-plugin__grow-wrap:after {
  border-radius: var(--radius-s);
  box-sizing: border-box;
  transition: box-shadow var(--animation) !important;
}
.kanban-plugin__new-item-button {
  background-color: var(--kanban-item-bg) !important;
  transition: var(--animation);
}
.kanban-plugin__new-item-button:hover {
  color: var(--accent-active);
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper {
  padding: 0;
  height: 100%;
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper * {
  height: 100%;
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper textarea {
  padding: var(--size-2-1) var(--size-2-3);
}
.kanban-plugin__item-title-wrapper {
  background: var(--kanban-item-bg);
}
.kanban-plugin__item-title-wrapper p {
  color: var(--kanban-item-color);
}
.kanban-plugin__item-title-wrapper:has(.kanban-plugin__item-input-wrapper) {
  background: var(--background-modifier-form-field);
}
.kanban-plugin__item-postfix-button {
  padding: var(--size-4-1);
  margin-left: var(--size-2-3);
  margin-right: calc(var(--size-2-1) * -1);
}
.kanban-plugin__lane-title .kanban-plugin__lane-input {
  padding-inline: var(--size-2-3);
}
.kanban-plugin__lane a[aria-label=Close] {
  padding: var(--size-4-1);
  margin-left: var(--size-2-3);
  margin-right: calc(var(--size-2-1) * -1);
}
.kanban-plugin__markdown-preview-view :is(ul, ol) {
  padding-inline-start: var(--size-4-8);
}
.kanban-plugin__markdown-preview-view :is(ul, ol) li {
  margin: 0 !important;
  line-height: var(--line-height-tight) !important;
}
.kanban-plugin__markdown-preview-view img {
  pointer-events: none !important;
}
.kanban-plugin__autocomplete {
  backdrop-filter: blur(var(--size-4-8));
  padding-inline: var(--size-2-2);
  animation: op var(--animation);
  border-radius: var(--radius-m);
  border: 1px solid var(--background-modifier-border);
  box-shadow: var(--shadow-s);
  z-index: var(--layer-notice);
}
.kanban-plugin__autocomplete-item, .kanban-plugin__autocomplete-item-active {
  border: none;
  border-radius: var(--radius-s);
  margin-block: var(--size-4-1) !important;
}
.kanban-plugin__autocomplete-item *, .kanban-plugin__autocomplete-item-active * {
  opacity: 1 !important;
  transition: none !important;
}
.kanban-plugin__autocomplete-item-active * {
  color: var(--text-on-accent) !important;
}
.kanban-plugin__autocomplete-item:hover {
  background-color: var(--background-modifier-hover);
  color: var(--text-normal);
}
.kanban-plugin * {
  caret-color: var(--accent-active);
}

.kanban-plugin__board-settings-modal :is(.is-open .choices__list--dropdown, .choices__list--dropdown) {
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices {
  border: none;
  box-shadow: var(--input-shadow);
  border-radius: var(--input-radius);
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices__inner {
  border-radius: var(--input-radius);
}
.kanban-plugin__board-settings-modal .choices__list {
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices__list--dropdown {
  border-radius: var(--input-radius);
}
.kanban-plugin__board-settings-modal .choices__list--dropdown:focus {
  box-shadow: 0 0 0 3px var(--background-modifier-border-focus);
}
.kanban-plugin__board-settings-modal .choices__item--choice {
  border-radius: var(--radius-s);
}
.kanban-plugin__board-settings-modal .choices::after {
  content: var(--select-bg-img);
  width: 1.2rem;
  height: 1.2rem;
  border: none;
  margin-top: 0;
  translate: 0 -50%;
}
.kanban-plugin__board-settings-modal .choices[data-type*=select-one].is-open:after {
  margin-top: 0;
}

body.search-internal-enable .kanban-plugin__search-wrapper {
  width: fit-content;
  padding: var(--size-2-3) var(--size-2-3);
  position: absolute;
  background-color: var(--kanban-board-bg);
  border: 1px solid var(--background-modifier-border-hover);
  border-radius: var(--radius-m);
  left: unset;
  top: var(--size-2-3);
  right: var(--size-2-3);
}
body.search-internal-enable .kanban-plugin__search-wrapper a[aria-label=Cancel] {
  padding: var(--size-4-1);
  margin-left: var(--size-2-2);
}

/* #endregion kanban */
/* #region annotator */
hypothesis-app {
  --radius-base: 0.25rem;
}
hypothesis-app textarea {
  color: var(--text-normal) !important;
  border-bottom-left-radius: calc(var(--radius-base) * 4 / 5) !important;
  border-bottom-right-radius: calc(var(--radius-base) * 4 / 5) !important;
}
hypothesis-app .Hyp-Card {
  transition: var(--setting-animation-time, 200ms) ease;
  border-radius: calc(var(--radius-base) * 2);
}
hypothesis-app :is(.Hyp-LabeledButton, .Hyp-TextInput) {
  border-radius: var(--radius-base);
}

/* #endregion annotator */
/* #region dataview */
pre.dataview {
  border: 0 !important;
  padding-top: calc(var(--code-size) * var(--line-height-normal) * 0.7);
}
pre.dataview-error {
  font-family: var(--font-monospace);
}

pre.dataview-error::before {
  content: "DataView Error";
  color: var(--color-red);
  position: absolute;
  top: var(--size-4-1);
  font-weight: bold;
}

body.dv-enable .cm-embed-block:has(.dataview) {
  border-color: var(--accent-inactive);
}

/* #endregion dataview */
/* #region recent-files */
.workspace-leaf-content[data-type=recent-files] .nav-file-title {
  padding: var(--size-4-1) var(--size-4-2);
  border-radius: var(--radius-s);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title:hover {
  background-color: var(--nav-item-background-hover);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title:hover:not(.is-active) .recent-files-file-delete {
  color: var(--accent-active);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title.is-active {
  background-color: var(--accent-active);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title.is-active::after {
  content: none;
}
.workspace-leaf-content[data-type=recent-files] .recent-files-file-delete {
  color: var(--text-on-accent);
  transform: translateY(var(--size-4-1));
}

/* #endregion recent-files */
/* #region markmap */
body .markmap {
  font: var(--font-text-size) var(--font-text);
}
body .mm-toolbar {
  background-color: var(--status-bar-background);
  border-color: var(--status-bar-border-color);
}

/* #endregion markmap */
/* #region edit-toolbar */
body.search-internal-enable :is(.cMenuToolbarpopover + .document-search-container.top,
.document-search-container:has(+ #cMenuToolbarModalBar.top)) {
  top: var(--size-4-12);
  right: var(--size-2-2);
}

#cMenuToolbarModalBar.top {
  margin: var(--size-2-2);
}

/* #endregion edit-toolbar */
/* #endregion [plugins] */
/* #region [workspace] */
/* #region document-search */
.obsidian-search-match-highlight {
  background-color: var(--background-secondary);
}

body.search-internal-enable .document-search-container {
  background-color: hsl(var(--background-secondary-hsl)) !important;
  position: absolute;
  top: var(--size-4-2);
  right: var(--size-4-4);
  border-radius: var(--radius-m);
  height: fit-content;
  border: var(--size-2-1) solid var(--frame-outline-color);
  box-shadow: var(--shadow-s);
  margin: 0;
}
body.search-internal-enable .document-search-container .document-search-buttons .document-search-button {
  font-size: 0;
  background-color: transparent !important;
  color: var(--text-muted);
  cursor: var(--cursor);
  height: var(--input-height);
  width: var(--input-height);
  padding: var(--size-4-1);
  box-shadow: unset !important;
}
body.search-internal-enable .document-search-container .document-search-buttons .document-search-button:hover {
  background-color: var(--background-modifier-hover) !important;
  color: var(--text-normal);
}
body.search-internal-enable .document-search-container .document-search-buttons button::before {
  content: " " !important;
  display: block;
  height: var(--size-4-6);
  width: var(--size-4-6);
  background-color: currentColor;
}
body.search-internal-enable .document-search-container .document-search-buttons button:nth-child(1)::before {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M12 18V6m0 0-6 6m6-6 6 6'/%3e%3c/svg%3e");
}
body.search-internal-enable .document-search-container .document-search-buttons button:nth-child(2)::before {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M12 6v12m0 0 6-6m-6 6-6-6'/%3e%3c/svg%3e");
}
body.search-internal-enable .document-search-container .document-search-buttons button:nth-child(3)::before {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath fill='black' d='M5.647 17H3.819l3.328-9.455h2.114L12.595 17h-1.829L8.241 9.484h-.074L5.647 17Zm.06-3.707h4.986v1.376H5.707v-1.376Zm9.73-5.748V17h-1.671V7.545h1.671Zm3.39 0V17h-1.672V7.545h1.672Z'/%3e%3c/svg%3e");
}
body.search-internal-enable .document-search-container .document-search-close-button {
  top: 0;
}

.markdown-source-view,
.markdown-reading-view {
  container-type: inline-size;
}

@container (max-width: 390px) {
  body.search-internal-enable .document-search-container {
    width: calc(100% - 2 * var(--size-4-3));
  }
  body.search-internal-enable .document-search-container :is(.document-search-input, .document-replace-input) {
    min-width: 0;
  }
}
@container (max-width: 320px) {
  body.search-internal-enable .document-search-container :is(.document-search-buttons [aria-label="Shift + F3"], .document-replace-buttons [aria-label="Ctrl + Alt + Enter"]) {
    display: none;
  }
}
/* #endregion document-search */
/* #region modal */
body {
  --modal-width: min(90vw, var(--modal-max-width));
  --modal-height: min(85vh, var(--modal-max-height));
}

:is(.horizontal-tab-nav-item, .vertical-tab-nav-item).is-active {
  background-color: var(--nav-item-background-active) !important;
}

:is(.document-search-close-button, .modal-close-button) {
  height: var(--input-height);
  width: var(--input-height);
  transition: var(--animation);
  padding: 3px;
}
:is(.document-search-close-button, .modal-close-button)::before {
  content: " " !important;
  display: block;
  height: var(--size-4-6);
  width: var(--size-4-6);
  background-color: currentColor;
  -webkit-mask-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M17.25 17.25 6.75 6.75m10.5 0-10.5 10.5'/%3e%3c/svg%3e");
}
:is(.document-search-close-button, .modal-close-button):hover {
  background-color: var(--frame-outline-color);
}

body.titlebar-colorful .modal-container .mod-settings::before {
  --setting-color-logo: var(--text-on-accent);
}

input {
  transition-duration: var(--setting-animation-time, 200ms) !important;
}

body.modal-slider input[type=range]::-webkit-slider-thumb {
  height: 1.6em;
  width: var(--size-4-1);
  background-color: var(--text-muted);
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  border-radius: var(--radius-m);
}
body.modal-slider input[type=range]::-webkit-slider-thumb:hover {
  box-shadow: none;
}

body:is(.modal-toggle-round, .modal-toggle-thin) .checkbox-container {
  --toggle-radius: var(--radius-m);
  height: 1rem;
  transition: var(--animation-slow);
  border: var(--size-2-1) solid var(--text-faint);
  background-color: var(--color-base-20);
  cursor: pointer;
}
body:is(.modal-toggle-round, .modal-toggle-thin) .checkbox-container input[type=checkbox] {
  display: none;
}

body.modal-toggle-round .checkbox-container {
  --toggle-shadow: var(--color-base-40);
}
body.modal-toggle-round .checkbox-container::after {
  left: 0;
  height: calc(var(--toggle-width) / 3);
  width: calc(var(--toggle-width) / 3);
  bottom: 30%;
  border-radius: calc(var(--toggle-width) / 2);
  border: var(--toggle-border-width) solid var(--text-faint);
  background-color: var(--text-on-accent);
  margin: 0;
  transition: var(--animation-slow);
  box-shadow: 0 4px 2px 0 var(--toggle-shadow);
}
:is(body.modal-toggle-round .checkbox-container:hover, body.modal-toggle-round .checkbox-container:focus)::after {
  bottom: 10%;
  box-shadow: 0 2px 2px 0 var(--toggle-shadow);
}
body.modal-toggle-round .checkbox-container.is-enabled {
  border-color: var(--accent-active);
  background-color: var(--accent-inactive);
}
body.modal-toggle-round .checkbox-container.is-enabled::after {
  border-color: var(--accent-active);
  transform: none;
  left: calc(100% - var(--toggle-width) / 3 - 3 * var(--toggle-border-width));
}

/* 参考 https://uiverse.io/martinval9/white-lionfish-18 */
body.modal-toggle-thin .checkbox-container::before {
  height: var(--toggle-border-width);
  left: calc(var(--toggle-border-width) * 2);
  right: calc(var(--toggle-border-width) * 2);
  opacity: 1;
  top: 50%;
  bottom: initial;
  transform: translateY(-50%);
  background-color: var(--text-faint);
}
body.modal-toggle-thin .checkbox-container::after {
  left: var(--toggle-border-width);
  height: 0.8rem;
  bottom: 50%;
  border-radius: var(--radius-m) var(--radius-m) 0 0;
  border: var(--toggle-border-width) solid var(--text-faint);
  border-bottom-width: calc(var(--toggle-border-width) / 2);
  background-color: var(--text-on-accent);
  width: 20%;
  margin: 0;
  transition: var(--animation-slow);
}
body.modal-toggle-thin .checkbox-container:hover::after {
  height: 0.6rem;
}
body.modal-toggle-thin .checkbox-container:active::after {
  width: calc(100% - var(--toggle-border-width) * 6);
}
body.modal-toggle-thin .checkbox-container.is-enabled {
  border-color: var(--accent-active);
  background-color: var(--accent-inactive);
}
body.modal-toggle-thin .checkbox-container.is-enabled::before {
  background-color: var(--accent-active);
}
body.modal-toggle-thin .checkbox-container.is-enabled::after {
  border-color: var(--accent-active);
  transform: none;
  left: calc(80% - var(--toggle-border-width) * 4);
}
body.modal-toggle-thin .checkbox-container.is-enabled:active::after {
  left: calc(2 * var(--toggle-border-width));
}

body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container {
  --modal-header-height: var(--size-4-12);
  --top-search-right: var(--size-4-12);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings {
  container-type: inline-size;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings::before {
  content: var(--setting-header-title, "maple 0.7.38");
  position: absolute;
  left: 50%;
  top: var(--size-4-6);
  transform: translate(-50%, -50%);
  font-size: 1.4rem;
  font-weight: bold;
  color: var(--setting-color-logo, var(--text-accent));
  transition: var(--animation);
}
@container (max-width:750px) {
  body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings::before {
    opacity: 0;
  }
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content {
  background-color: var(--frame-background-color);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-header {
  background-color: hsl(var(--background-secondary-hsl));
  border-top: 1px solid var(--divider-color);
  margin-top: var(--modal-header-height);
  padding-top: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container {
  padding-top: var(--modal-header-height);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content {
  background-color: hsl(var(--background-primary-hsl));
  border-top: 1px solid var(--divider-color);
  padding-top: var(--size-4-6);
  padding-right: var(--size-4-8);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .settings-search-container {
  padding: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .settings-search-container .settings-search-input {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  left: var(--size-4-2);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 - var(--size-2-1)));
  width: calc(clamp(180px, var(--modal-width) / 4, 250px) - var(--size-4-3) * 1);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item-heading {
  margin-top: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) {
  padding-bottom: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) .setting-item-info {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) .setting-item-control {
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
  position: absolute;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) + .setting-filter-container {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item {
  padding: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item .setting-item-info {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item .setting-item-control {
  display: block;
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item-name:has(.search-input-container) {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content > :nth-child(5):not(.style-settings-container):has(input[type=search]) {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc(var(--modal-header-height) / 2 - var(--input-height) + var(--size-4-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content > :nth-child(5):not(.style-settings-container):has(input[type=search]) .setting-item-info {
  display: none;
}

select,
.dropdown,
button {
  transition: var(--animation);
}

.theme-light {
  --select-bg-img: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23222" d="M12 14.975q-.2 0-.387-.075q-.188-.075-.313-.2l-4.6-4.6q-.275-.275-.275-.7q0-.425.275-.7q.275-.275.7-.275q.425 0 .7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275q.425 0 .7.275q.275.275.275.7q0 .425-.275.7l-4.6 4.6q-.15.15-.325.212q-.175.063-.375.063Z"/></svg>');
}

.theme-dark {
  /* current color seems to be invalid for SVG in background-image */
  --select-bg-img: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23eee" d="M12 14.975q-.2 0-.387-.075q-.188-.075-.313-.2l-4.6-4.6q-.275-.275-.275-.7q0-.425.275-.7q.275-.275.7-.275q.425 0 .7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275q.425 0 .7.275q.275.275.275.7q0 .425-.275.7l-4.6 4.6q-.15.15-.325.212q-.175.063-.375.063Z"/></svg>');
}

:is(select, .dropdown) {
  background-size: 1.2rem;
  background-position: right 0.4rem top 56%, 0 0;
  background-image: var(--select-bg-img) !important;
}

.modal-container .is-loading {
  position: initial;
}
.modal-container .modal-close-button {
  top: 9px;
  right: 9px !important;
}
.modal-container :is(.mod-community-plugin, .mod-community-theme) .modal-sidebar .setting-item:first-child {
  max-width: var(--modal-community-sidebar-width);
}
.modal-container .mod-settings .modal-content .setting-hotkey {
  box-shadow: var(--shadow-s);
  border: 2px solid var(--accent-inactive);
  border-radius: var(--size-2-3);
  font-size: var(--font-ui-smaller);
  padding: 0.05rem 0.5rem;
  transition: var(--animation);
}
.modal-container .mod-settings .modal-content .setting-hotkey .setting-hotkey-icon {
  margin-right: -0.25rem;
}
.modal-container .mod-settings .modal-content .setting-hotkey:hover {
  border-color: var(--accent-active);
}
.modal-container .mod-settings .modal-content .setting-hotkey.mod-active {
  color: var(--text-faint);
  background-color: var(--frame-background-color);
}
.modal-container .mod-settings .modal-content .setting-hotkey:not(.has-conflict):not(.mod-active) {
  background-color: var(--code-background);
}
.modal-container .mod-settings .modal-content .setting-item-heading .setting-item-name {
  font-weight: bold;
  font-size: var(--font-ui-medium);
}

body.setting-group-title.theme-dark .modal-container .mod-settings .modal-content .vertical-tab-header-group-title {
  filter: brightness(1.4);
}

body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group {
  padding-bottom: 0;
}
body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title {
  color: var(--accent-active);
  font-size: var(--font-text-size);
  position: relative;
}
body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title::before {
  content: "";
  position: absolute;
  height: calc(100% - var(--size-4-4));
  width: var(--size-4-1);
  top: var(--size-4-2);
  left: calc(var(--size-4-1) * -1);
  background-color: var(--accent-active);
  border-radius: var(--size-2-1);
}

:is(.menu, .prompt, :not(.excalidraw) .popover, .modal, .modal-bg, .document-search-container, .suggestion-container) {
  animation: op var(--animation);
}

body.modal-animation :is(.prompt, .popover, .modal) {
  animation: op var(--animation), bounce var(--animation);
}

@keyframes op {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 0.7;
  }
  70% {
    opacity: 0.95;
  }
  100% {
    opacity: 1;
  }
}
@keyframes bounce {
  0% {
    transform: scale(0.99);
  }
  70% {
    transform: scale(1.01);
  }
  100% {
    transform: scale(1);
  }
}
:is(.menu-normal .menu, .menu-suggestion .suggestion-container, .menu-graph .graph-control-section) {
  background-color: hsla(var(--background-secondary-hsl), 0.5) !important;
  backdrop-filter: blur(var(--size-4-8));
  will-change: backdrop-filter;
}

body.modal-blur .modal-bg {
  opacity: 1 !important;
  background-color: hsla(var(--background-secondary-hsl), 0.5) !important;
  backdrop-filter: blur(var(--size-4-1));
  will-change: backdrop-filter;
}

.mod-search-suggestion .suggestion {
  background-color: transparent;
}

/* #endregion modal */
/* #region scrollbar */
@property --scrollbar-color {
  syntax: "<color>";
  inherits: true;
  initial-value: rgba(0, 0, 0, 0);
}
/* ! `overflow: overlay` is deprecated, Chrome >= 114 (Obsidian 1.4) is equal to `overflow: auto` */
/* !Chrome >= 121 no longer support `-webkit-scrollbar-*`, no effect currently */
/* usage of `@property`: https://stackoverflow.com/a/74050413/20058211 */
/* usage of `-webkit-text-fill-color`: https://stackoverflow.com/a/46304690/20058211 */
body:not(.is-mobile) .mod-settings :is(.vertical-tab-content, .vertical-tab-header) {
  scrollbar-gutter: stable;
}
body:not(.is-mobile).scrollbar-hover-accent {
  --setting-scrollbar-hover: hsla(var(--color-accent-hsl), 40%);
}
body:not(.is-mobile).scrollbar-hover-expand ::-webkit-scrollbar-thumb:hover, body:not(.is-mobile).scrollbar-hover-expand ::-webkit-scrollbar-thumb:active {
  border-width: var(--size-2-1) !important;
}
body:not(.is-mobile) ::-webkit-scrollbar {
  width: var(--size-4-3) !important;
  height: var(--size-4-3) !important;
  background-color: transparent !important;
}
body:not(.is-mobile) ::-webkit-scrollbar-track {
  background-color: transparent !important;
  box-shadow: none !important;
}
body:not(.is-mobile) ::-webkit-scrollbar-thumb {
  border-radius: var(--size-2-3) !important;
  border: 3.6px solid transparent !important;
  background-color: var(--scrollbar-color) !important;
}
body:not(.is-mobile) ::-webkit-scrollbar-thumb:hover {
  --scrollbar-color: var(--setting-scrollbar-hover);
}
body:not(.is-mobile) ::-webkit-scrollbar-thumb:active {
  --scrollbar-color: hsla(var(--color-accent-hsl), 64%);
}
body:not(.is-mobile):not(.scrollbar-movein-animation-enable) {
  --scrollbar-color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile).scrollbar-movein-animation-enable :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .workspace-leaf-content:not([data-type*=graph], [data-type*=pdf]) .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .markdown-source-view .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .markdown-embed-content .markdown-rendered, pre code, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-menu .Stack .Island.App-menu__left, .scrollbar), .excalidraw-contextMenuContainer .popover, .kanban-plugin__board, .kanban-plugin__lane-items, .kanban-plugin__autocomplete) {
  transition: --scrollbar-color var(--animation);
}
body:not(.is-mobile).scrollbar-movein-animation-enable :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .workspace-leaf-content:not([data-type*=graph], [data-type*=pdf]) .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .markdown-source-view .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .markdown-embed-content .markdown-rendered, pre code, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-menu .Stack .Island.App-menu__left, .scrollbar), .excalidraw-contextMenuContainer .popover, .kanban-plugin__board, .kanban-plugin__lane-items, .kanban-plugin__autocomplete):hover {
  --scrollbar-color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile).scrollbar-movein-animation-enable textarea {
  color: transparent;
  transition: color var(--animation);
  -webkit-text-fill-color: var(--text-normal);
}
body:not(.is-mobile).scrollbar-movein-animation-enable textarea:hover {
  color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile).scrollbar-movein-animation-enable textarea * {
  -webkit-text-fill-color: initial;
}
body:not(.is-mobile).scrollbar-movein-animation-enable textarea::-webkit-scrollbar-thumb {
  box-shadow: 0 0 0 10px inset;
  border-width: 3.2px;
  background-clip: content-box;
  background-color: transparent !important;
}

body.scrollbar-hide :not([style="overflow-x: auto;"])::-webkit-scrollbar {
  display: none !important;
}

/* #endregion scrollbar */
/* #region tab */
body.tab-float {
  --tab-radius: var(--size-2-3);
}
body.tab-float .workspace-tab-header-container {
  --tab-outline-width: 0 !important;
}
body.tab-float .mod-root .workspace-tab-header-container-inner {
  margin-top: var(--size-4-1);
  padding-bottom: var(--size-4-1);
  padding-left: var(--size-4-1);
}
body.tab-float .mod-root .workspace-tab-header {
  padding-block: 0 !important;
  transition: color var(--animation), width var(--animation);
}
body.tab-float .mod-root .workspace-tab-header.is-active {
  --tab-radius-active: var(--size-2-3);
  box-shadow: var(--shadow-s);
}
body.tab-float .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button {
  padding: var(--size-2-1);
}
body.tab-float .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button:hover {
  background-color: var(--frame-background-color);
}
body.tab-float .mod-root .workspace-tabs:not(.mod-stacked):not(.mod-active) .workspace-tab-header.is-active {
  --tab-background-active: hsla(var(--background-primary-hsl), 0.5);
}
body.tab-float.theme-dark .mod-root .workspace-tab-header.is-active {
  box-shadow: none;
}
body.tab-float .workspace-split.mod-root .workspace-tab-header.is-active::before, body.tab-float .workspace-split.mod-root .workspace-tab-header.is-active::after {
  box-shadow: none;
}
body.tab-float .workspace-tab-header-new-tab {
  padding-top: var(--size-4-1);
  margin-left: calc(var(--size-4-3) * -1);
}

.view-header-title-parent:empty + .view-header-title {
  max-width: 70%;
  text-align: center;
  cursor: text;
}
.view-header-title-parent:not(:empty) + .view-header-title:after {
  content: "";
  width: 20%;
  inset-block: 0;
  position: absolute;
  cursor: text;
}

body.tab-show-close-all .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button,
body.tab-show-close-part .mod-root .workspace-tab-header:not(.is-active) .workspace-tab-header-inner-close-button {
  display: none;
}
body.tab-show-close-all .mod-root .workspace-tab-header:hover .workspace-tab-header-inner-close-button,
body.tab-show-close-part .mod-root .workspace-tab-header:not(.is-active):hover .workspace-tab-header-inner-close-button {
  display: inherit;
}

body.tab-title-bar-text-small .view-header {
  --file-header-font-size: calc(var(--font-ui-smaller) - var(--size-2-1));
}

body.tab-title-bar-text-hidden .workspace-leaf-content:not([data-type=excalidraw]) .view-header-title-container {
  opacity: 0;
  transition: var(--animation);
  transition-delay: var(--animation-delay);
}
body.tab-title-bar-text-hidden .workspace-leaf-content:not([data-type=excalidraw]) .view-header-title-container:hover {
  opacity: 1;
  transition-delay: 0s;
}

body.tab-title-bar-round .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  margin: var(--size-4-1);
  margin-bottom: 0;
  padding: 0 var(--size-2-3) !important;
  border: var(--size-2-1) solid var(--background-modifier-hover);
  border-radius: var(--radius-m);
  transition: var(--animation);
  width: calc(100% - var(--size-4-2)) !important;
  background-color: hsl(var(--background-secondary-hsl));
}
body.tab-title-bar-round .workspace-leaf-content:not([data-type=excalidraw]) .view-header .view-header-title-container:after {
  content: none;
}
body.tab-title-bar-round .workspace-leaf.mod-active .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  background-color: var(--md-container-bg);
}
body.tab-title-bar-round.tab-title-bar-shadow .workspace-leaf.mod-active .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  box-shadow: 0 0 var(--size-2-1) var(--background-modifier-box-shadow);
}

/* 切换标签动画，参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow */
body.tab-slide-up .workspace-split .workspace-tabs:not(.mod-stacked) .workspace-leaf-content:not([data-type=pdf]) .view-content,
.workspace-leaf-content:not(:has(.view-content)) {
  animation: slide-up var(--animation) forwards;
}

@keyframes slide-up {
  0% {
    transform: translateY(0%);
    opacity: 0;
  }
  15% {
    transform: translateY(0.1rem);
    opacity: 0;
  }
  25% {
    transform: translateY(0.15rem);
  }
  45% {
    opacity: 0.5;
  }
  65% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(0%);
    opacity: 1;
  }
}
.is-sidedock-collapsed {
  opacity: 0;
  transition: var(--animation);
}

.search-result-file-matches {
  border-radius: var(--radius-m);
}

/* #endregion tab */
/* #region titlebar */
body.titlebar-button-style.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button {
  padding: 0 14px;
}
body.titlebar-button-style.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button svg {
  width: 100%;
  height: 32%;
}
body.titlebar-button-style.is-frameless:not(.is-hidden-frameless):is(.mod-windows, .mod-linux) .titlebar-button svg:not([class*=logo]) {
  width: 100%;
  height: 42%;
}
body.titlebar-button-style .titlebar-button.mod-close:hover {
  color: var(--text-on-accent);
}
body.titlebar-button-style .workspace-tab-header-new-tab {
  padding-bottom: var(--size-2-1);
}

.theme-light {
  --ribbon-background: hsla(calc(var(--accent-h) + 16),
      calc(var(--accent-s) / 1.2),
      calc(100% - (100% - var(--accent-l)) / 4),
      60%);
}

.theme-dark {
  --ribbon-background: hsla(calc(var(--accent-h) + 16),
      calc(var(--accent-s) / 1.5),
      calc(var(--accent-l) - 40%),
      60%);
}

.workspace-ribbon.mod-left {
  border-right: 0;
  --ribbon-background-collapsed: var(--ribbon-background);
}
.workspace-ribbon.mod-left::before {
  height: var(--header-height);
  border-bottom: 0;
}

/* 参考 minimal theme */
:is(body, body.is-focused) :is(.mod-top .workspace-tab-header-container, .sidebar-toggle-button.mod-left, .titlebar),
:is(body, body.is-focused) .workspace-ribbon.mod-left::before {
  --titlebar-container: var(--frame-outline-color);
  --frame-divider-color: var(--frame-outline-color);
  --titlebar-background: var(--frame-background-color);
  --titlebar-background-focused: var(--frame-background-color);
  --tab-container-background: var(--frame-background-color);
  --titlebar-text-color: var(--frame-muted-color);
  --tab-outline-color: var(--frame-outline-color);
  --tab-divider-color: var(--frame-outline-color);
  --background-modifier-hover: var(--frame-outline-color);
  --icon-color: var(--frame-muted-color);
  --icon-color-hover: var(--frame-muted-color);
  --icon-color-focused: var(--color-base-100);
  --tab-text-color: var(--frame-muted-color);
  --tab-text-color-hover: var(--frame-muted-color);
  --tab-text-color-focused: var(--frame-muted-color);
}
:is(body, body.is-focused) .clickable-icon:active {
  color: var(--text-normal);
}

.workspace.is-left-sidedock-open .sidebar-toggle-button.mod-left .clickable-icon,
.workspace.is-right-sidedock-open .sidebar-toggle-button.mod-right .clickable-icon {
  color: var(--color-accent);
}

body.titlebar-colorful.theme-light {
  --frame-background-color: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 18%));
  --frame-outline-color: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 23.5%));
  --frame-muted-color: hsl(var(--accent-h),
      calc(var(--accent-s) - 20%),
      ar(--accent-l));
}
body.titlebar-colorful.theme-dark {
  --frame-background-color: hsl(var(--accent-h), 12%, 38%);
  --frame-outline-color: hsl(calc(var(--accent-h) - 6),
      calc(var(--accent-s) + 12%),
      40%);
  --frame-muted-color: hsl(var(--accent-h),
      calc(var(--accent-s) - 20%),
      calc(var(--accent-l) + 20%));
}
body.titlebar-colorful .workspace.is-left-sidedock-open .sidebar-toggle-button.mod-left .clickable-icon,
body.titlebar-colorful .workspace.is-right-sidedock-open .sidebar-toggle-button.mod-right .clickable-icon {
  color: var(--text-on-accent);
}
body.titlebar-colorful :is(.document-search-close-button, .modal-close-button)::before {
  background-color: var(--text-normal);
}

/* #endregion titlebar */
/* #region print */
body.export-pdf-transparent .print {
  --background-primary: transparent;
}

.print code {
  white-space: pre-wrap !important;
}
.print :is(.markdown-preview-view, .markdown-rendered) {
  background-color: var(--background-primary) !important;
}
.print pre::before {
  right: var(--size-4-2) !important;
}
.print pre code {
  tab-size: 4;
}

/* #endregion print */
/* #region statusbar */
body {
  --stauts-bar-background-opacity: 1;
}
body.theme-light .status-bar {
  --status-bar-background: hsla(var(--accent-h),
      var(--accent-s),
      calc(100% - (100% - var(--accent-l)) / 8),
      var(--stauts-bar-background-opacity));
}
body.theme-dark .status-bar {
  --status-bar-background: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) / 3),
      var(--stauts-bar-background-opacity));
}

body.status-bar-enable .status-bar {
  padding: var(--size-2-1) var(--size-4-1);
  width: fit-content;
  transition: var(--animation);
}
body.status-bar-enable.status-bar-hidden .status-bar {
  opacity: 0;
  transition-delay: var(--animation-delay);
}
body.status-bar-enable.status-bar-hidden .status-bar:hover {
  transition-delay: 0s;
  opacity: 1;
}
body.status-bar-enable.status-bar-style-float .status-bar {
  --status-bar-radius: var(--size-2-3);
  --status-bar-border-width: 1px;
  bottom: var(--size-4-1);
  right: var(--size-4-1);
  box-shadow: 0 0 var(--size-2-1) var(--background-modifier-box-shadow);
}
body.status-bar-enable.status-bar-style-float.status-bar-style-center:is(.status-bar-default, .status-bar-hidden) .status-bar {
  left: 50%;
  transform: translateX(-50%);
}
body.status-bar-enable.status-bar-style-float.status-bar-scroll .status-bar {
  transform: translateX(calc(100% - var(--size-4-2)));
  transition-delay: var(--animation-delay);
  right: 0;
  padding: var(--size-4-1);
}
body.status-bar-enable.status-bar-style-float.status-bar-scroll .status-bar:hover {
  transform: translateX(0);
  transition-delay: 0s;
}

/* #endregion statusbar */
/* #region icons */
.modal svg[class*=lucide-folder] {
  --icon-size: 20px;
}

svg.lucide-layout-dashboard rect {
  rx: 1.8;
  stroke-width: 2;
}

svg.excalidraw-icon {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><g stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 19l7-7l3 3l-7 7l-3-3z"/><path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"/><path d="M2 2l7.586 7.586"/><circle cx="11" cy="11" r="2"/></g></svg>');
}

svg.spreadsheet {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><path d="M3 9h18M3 15h18M12 3v18"/></g></svg>');
}

svg[class*=lucide-folder] {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256"><path fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M216 72h-85.3l-27.8-20.8a15.6 15.6 0 0 0-9.6-3.2H40a16 16 0 0 0-16 16v136a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V88a16 16 0 0 0-16-16ZM93.3 96H40V64h53.3l21.4 16l-21.4 16M216 200H40v-88h53.3a15.6 15.6 0 0 0 9.6-3.2L130.7 88H216Z"/></svg>');
}

svg.lucide-sticky-note {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.4"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-8 10v-6m-3 3h6"/></g></svg>');
}

svg.lucide-image {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6" /><circle cx="10" cy="13" r="2" /><path d="m20 17l-1.09-1.09a2 2 0 0 0-2.82 0L10 22" /></g></svg>');
}

svg.lucide-file {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-4 5H8m8 4H8m2-8H8"/></g></svg>');
}

svg.lucide-copy {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2" /><rect width="6" height="4" x="9" y="3" rx="2" /><path d="M9 12h6m-6 4h6" /></g></svg>');
}

svg.database-folder-icon {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="3.5"><path d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5ZM4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68M34 41s-3.5-5.862-3.5-10c0-4.137 3.5-10 3.5-10m0 20s3.5-5.862 3.5-10c0-4.137-3.5-10-3.5-10m10 10H24"/></g></svg>');
}

body.titlebar-button-style .mod-maximize svg {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12"><rect x="2" y="2" width="8" height="8" rx="1.5" stroke="currentColor" stroke-width="0.8" fill="none"/></svg>');
}

body.titlebar-button-style.is-maximized .mod-maximize svg {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024"><g fill="none" stroke="currentColor" stroke-width="60" stroke-linecap="round" stroke-linejoin="round"><path d="M602 932H234c-77.3 0-140-62.7-140-140V424c0-77.3 62.7-140 140-140h368c77.3 0 140 62.7 140 140v368c0 77.3-62.7 140-140 140z" /><path d="M284 284v-50c0-77.3 62.7-140 140-140h368c77.3 0 140 62.7 140 140v368c0 77.3-62.7 140-140 140h-50" /></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-folder-collapse-indicator svg {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 42 42"><path d="M24.833 12.5H40.25a3.75 3.75 0 0 1 3.745 3.55l.005.2v19a3.75 3.75 0 0 1-3.55 3.745l-.2.005H7.75a3.75 3.75 0 0 1-3.745-3.55L4 35.25V18.999L17.804 19l.226-.007a3.75 3.75 0 0 0 2.547-1.219l.147-.172 4.109-5.102zM17.061 9c.832 0 1.639.277 2.294.784l.175.144 2.444 2.138-3.197 3.968-.094.105c-.2.197-.46.322-.739.353l-.14.008L4 16.499V12.75a3.75 3.75 0 0 1 3.55-3.745L7.75 9h9.31z" fill="currentColor"/></svg>');
}

:is(:is(body.titlebar-button-style .mod-maximize, body.titlebar-button-style.is-maximized .mod-maximize, body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-folder-collapse-indicator) svg, svg:is(.excalidraw-icon, .spreadsheet, [class*=lucide-folder], .lucide-sticky-note, .lucide-image, .lucide-file, .lucide-copy, .database-folder-icon)) {
  background-color: currentColor;
  -webkit-mask-size: 100% 100%;
}
:is(:is(body.titlebar-button-style .mod-maximize, body.titlebar-button-style.is-maximized .mod-maximize, body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-folder-collapse-indicator) svg, svg:is(.excalidraw-icon, .spreadsheet, [class*=lucide-folder], .lucide-sticky-note, .lucide-image, .lucide-file, .lucide-copy, .database-folder-icon)) path {
  display: none;
}

.markdown-rendered pre .copy-code-button {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2" /><rect width="6" height="4" x="9" y="3" rx="2" /><path d="M9 12h6m-6 4h6" /></g></svg>');
}

:where(body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title, body.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link:not(.is-unresolved), .cm-hmd-internal-link .cm-underline))::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-4 5H8m8 4H8m2-8H8"/></g></svg>');
}

body.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link, :is(.cm-link:not(.cm-hmd-footnote), .cm-url) .cm-underline)::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="svg-icon lucide-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path></svg>');
}

.workspace-leaf-content[data-type=tag] .tree-item-self::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"/><circle cx="7.5" cy="7.5" r=".5" fill="currentColor"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is(.is-unsupported)::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M10 10.3c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3c0 1.3-2 2-2 2m0 4h.01" /></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=png], [data-path$=svg], [data-path$=jpeg], [data-path$=jpg], [data-path$=bmp], [data-path$=gif], [data-path$=webp], [data-path$=tiff])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6" /><circle cx="10" cy="13" r="2" /><path d="m20 17l-1.09-1.09a2 2 0 0 0-2.82 0L10 22" /></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=pdf])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6m-4" /></g><path d="M16.714 14.869c-.6-.642-2.31-.466-3.165-.348-.844-.562-1.41-1.34-1.808-2.48.192-.862.497-2.174.266-3-.207-1.403-1.857-1.264-2.093-.316-.217.862-.02 2.062.344 3.594-.492 1.28-1.224 3-1.74 3.986-.983.552-2.31 1.403-2.506 2.474-.162.847 1.278 2.957 3.74-1.67 1.1-.397 2.3-.885 3.36-1.078.929.547 2.015.912 2.742.912 1.254 0 1.376-1.512.86-2.074zM6.98 19.037c.251-.734 1.204-1.58 1.494-1.875-.933 1.623-1.494 1.912-1.494 1.875zm4.01-10.21c.363 0 .33 1.72.087 2.185-.215-.744-.21-2.185-.088-2.185zM9.79 16.144c.477-.905.885-1.981 1.214-2.93.408.809.929 1.457 1.479 1.901-1.022.23-1.911.703-2.693 1.03zm6.467-.268q-.246.322-1.834-.417c1.726-.14 2.01.29 1.834.417z" fill="currentColor"/></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=mp3], [data-path$=flac], [data-path$=wav], [data-path$=ape], [data-path$=alac], [data-path$=aac])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M17.5 22h.5c.5 0 1-.2 1.4-.6c.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3" /><path d="M14 2v6h6M10 20v-1a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0Zm-4 0v-1a2 2 0 1 0-4 0v1a2 2 0 1 0 4 0Z"/><path d="M2 19v-3a6 6 0 0 1 12 0v3"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=mkv], [data-path$=mp4], [data-path$=flv], [data-path$=webm], [data-path$=avi])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 8V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4"/><path d="M14 2v6h6m-10 7.5l4 2.5v-6l-4 2.5"/><rect width="8" height="6" x="2" y="12" rx="1"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=ttf], [data-path$=otf], [data-path$=ttc], [data-path$=otc])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6M9 13v-1h6v1m-4 5h2m-1-6v6"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=zip], [data-path$="7z"], [data-path$=tar])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 22V4c0-.5.2-1 .6-1.4C5 2.2 5.5 2 6 2h8.5L20 7.5V20c0 .5-.2 1-.6 1.4c-.4.4-.9.6-1.4.6h-2"/><path d="M14 2v6h6"/><circle cx="10" cy="20" r="2"/><path d="M10 7V6m0 6v-1m0 7v-2"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=js], [data-path$=css], [data-path$=html], [data-path$=py], [data-path$=c], [data-path$=cpp], [data-path$=java], [data-path$=rs], [data-path$=ts], [data-path$=tsx], [data-path$=jsx], [data-path$=json], [data-path$=bash], [data-path$=sh])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4"/><path d="M14 2v6h6M9 18l3-3l-3-3m-4 0l-3 3l3 3"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=canvas])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-layout-dashboard svg-icon"><rect x="3" y="3" rx="1.8" width="7" height="9"></rect><rect x="14" y="3" rx="1.8" width="7" height="5"></rect><rect x="14" y="12" rx="1.8" width="7" height="9"></rect><rect x="3" y="16" rx="1.8" width="7" height="5"></rect></svg>');
}

/* #endregion icons */
/* #region notice, tooltips */
body.message-tooltip-hide .tooltip {
  display: none;
}

body.message-tooltip-hide-arrow .tooltip-arrow {
  display: none;
}

body.message-modify {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) - 30) var(--accent-s) calc(var(--accent-l) - 20%)));
}
body.message-modify :is(.tooltip, .notice) {
  color: var(--setting-message-fg, var(--text-on-accent));
}
body.message-modify:not(.color-active-default).theme-light {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) + 60) calc(var(--accent-s) - 12%) calc(var(--accent-l) + 4%)));
}
body.message-modify:not(.color-active-default).theme-dark {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) + 60) calc(var(--accent-s) - 12%) calc(var(--accent-l) - 12%)));
}

body.message-tooltip-hide-arrow .tooltip-arrow {
  display: none;
}

/* #endregion message */
/* #region background image */
@media screen and (min-width: 768px) {
  body:is(.bg-static, .bg-live) {
    --bg-opacity: 0.75;
  }
  body:is(.bg-static, .bg-live) .workspace-split.mod-root,
  body:is(.bg-static, .bg-live) .workspace-split.mod-root .workspace-leaf-content {
    background-color: hsla(var(--editor-bg), calc(var(--bg-opacity) / 2));
  }
  body:is(.bg-static, .bg-live) :not(.mod-root) .workspace-leaf {
    background-color: hsla(var(--background-secondary-hsl), var(--bg-opacity));
  }
  body:is(.bg-static, .bg-live) .workspace::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-mask-repeat: no-repeat;
    background-color: var(--setting-bg-color, var(--text-accent));
    opacity: 0.5;
  }
  /* 参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow */
  body {
    --setting-bg-static: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 120" preserveAspectRatio="none" xml:space="preserve"><path opacity="0.3" d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z"/><path opacity="0.4" d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z"/><path opacity="0.6" d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z"/></svg>');
    --setting-bg-live: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 24 150 28' preserveAspectRatio='none' shape-rendering='auto' style='position:relative;width:100%25;height:15vh;min-height:100px;max-height:150px'%3E%3Cstyle%3E.parallax>use%7Banimation:move-forever 25s cubic-bezier(.55, .5, .45, .5) infinite%7D.parallax>use:nth-child(1)%7Banimation-delay:-33.6s;animation-duration:75.6s%7D.parallax>use:nth-child(2)%7Banimation-delay:2.4s;animation-duration:68.4s%7D.parallax>use:nth-child(3)%7Banimation-delay:-6s;animation-duration:24s%7D.parallax>use:nth-child(4)%7Banimation-delay:19.2s;animation-duration:73.2s%7D@keyframes move-forever%7B0%25%7Btransform:translate3d(-90px, 0, 0)%7D100%25%7Btransform:translate3d(85px, 0, 0)%7D%7D@media (max-width:768px)%7B.waves%7Bheight:40px;min-height:40px%7D%7D%3C/style%3E%3Cdefs%3E%3Cpath id='gentle-wave' d='M-160 44c30 0 58-18 88-18s58 18 88 18 58-18 88-18 58 18 88 18v44h-352z'/%3E%3C/defs%3E%3Cg class='parallax'%3E%3Cuse xlink:href='%23gentle-wave' x='48' opacity='0.3'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='3' opacity='0.4'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='8' opacity='0.6'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='14' opacity='0.5'/%3E%3C/g%3E%3C/svg%3E");
  }
  body.bg-static .workspace::before {
    -webkit-mask-image: var(--setting-bg-static);
    -webkit-mask-size: 300% 300px;
    -webkit-mask-position: 88.5% -73px;
    transform: rotateZ(180deg);
  }
  /* 参考 https://www.cssscript.com/animated-waves-svg */
  body.bg-live .workspace::before {
    -webkit-mask-image: var(--setting-bg-live);
    -webkit-mask-size: 100% 160px;
    -webkit-mask-position-y: 100%;
  }
}
/* #endregion background */
/* #region labeled-navigator */
/* MIT License | Copyright (c) Stephan Ango (@kepano)

Labeled Nav snippet for Obsidian

author: @kepano
version: 2.0.0

Support my work:
https://github.com/sponsors/kepano

*/
.labeled-nav.mod-windows,
.labeled-nav.is-fullscreen:not(.colorful-frame) {
  --labeled-nav-top-margin: 0;
}

.labeled-nav {
  --labeled-nav-top-margin: var(--header-height);
  /* refactor this using a new variable for border above labeled nav
  in different conditions e.g. OSes and colorful frame */
}
.labeled-nav.is-translucent .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  background-color: transparent;
}
.labeled-nav.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .workspace-tabs.mod-top-left-space .workspace-tab-header-container {
  padding-left: 0;
}
.labeled-nav.mod-macos .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.mod-macos.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .mod-top .workspace-tab-header-container:before {
  -webkit-app-region: drag;
  position: absolute;
  width: calc(100% - var(--divider-width));
  height: calc(var(--header-height) - var(--tab-outline-width));
  border-bottom: 0 solid var(--tab-outline-color);
}
.labeled-nav.mod-macos.is-hidden-frameless:not(.is-fullscreen) .workspace-ribbon.mod-left:not(.is-collapsed) {
  border: none;
  --tab-outline-width: 0px;
}
.labeled-nav:not(.is-hidden-frameless) .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.mod-macos:not(.hider-ribbon) .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.colorful-frame.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .mod-top .workspace-tab-header-container:before {
  border-bottom: var(--tab-outline-width) solid var(--tab-outline-color);
}
.labeled-nav:not(.is-hidden-frameless) .workspace-ribbon.mod-left:not(.is-collapsed), .labeled-nav.mod-macos:not(.hider-ribbon) .workspace-ribbon.mod-left:not(.is-collapsed), .labeled-nav.colorful-frame.is-hidden-frameless:not(.is-fullscreen) .workspace-ribbon.mod-left:not(.is-collapsed) {
  --tab-outline-width: 1px;
}
.labeled-nav:not(.is-hidden-frameless) .mod-left-split .mod-top .workspace-tab-header-container:before {
  position: absolute;
  top: 0;
  content: " ";
}
.labeled-nav.hider-ribbon.mod-macos.is-hidden-frameless:not(.is-fullscreen):not(.is-popout-window) .mod-left-split:not(.is-sidedock-collapsed) .workspace-tabs.mod-top-left-space .workspace-tab-header-container {
  padding-left: 0;
}
.labeled-nav:not(.is-grabbing):not(.is-fullscreen).is-hidden-frameless .mod-top .workspace-tab-header-container {
  -webkit-app-region: no-drag;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-spacer {
  display: none;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-inner-title {
  display: inline-block;
  font-weight: 500;
  font-size: var(--font-adaptive-smaller);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container {
  position: relative;
  flex-direction: column-reverse !important;
  height: auto;
  width: 100%;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .sidebar-toggle-button.mod-left {
  position: absolute;
  justify-content: flex-end;
  padding-right: var(--size-4-2);
  top: 0;
  right: 0;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  padding-top: var(--size-4-2);
  margin-top: var(--labeled-nav-top-margin);
  flex-direction: column !important;
  background-color: var(--background-secondary);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-container-inner {
  flex-grow: 1;
  gap: 0;
  padding: var(--size-4-2) var(--size-4-3);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header {
  --icon-color: var(--text-muted);
  --tab-text-color: var(--text-muted);
  --tab-text-color-focused: var(--text-muted);
  padding: 0;
  margin-bottom: 2px;
  border: none;
  height: auto;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:not(:hover) {
  background-color: transparent;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active, .labeled-nav .mod-left-split .mod-top .workspace-tab-header:hover {
  opacity: 1;
  --tab-text-color-active: var(--text-normal);
  --tab-text-color-focused: var(--text-normal);
  --tab-text-color-focused-active: var(--text-normal);
  --tab-text-color-focused-active-current: var(--text-normal);
  --icon-color: var(--text-normal);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header .workspace-tab-header-inner {
  gap: var(--size-2-3);
  padding: var(--size-4-1) var(--size-4-2);
  box-shadow: none;
  border: none;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.has-active-menu:hover,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:hover {
  background-color: transparent;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:hover .workspace-tab-header-inner,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:not(.is-active):hover .workspace-tab-header-inner {
  background-color: var(--nav-item-background-hover);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:hover .workspace-tab-header-inner-icon,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active .workspace-tab-header-inner-icon {
  color: var(--icon-color-active);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container {
  border: none;
  padding: 0;
}

.labeled-nav .workspace-tab-header-container-inner {
  --background-secondary: hsl(var(--background-secondary-hsl)) ;
}
.labeled-nav .nav-buttons-container {
  justify-self: flex-start;
}

/* #endregion labeled-navigator */
/* #region [[panel]] */
/* #region panel-base*/
.nav-buttons-container {
  justify-content: flex-start;
  padding-left: var(--size-4-1);
}

body {
  --nav-item-children-padding-left: var(--size-4-2);
}

/* #endregion panel-base */
/* #region tag */
.workspace-leaf-content[data-type=tag] .tree-item-self::before {
  background-color: var(--accent-active);
  line-height: var(--line-height-tight);
  width: 1rem;
  height: 1rem;
  margin-left: calc(-1 * var(--size-4-5));
  margin-right: var(--size-4-3);
  transform: translateY(var(--size-4-1));
}
.workspace-leaf-content[data-type=tag] .tree-item-self:has(.tree-item-icon)::before {
  background-color: var(--folder-color);
}
.workspace-leaf-content[data-type=tag] .tree-item-icon.collapse-icon {
  cursor: pointer;
}
.workspace-leaf-content[data-type=tag] .tree-item-icon.collapse-icon svg {
  color: transparent;
}

/* #endregion tag */
/* #region bookmark */
.workspace-leaf-content[data-type=bookmarks] {
  --nav-item-color-active: var(--text-on-accent);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self.mod-collapsible .tree-item-icon {
  margin-right: var(--size-4-1);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self:not(.mod-collapsible) {
  padding-left: var(--size-2-3);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self:not(.mod-collapsible) .tree-item-icon {
  transform: translateY(var(--size-2-1));
  color: var(--accent-active);
  width: 1.3rem;
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self.is-active .tree-item-icon {
  color: var(--nav-item-color-active);
}

/* #endregion bookmark */
/* #region graph */
body {
  --graph-node: var(--setting-graph-node, var(--text-muted));
  --graph-node-unresolved: var(--setting-graph-node-unresolved, var(--text-faint));
  --graph-node-focused: var(--setting-graph-node-focus, var(--accent-active));
}

.graph-controls {
  top: var(--size-4-1);
  right: var(--size-4-1);
}

/* #endregion graph */
/* #region outline */
body {
  /* 引导线粗细 */
  --outline-guideline-width: var(--size-2-1);
  /* 引导线颜色 */
  --outline-guideline-color: var(--accent-inactive);
  /* 引导线颜色 */
  --outline-guideline-color-alt: var(--accent-active);
  /* 一行高度 */
  --outline-item-height: calc(var(--nav-item-size) * 1.8);
}

.workspace-leaf-content[data-type=outline] .tree-item-inner {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  height: var(--outline-item-height);
  line-height: var(--outline-item-height);
}

.workspace-leaf-content[data-type=outline] .tree-item-self.is-active > .tree-item-inner {
  color: var(--text-on-accent);
}

body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item {
  position: relative;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self {
  position: relative;
  margin-bottom: 0;
  white-space: nowrap;
  margin-top: -1px;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-inner {
  padding-left: var(--size-4-1);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-inner::before {
  content: "";
  width: calc(var(--size-4-1) * 1.2);
  height: calc(var(--size-4-1) * 1.2);
  border: var(--size-2-1) solid var(--outline-guideline-color-alt);
  border-radius: 50%;
  position: absolute;
  top: 50%;
  transform: translate(calc(-1 * var(--size-4-5)), -50%);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self.is-active .tree-item-inner::before {
  border-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-icon ~ .tree-item-inner {
  padding-left: var(--size-4-1);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-icon ~ .tree-item-inner::before {
  content: none;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item.is-collapsed .tree-item-icon::before {
  box-shadow: 0 0 0 var(--size-4-1) var(--background-modifier-hover);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item::after {
  content: "";
  width: var(--outline-guideline-width);
  position: absolute;
  background-color: transparent;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -14px;
  height: calc(100% - var(--outline-item-height) + var(--size-4-8));
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon {
  cursor: pointer;
  transform: translateY(8px);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon::before {
  width: var(--size-4-2);
  height: var(--size-4-2);
  background-color: var(--outline-guideline-color-alt);
  border-radius: 50%;
  position: absolute;
  left: 3px;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon svg path {
  display: none;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self.is-active .tree-item-icon::before {
  background-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item::after {
  background-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-self:hover + .tree-item-children .tree-item::after {
  background-color: transparent;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover::after, body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover ~ .tree-item::after {
  background-color: transparent;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover::before {
  content: "";
  position: absolute;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -14px;
  bottom: calc(100% - (var(--outline-item-height) + var(--size-4-2)) / 2 - 1px);
  width: var(--size-4-6);
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--outline-guideline-width) solid var(--outline-guideline-color);
  border-left: var(--outline-guideline-width) solid var(--outline-guideline-color);
  z-index: 9;
}
body.outline-enable .workspace-leaf-content[data-type=outline] :is(.tree-item-children, .tree-item-self) {
  padding-left: 28px !important;
  margin-left: 0 !important;
  border-left: none;
}

/* #endregion outline */
/* #region file-explorer */
body {
  --file-folding-offset: 28px;
  --folder-color-rgb: 245, 180, 0;
  --folder-color: rgb(var(--setting-color-dirs, var(--folder-color-rgb)));
  --folder-hover-color: rgba(var(--setting-color-dirs, var(--folder-color-rgb)),
      0.24);
  --nav-item-size: 0.9rem;
  --line-height-tight: 1.6;
  --nav-indentation-guide-color: hsla(var(--accent-h), 20%, 50%, 0.2);
  --nav-indentation-guide-width: 1.8px;
}

.theme-light {
  --folder-inactive: 85%;
}

.theme-dark {
  --folder-inactive: 70%;
}

.nav-file-title.is-active:not(.is-selected) {
  color: var(--text-on-accent);
}

body:not(.is-grabbing) :is(.nav-file-title.is-being-dragged, .nav-folder-title.is-being-dragged),
.nav-file-title.is-being-dragged,
.nav-folder-title.is-being-dragged {
  background-color: var(--accent-inactive);
  color: var(--text-normal);
}

.workspace-leaf-content[data-type=file-explorer] {
  --line-height-tight: var(--explorer-item-height, 1.6);
}

body.explorer-vault-name-compact .workspace-leaf-content[data-type=file-explorer] .nav-header {
  position: absolute;
  width: fit-content;
  right: 0;
  background-color: hsl(var(--background-secondary-hsl));
  z-index: calc(var(--layer-cover) + 1);
}
body.explorer-vault-name-compact .workspace-leaf-content[data-type=file-explorer] .nav-buttons-container {
  justify-content: flex-end;
}
body.explorer-vault-name-compact .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root {
  padding-top: var(--size-4-12);
}
body.explorer-vault-name-compact .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root > .nav-folder-title {
  position: fixed;
  height: calc(var(--header-height) + var(--size-2-1));
  line-height: 2;
  top: var(--header-height);
  left: var(--size-4-3);
  right: 0;
  transform: translate(calc(-1 * var(--size-4-5)), calc(-1 * var(--size-4-10)));
  z-index: var(--layer-cover);
  color: var(--color-accent-2);
  font-size: 1rem;
  font-weight: bold;
  background-color: hsl(var(--background-secondary-hsl));
}
body.explorer-vault-name-compact .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root > .nav-folder-title:hover {
  background-color: hsl(var(--background-secondary-hsl)) !important;
}
body.explorer-vault-name-compact .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root > .nav-folder-title > .tree-item-inner {
  padding-left: 0;
}

body.explorer-vault-name-hidden .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root {
  padding-top: var(--size-4-2);
}
body.explorer-vault-name-hidden .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root > .nav-folder-title {
  display: none;
}

body.theme-dark.explorer-icon .is-active .nav-file-tag {
  --nav-item-background-active: var(--text-on-accent);
}

body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-title:hover {
  background-color: var(--folder-hover-color);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-title-content {
  padding-left: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder > .nav-folder-children {
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder > .nav-folder-children:hover {
  --nav-indentation-guide-color: var(--accent-inactive);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-collapse-indicator {
  cursor: pointer;
  height: fit-content;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-collapse-indicator svg {
  line-height: var(--line-height-tight);
  width: 1rem;
  height: 1rem;
  background-color: var(--folder-color);
  display: inline-block;
  translate: 0 calc(-1 * var(--size-2-1));
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder.is-collapsed .collapse-icon svg.svg-icon {
  transform: none;
  filter: brightness(var(--folder-inactive));
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title-content {
  padding-left: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title:not([data-path$="excalidraw.md"]):not([data-path$=excalidraw])::before {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  opacity: 0.8;
  flex-shrink: 0;
  translate: calc(1px - var(--size-4-5)) 15%;
  background-color: var(--accent-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title:is([data-path$="excalidraw.md"], [data-path$=excalidraw]) .nav-file-tag {
  position: absolute;
  translate: calc(-1 * var(--size-4-5));
  top: var(--size-2-3);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title.is-active:not(.is-selected) {
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title.is-active:not(.is-selected):first-child::before {
  background-color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title.is-active:not(.is-selected) .nav-file-title-content {
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-tag {
  font-size: 0.6rem;
  margin-left: 0;
  margin-right: var(--size-4-2);
  line-height: 2;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title .nav-file-tag {
  background-color: var(--accent-active);
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title.is-active .nav-file-tag {
  background-color: hsl(var(--background-secondary-hsl), 0.9);
  color: var(--nav-item-background-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title-content + .nav-file-tag {
  margin-left: var(--size-2-3);
}

/* 参考 https://github.com/Akifyss/obsidian-border */
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item) {
  position: relative;
}
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item).is-active::after {
  height: calc(100% - var(--size-4-2));
  transform: translateY(-50%);
}
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item)::after {
  content: "";
  position: absolute;
  right: 4px;
  top: 50%;
  width: var(--size-4-1);
  height: 0%;
  border-radius: var(--radius-s);
  background: var(--accent-inactive);
}

body.explorer-title-wrap :is(.nav-file-title-content, .nav-folder-title-content) {
  overflow: visible;
  white-space: pre-wrap;
}

/* #endregion file-explorer */
/* #endregion [[panel]] */
/* #endregion [workspace] */
/* #region [mobile] */
.is-mobile {
  --input-border-width: 1px;
  --input-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12),
    0 2px 3px 0 rgba(0, 0, 0, .05),
    0 1px 1.5px 0 rgba(0, 0, 0, .03),
    0 1px 2px 0 rgba(0, 0, 0, .04),
    0 0 0 0 transparent;
}
.is-mobile:is(.bg-static, .bg-live) {
  --background-modifier-form-field: hsl(var(--background-primary-hsl));
  --interactive-normal: hsl(var(--background-primary-hsl));
}
.is-mobile button:not(.clickable-icon) {
  background-color: var(--interactive-normal) !important;
  box-shadow: var(--input-shadow);
}
.is-mobile .document-search .document-search-button {
  padding: var(--size-4-2);
}

/* #endregion [mobile] */
